//
//Описание API Продвижение
//
//Синхронизация данных из бд происходит раз в 3 минуты.  <br>Изменение статуса происходит раз в 1 минуту. Внутри этого интервала будет сохранено последнее действие по изменению статуса. <br>Изменение ставки происходит раз в 30 секунд. Внутри этого интервала будет сохранено последнее действие по изменению ставки.
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: wb/promotion/v1/response_with_date_inner.proto

package wbPromotion

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ResponseWithDateInner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Даты, за которые необходимо выдать информацию.
	Dates []string `protobuf:"bytes,1,rep,name=dates,proto3" json:"dates,omitempty"`
	// Количество просмотров. <br> За все дни, по всем артикулам WB и платформам.
	Views int32 `protobuf:"varint,2,opt,name=views,proto3" json:"views,omitempty"`
	// Количество кликов.<br> За все дни, по всем артикулам WB и платформам.
	Clicks int32 `protobuf:"varint,3,opt,name=clicks,proto3" json:"clicks,omitempty"`
	// Показатель кликабельности.<br> Отношение числа кликов к количеству показов. Выражается в процентах.<br> За все дни, по всем артикулам WB и платформам.<br>
	Ctr float32 `protobuf:"fixed32,4,opt,name=ctr,proto3" json:"ctr,omitempty"`
	// Средняя стоимость клика, ₽.<br> За все дни, по всем артикулам WB и платформам.
	Cpc float32 `protobuf:"fixed32,5,opt,name=cpc,proto3" json:"cpc,omitempty"`
	// Затраты, ₽.<br> За все дни, по всем артикулам WB и платформам.
	Sum float32 `protobuf:"fixed32,6,opt,name=sum,proto3" json:"sum,omitempty"`
	// Количество добавлений товаров в корзину.<br> За все дни, по всем артикулам WB и платформам.
	Atbs int32 `protobuf:"varint,7,opt,name=atbs,proto3" json:"atbs,omitempty"`
	// Количество заказов.<br> За все дни, по всем артикулам WB и платформам.
	Orders int32 `protobuf:"varint,8,opt,name=orders,proto3" json:"orders,omitempty"`
	// CR(conversion rate) — это отношение количества заказов к общему количеству посещений кампании.<br> За все дни, по всем артикулам WB и платформам.
	Cr int32 `protobuf:"varint,9,opt,name=cr,proto3" json:"cr,omitempty"`
	// Количество заказанных товаров, шт.<br> За все дни, по всем артикулам WB и платформам.
	Shks int32 `protobuf:"varint,10,opt,name=shks,proto3" json:"shks,omitempty"`
	// Заказов на сумму, ₽<br> За все дни, по всем артикулам WB и платформам.
	SumPrice float32 `protobuf:"fixed32,11,opt,name=sum_price,json=sumPrice,proto3" json:"sum_price,omitempty"`
	// Статистка по дням
	Days []*DaysInner `protobuf:"bytes,12,rep,name=days,proto3" json:"days,omitempty"`
	// Статистика по средней позиции товара на страницах поисковой выдачи и каталога (для автоматических кампаний).
	BoosterStats []*BoosterStatsInner `protobuf:"bytes,13,rep,name=boosterStats,proto3" json:"boosterStats,omitempty"`
	// ID кампании
	AdvertId int32 `protobuf:"varint,14,opt,name=advertId,proto3" json:"advertId,omitempty"`
}

func (x *ResponseWithDateInner) Reset() {
	*x = ResponseWithDateInner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_response_with_date_inner_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseWithDateInner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWithDateInner) ProtoMessage() {}

func (x *ResponseWithDateInner) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_response_with_date_inner_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWithDateInner.ProtoReflect.Descriptor instead.
func (*ResponseWithDateInner) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_response_with_date_inner_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseWithDateInner) GetDates() []string {
	if x != nil {
		return x.Dates
	}
	return nil
}

func (x *ResponseWithDateInner) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *ResponseWithDateInner) GetClicks() int32 {
	if x != nil {
		return x.Clicks
	}
	return 0
}

func (x *ResponseWithDateInner) GetCtr() float32 {
	if x != nil {
		return x.Ctr
	}
	return 0
}

func (x *ResponseWithDateInner) GetCpc() float32 {
	if x != nil {
		return x.Cpc
	}
	return 0
}

func (x *ResponseWithDateInner) GetSum() float32 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *ResponseWithDateInner) GetAtbs() int32 {
	if x != nil {
		return x.Atbs
	}
	return 0
}

func (x *ResponseWithDateInner) GetOrders() int32 {
	if x != nil {
		return x.Orders
	}
	return 0
}

func (x *ResponseWithDateInner) GetCr() int32 {
	if x != nil {
		return x.Cr
	}
	return 0
}

func (x *ResponseWithDateInner) GetShks() int32 {
	if x != nil {
		return x.Shks
	}
	return 0
}

func (x *ResponseWithDateInner) GetSumPrice() float32 {
	if x != nil {
		return x.SumPrice
	}
	return 0
}

func (x *ResponseWithDateInner) GetDays() []*DaysInner {
	if x != nil {
		return x.Days
	}
	return nil
}

func (x *ResponseWithDateInner) GetBoosterStats() []*BoosterStatsInner {
	if x != nil {
		return x.BoosterStats
	}
	return nil
}

func (x *ResponseWithDateInner) GetAdvertId() int32 {
	if x != nil {
		return x.AdvertId
	}
	return 0
}

var File_wb_promotion_v1_response_with_date_inner_proto protoreflect.FileDescriptor

var file_wb_promotion_v1_response_with_date_inner_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x1a, 0x29, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x77, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61,
	0x79, 0x73, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92,
	0x03, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x69, 0x74, 0x68, 0x44,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x74, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x63, 0x74, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x70, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x63, 0x70, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x73,
	0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x74, 0x62, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x61, 0x74, 0x62, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x63, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x63, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x68, 0x6b, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x68,
	0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x79, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12,
	0x46, 0x0a, 0x0c, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x0c, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x49, 0x4f, 0x2f, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f,
	0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b,
	0x77, 0x62, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_wb_promotion_v1_response_with_date_inner_proto_rawDescOnce sync.Once
	file_wb_promotion_v1_response_with_date_inner_proto_rawDescData = file_wb_promotion_v1_response_with_date_inner_proto_rawDesc
)

func file_wb_promotion_v1_response_with_date_inner_proto_rawDescGZIP() []byte {
	file_wb_promotion_v1_response_with_date_inner_proto_rawDescOnce.Do(func() {
		file_wb_promotion_v1_response_with_date_inner_proto_rawDescData = protoimpl.X.CompressGZIP(file_wb_promotion_v1_response_with_date_inner_proto_rawDescData)
	})
	return file_wb_promotion_v1_response_with_date_inner_proto_rawDescData
}

var file_wb_promotion_v1_response_with_date_inner_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_wb_promotion_v1_response_with_date_inner_proto_goTypes = []interface{}{
	(*ResponseWithDateInner)(nil), // 0: wb.promotion.v1.ResponseWithDateInner
	(*DaysInner)(nil),             // 1: wb.promotion.v1.DaysInner
	(*BoosterStatsInner)(nil),     // 2: wb.promotion.v1.BoosterStatsInner
}
var file_wb_promotion_v1_response_with_date_inner_proto_depIdxs = []int32{
	1, // 0: wb.promotion.v1.ResponseWithDateInner.days:type_name -> wb.promotion.v1.DaysInner
	2, // 1: wb.promotion.v1.ResponseWithDateInner.boosterStats:type_name -> wb.promotion.v1.BoosterStatsInner
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_wb_promotion_v1_response_with_date_inner_proto_init() }
func file_wb_promotion_v1_response_with_date_inner_proto_init() {
	if File_wb_promotion_v1_response_with_date_inner_proto != nil {
		return
	}
	file_wb_promotion_v1_booster_stats_inner_proto_init()
	file_wb_promotion_v1_days_inner_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wb_promotion_v1_response_with_date_inner_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseWithDateInner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wb_promotion_v1_response_with_date_inner_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wb_promotion_v1_response_with_date_inner_proto_goTypes,
		DependencyIndexes: file_wb_promotion_v1_response_with_date_inner_proto_depIdxs,
		MessageInfos:      file_wb_promotion_v1_response_with_date_inner_proto_msgTypes,
	}.Build()
	File_wb_promotion_v1_response_with_date_inner_proto = out.File
	file_wb_promotion_v1_response_with_date_inner_proto_rawDesc = nil
	file_wb_promotion_v1_response_with_date_inner_proto_goTypes = nil
	file_wb_promotion_v1_response_with_date_inner_proto_depIdxs = nil
}
