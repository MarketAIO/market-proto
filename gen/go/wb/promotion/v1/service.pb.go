//
//Описание API Продвижение
//
//Синхронизация данных из бд происходит раз в 3 минуты.  <br>Изменение статуса происходит раз в 1 минуту. Внутри этого интервала будет сохранено последнее действие по изменению статуса. <br>Изменение ставки происходит раз в 30 секунд. Внутри этого интервала будет сохранено последнее действие по изменению ставки.
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: wb/promotion/v1/service.proto

package wbPromotion

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AdvV0ActiveGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Идентификатор предметной группы, для которой меняется активность
	SubjectId int32 `protobuf:"varint,2,opt,name=subjectId,proto3" json:"subjectId,omitempty"`
	// Новое состояние (`true` - сделать группу активной или `false` - сделать группу неактивной)
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *AdvV0ActiveGetRequest) Reset() {
	*x = AdvV0ActiveGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0ActiveGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0ActiveGetRequest) ProtoMessage() {}

func (x *AdvV0ActiveGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0ActiveGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0ActiveGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *AdvV0ActiveGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV0ActiveGetRequest) GetSubjectId() int32 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *AdvV0ActiveGetRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type AdvV0AllcpmPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Кампании:   * `4` — в каталоге   * `5` — в карточке товара   * `6` — в поиске   * `7` — в рекомендациях на главной странице   * `9` — поиск + каталог
	Type               int32               `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	AdvV0AllcpmPostReq *AdvV0AllcpmPostReq `protobuf:"bytes,2,opt,name=advV0AllcpmPostReq,proto3" json:"advV0AllcpmPostReq,omitempty"`
}

func (x *AdvV0AllcpmPostRequest) Reset() {
	*x = AdvV0AllcpmPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0AllcpmPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0AllcpmPostRequest) ProtoMessage() {}

func (x *AdvV0AllcpmPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0AllcpmPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV0AllcpmPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *AdvV0AllcpmPostRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AdvV0AllcpmPostRequest) GetAdvV0AllcpmPostReq() *AdvV0AllcpmPostReq {
	if x != nil {
		return x.AdvV0AllcpmPostReq
	}
	return nil
}

type AdvV0AllcpmPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV0AllcpmPost200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV0AllcpmPostResponse) Reset() {
	*x = AdvV0AllcpmPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0AllcpmPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0AllcpmPostResponse) ProtoMessage() {}

func (x *AdvV0AllcpmPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0AllcpmPostResponse.ProtoReflect.Descriptor instead.
func (*AdvV0AllcpmPostResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *AdvV0AllcpmPostResponse) GetData() []*AdvV0AllcpmPost200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV0CpmGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Кампания:   * `4` — в каталоге   * `5` — в карточке товара   * `6` — в поиске   * `7` — в рекомендациях на главной странице   * `9` — поиск + каталог
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// Параметр запроса, по которому будет получен список ставок активных кампаний. <br>Должен быть значением `menuId`, `subjectId` или `setId` в зависимости от типа кампании. Получить их можно методом <b>\"Информация о кампании\"</b>
	Param int32 `protobuf:"varint,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *AdvV0CpmGetRequest) Reset() {
	*x = AdvV0CpmGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0CpmGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0CpmGetRequest) ProtoMessage() {}

func (x *AdvV0CpmGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0CpmGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0CpmGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *AdvV0CpmGetRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AdvV0CpmGetRequest) GetParam() int32 {
	if x != nil {
		return x.Param
	}
	return 0
}

type AdvV0CpmGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV0CpmGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV0CpmGetResponse) Reset() {
	*x = AdvV0CpmGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0CpmGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0CpmGetResponse) ProtoMessage() {}

func (x *AdvV0CpmGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0CpmGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV0CpmGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *AdvV0CpmGetResponse) GetData() []*AdvV0CpmGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV0CpmPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV0CpmPostReq *AdvV0CpmPostReq `protobuf:"bytes,1,opt,name=advV0CpmPostReq,proto3" json:"advV0CpmPostReq,omitempty"`
}

func (x *AdvV0CpmPostRequest) Reset() {
	*x = AdvV0CpmPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0CpmPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0CpmPostRequest) ProtoMessage() {}

func (x *AdvV0CpmPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0CpmPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV0CpmPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *AdvV0CpmPostRequest) GetAdvV0CpmPostReq() *AdvV0CpmPostReq {
	if x != nil {
		return x.AdvV0CpmPostReq
	}
	return nil
}

type AdvV0DeleteGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV0DeleteGetRequest) Reset() {
	*x = AdvV0DeleteGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0DeleteGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0DeleteGetRequest) ProtoMessage() {}

func (x *AdvV0DeleteGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0DeleteGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0DeleteGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *AdvV0DeleteGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV0ParamsMenuGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор меню, где размещается кампания (для кампаний в каталоге). <br> Принимает значение параметра `menuId` из кампании. <br> При пустом параметре вернётся весь список существующих значений.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV0ParamsMenuGetRequest) Reset() {
	*x = AdvV0ParamsMenuGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0ParamsMenuGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0ParamsMenuGetRequest) ProtoMessage() {}

func (x *AdvV0ParamsMenuGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0ParamsMenuGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0ParamsMenuGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *AdvV0ParamsMenuGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV0ParamsMenuGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV0ParamsMenuGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV0ParamsMenuGetResponse) Reset() {
	*x = AdvV0ParamsMenuGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0ParamsMenuGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0ParamsMenuGetResponse) ProtoMessage() {}

func (x *AdvV0ParamsMenuGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0ParamsMenuGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV0ParamsMenuGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *AdvV0ParamsMenuGetResponse) GetData() []*AdvV0ParamsMenuGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV0ParamsSetGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор сочетания предмета и пола (для кампаний в карточке товара). <br> Принимает значение параметра `setId` из кампании. <br> При пустом параметре вернётся весь список существующих значений.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV0ParamsSetGetRequest) Reset() {
	*x = AdvV0ParamsSetGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0ParamsSetGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0ParamsSetGetRequest) ProtoMessage() {}

func (x *AdvV0ParamsSetGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0ParamsSetGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0ParamsSetGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *AdvV0ParamsSetGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV0ParamsSetGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV0ParamsSetGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV0ParamsSetGetResponse) Reset() {
	*x = AdvV0ParamsSetGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0ParamsSetGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0ParamsSetGetResponse) ProtoMessage() {}

func (x *AdvV0ParamsSetGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0ParamsSetGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV0ParamsSetGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *AdvV0ParamsSetGetResponse) GetData() []*AdvV0ParamsSetGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV0ParamsSubjectGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор предметной группы, для которой создана кампания (для кампаний в поиске и рекомендациях). <br> Принимает значение параметра `subjectId` из кампании. <br> При пустом параметре вернётся весь список существующих значений.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV0ParamsSubjectGetRequest) Reset() {
	*x = AdvV0ParamsSubjectGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0ParamsSubjectGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0ParamsSubjectGetRequest) ProtoMessage() {}

func (x *AdvV0ParamsSubjectGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0ParamsSubjectGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0ParamsSubjectGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *AdvV0ParamsSubjectGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV0ParamsSubjectGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV0ParamsSubjectGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV0ParamsSubjectGetResponse) Reset() {
	*x = AdvV0ParamsSubjectGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0ParamsSubjectGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0ParamsSubjectGetResponse) ProtoMessage() {}

func (x *AdvV0ParamsSubjectGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0ParamsSubjectGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV0ParamsSubjectGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *AdvV0ParamsSubjectGetResponse) GetData() []*AdvV0ParamsSubjectGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV0PauseGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV0PauseGetRequest) Reset() {
	*x = AdvV0PauseGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0PauseGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0PauseGetRequest) ProtoMessage() {}

func (x *AdvV0PauseGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0PauseGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0PauseGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{13}
}

func (x *AdvV0PauseGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV0RenamePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV0RenamePostReq *AdvV0RenamePostReq `protobuf:"bytes,1,opt,name=advV0RenamePostReq,proto3" json:"advV0RenamePostReq,omitempty"`
}

func (x *AdvV0RenamePostRequest) Reset() {
	*x = AdvV0RenamePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0RenamePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0RenamePostRequest) ProtoMessage() {}

func (x *AdvV0RenamePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0RenamePostRequest.ProtoReflect.Descriptor instead.
func (*AdvV0RenamePostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{14}
}

func (x *AdvV0RenamePostRequest) GetAdvV0RenamePostReq() *AdvV0RenamePostReq {
	if x != nil {
		return x.AdvV0RenamePostReq
	}
	return nil
}

type AdvV0StartGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV0StartGetRequest) Reset() {
	*x = AdvV0StartGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0StartGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0StartGetRequest) ProtoMessage() {}

func (x *AdvV0StartGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0StartGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0StartGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{15}
}

func (x *AdvV0StartGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV0StopGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV0StopGetRequest) Reset() {
	*x = AdvV0StopGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV0StopGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV0StopGetRequest) ProtoMessage() {}

func (x *AdvV0StopGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV0StopGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV0StopGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{16}
}

func (x *AdvV0StopGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV1AdvertGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор медиакампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV1AdvertGetRequest) Reset() {
	*x = AdvV1AdvertGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AdvertGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AdvertGetRequest) ProtoMessage() {}

func (x *AdvV1AdvertGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AdvertGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AdvertGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{17}
}

func (x *AdvV1AdvertGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV1AdvertPausePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV1AdvertPausePostReq *AdvV1AdvertPausePostReq `protobuf:"bytes,1,opt,name=advV1AdvertPausePostReq,proto3" json:"advV1AdvertPausePostReq,omitempty"`
}

func (x *AdvV1AdvertPausePostRequest) Reset() {
	*x = AdvV1AdvertPausePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AdvertPausePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AdvertPausePostRequest) ProtoMessage() {}

func (x *AdvV1AdvertPausePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AdvertPausePostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AdvertPausePostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{18}
}

func (x *AdvV1AdvertPausePostRequest) GetAdvV1AdvertPausePostReq() *AdvV1AdvertPausePostReq {
	if x != nil {
		return x.AdvV1AdvertPausePostReq
	}
	return nil
}

type AdvV1AdvertStartPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV1AdvertStartPostReq *AdvV1AdvertStartPostReq `protobuf:"bytes,1,opt,name=advV1AdvertStartPostReq,proto3" json:"advV1AdvertStartPostReq,omitempty"`
}

func (x *AdvV1AdvertStartPostRequest) Reset() {
	*x = AdvV1AdvertStartPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AdvertStartPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AdvertStartPostRequest) ProtoMessage() {}

func (x *AdvV1AdvertStartPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AdvertStartPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AdvertStartPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{19}
}

func (x *AdvV1AdvertStartPostRequest) GetAdvV1AdvertStartPostReq() *AdvV1AdvertStartPostReq {
	if x != nil {
		return x.AdvV1AdvertStartPostReq
	}
	return nil
}

type AdvV1AdvertStopPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV1AdvertStopPostReq *AdvV1AdvertStopPostReq `protobuf:"bytes,1,opt,name=advV1AdvertStopPostReq,proto3" json:"advV1AdvertStopPostReq,omitempty"`
}

func (x *AdvV1AdvertStopPostRequest) Reset() {
	*x = AdvV1AdvertStopPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AdvertStopPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AdvertStopPostRequest) ProtoMessage() {}

func (x *AdvV1AdvertStopPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AdvertStopPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AdvertStopPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{20}
}

func (x *AdvV1AdvertStopPostRequest) GetAdvV1AdvertStopPostReq() *AdvV1AdvertStopPostReq {
	if x != nil {
		return x.AdvV1AdvertStopPostReq
	}
	return nil
}

type AdvV1AdvertsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// <dl> <dt>Статус медиакампании:</dt>   <dd><code>1</code> - черновик</dd>   <dd><code>2</code> - модерация   <dd><code>3</code> - отклонено (с возможностью вернуть на модерацию)</dd>   <dd><code>4</code> - одобрено</dd>   <dd><code>5</code> - запланировано</dd>   <dd><code>6</code> - на показах</dd>   <dd><code>7</code> - завершено</dd>   <dd><code>8</code> - отказался</dd>   <dd><code>9</code> - приостановлена продавцом</dd>   <dd><code>10</code> - пауза по дневному лимиту</dd>   <dd><code>11</code> - пауза по расходу бюджета</dd> </dl>
	Status int32 `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	// <dl> <dt>Тип медиакампании:</dt> <dd><code>1</code> - размещение по дням</dd> <dd><code>2</code> - размещение по просмотрам</dd> </dl>
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// Количество кампаний в ответе
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// Смещение относительно первой медиакампании
	Offset int32 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	// <dl> <dt>Порядок вывода ответа:</dt> <dd><code>create</code> - по времени создания медиакампании</dd> <dd><code>id</code> - по идентификатору медиакампании</dd> </dl>
	Order string `protobuf:"bytes,5,opt,name=order,proto3" json:"order,omitempty"`
	// <dl> <dt>Порядок сортировки:</dt> <dd><code>desc</code> - от большего к меньшему</dd> <dd><code>asc</code> - от меньшего к большему</dd> </dl>
	Direction string `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *AdvV1AdvertsGetRequest) Reset() {
	*x = AdvV1AdvertsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AdvertsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AdvertsGetRequest) ProtoMessage() {}

func (x *AdvV1AdvertsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AdvertsGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AdvertsGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{21}
}

func (x *AdvV1AdvertsGetRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdvV1AdvertsGetRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AdvV1AdvertsGetRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *AdvV1AdvertsGetRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *AdvV1AdvertsGetRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *AdvV1AdvertsGetRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type AdvV1AdvertsGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV1AdvertsGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1AdvertsGetResponse) Reset() {
	*x = AdvV1AdvertsGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AdvertsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AdvertsGetResponse) ProtoMessage() {}

func (x *AdvV1AdvertsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AdvertsGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV1AdvertsGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{22}
}

func (x *AdvV1AdvertsGetResponse) GetData() []*AdvV1AdvertsGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1AutoActivePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id                     int32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdvV1AutoActivePostReq *AdvV1AutoActivePostReq `protobuf:"bytes,2,opt,name=advV1AutoActivePostReq,proto3" json:"advV1AutoActivePostReq,omitempty"`
}

func (x *AdvV1AutoActivePostRequest) Reset() {
	*x = AdvV1AutoActivePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AutoActivePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AutoActivePostRequest) ProtoMessage() {}

func (x *AdvV1AutoActivePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AutoActivePostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AutoActivePostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{23}
}

func (x *AdvV1AutoActivePostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1AutoActivePostRequest) GetAdvV1AutoActivePostReq() *AdvV1AutoActivePostReq {
	if x != nil {
		return x.AdvV1AutoActivePostReq
	}
	return nil
}

type AdvV1AutoGetnmtoaddGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV1AutoGetnmtoaddGetRequest) Reset() {
	*x = AdvV1AutoGetnmtoaddGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AutoGetnmtoaddGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AutoGetnmtoaddGetRequest) ProtoMessage() {}

func (x *AdvV1AutoGetnmtoaddGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AutoGetnmtoaddGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AutoGetnmtoaddGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{24}
}

func (x *AdvV1AutoGetnmtoaddGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV1AutoGetnmtoaddGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []int32 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1AutoGetnmtoaddGetResponse) Reset() {
	*x = AdvV1AutoGetnmtoaddGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AutoGetnmtoaddGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AutoGetnmtoaddGetResponse) ProtoMessage() {}

func (x *AdvV1AutoGetnmtoaddGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AutoGetnmtoaddGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV1AutoGetnmtoaddGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{25}
}

func (x *AdvV1AutoGetnmtoaddGetResponse) GetData() []int32 {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1AutoSetExcludedPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id                          int32                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdvV1AutoSetExcludedPostReq *AdvV1AutoSetExcludedPostReq `protobuf:"bytes,2,opt,name=advV1AutoSetExcludedPostReq,proto3" json:"advV1AutoSetExcludedPostReq,omitempty"`
}

func (x *AdvV1AutoSetExcludedPostRequest) Reset() {
	*x = AdvV1AutoSetExcludedPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AutoSetExcludedPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AutoSetExcludedPostRequest) ProtoMessage() {}

func (x *AdvV1AutoSetExcludedPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AutoSetExcludedPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AutoSetExcludedPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{26}
}

func (x *AdvV1AutoSetExcludedPostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1AutoSetExcludedPostRequest) GetAdvV1AutoSetExcludedPostReq() *AdvV1AutoSetExcludedPostReq {
	if x != nil {
		return x.AdvV1AutoSetExcludedPostReq
	}
	return nil
}

type AdvV1AutoStatGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV1AutoStatGetRequest) Reset() {
	*x = AdvV1AutoStatGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AutoStatGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AutoStatGetRequest) ProtoMessage() {}

func (x *AdvV1AutoStatGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AutoStatGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AutoStatGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{27}
}

func (x *AdvV1AutoStatGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV1AutoUpdatenmPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id                       int32                     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdvV1AutoUpdatenmPostReq *AdvV1AutoUpdatenmPostReq `protobuf:"bytes,2,opt,name=advV1AutoUpdatenmPostReq,proto3" json:"advV1AutoUpdatenmPostReq,omitempty"`
}

func (x *AdvV1AutoUpdatenmPostRequest) Reset() {
	*x = AdvV1AutoUpdatenmPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1AutoUpdatenmPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1AutoUpdatenmPostRequest) ProtoMessage() {}

func (x *AdvV1AutoUpdatenmPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1AutoUpdatenmPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1AutoUpdatenmPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{28}
}

func (x *AdvV1AutoUpdatenmPostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1AutoUpdatenmPostRequest) GetAdvV1AutoUpdatenmPostReq() *AdvV1AutoUpdatenmPostReq {
	if x != nil {
		return x.AdvV1AutoUpdatenmPostReq
	}
	return nil
}

type AdvV1BudgetDepositPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id                        int32                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdvV1BudgetDepositPostReq *AdvV1BudgetDepositPostReq `protobuf:"bytes,2,opt,name=advV1BudgetDepositPostReq,proto3" json:"advV1BudgetDepositPostReq,omitempty"`
}

func (x *AdvV1BudgetDepositPostRequest) Reset() {
	*x = AdvV1BudgetDepositPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1BudgetDepositPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1BudgetDepositPostRequest) ProtoMessage() {}

func (x *AdvV1BudgetDepositPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1BudgetDepositPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1BudgetDepositPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{29}
}

func (x *AdvV1BudgetDepositPostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1BudgetDepositPostRequest) GetAdvV1BudgetDepositPostReq() *AdvV1BudgetDepositPostReq {
	if x != nil {
		return x.AdvV1BudgetDepositPostReq
	}
	return nil
}

type AdvV1BudgetGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV1BudgetGetRequest) Reset() {
	*x = AdvV1BudgetGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1BudgetGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1BudgetGetRequest) ProtoMessage() {}

func (x *AdvV1BudgetGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1BudgetGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1BudgetGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{30}
}

func (x *AdvV1BudgetGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV1ItemCpmChangePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV1ItemCpmChangePostReq *AdvV1ItemCpmChangePostReq `protobuf:"bytes,1,opt,name=advV1ItemCpmChangePostReq,proto3" json:"advV1ItemCpmChangePostReq,omitempty"`
}

func (x *AdvV1ItemCpmChangePostRequest) Reset() {
	*x = AdvV1ItemCpmChangePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1ItemCpmChangePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1ItemCpmChangePostRequest) ProtoMessage() {}

func (x *AdvV1ItemCpmChangePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1ItemCpmChangePostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1ItemCpmChangePostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{31}
}

func (x *AdvV1ItemCpmChangePostRequest) GetAdvV1ItemCpmChangePostReq() *AdvV1ItemCpmChangePostReq {
	if x != nil {
		return x.AdvV1ItemCpmChangePostReq
	}
	return nil
}

type AdvV1PaymentsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Начало интервала
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// Конец интервала. <br>  (Минимальный интервал 1 день, максимальный 31)
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AdvV1PaymentsGetRequest) Reset() {
	*x = AdvV1PaymentsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1PaymentsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1PaymentsGetRequest) ProtoMessage() {}

func (x *AdvV1PaymentsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1PaymentsGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1PaymentsGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{32}
}

func (x *AdvV1PaymentsGetRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *AdvV1PaymentsGetRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type AdvV1PaymentsGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV1PaymentsGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1PaymentsGetResponse) Reset() {
	*x = AdvV1PaymentsGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1PaymentsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1PaymentsGetResponse) ProtoMessage() {}

func (x *AdvV1PaymentsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1PaymentsGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV1PaymentsGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{33}
}

func (x *AdvV1PaymentsGetResponse) GetData() []*AdvV1PaymentsGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1PromotionAdvertsPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestBody []int32 `protobuf:"varint,1,rep,packed,name=requestBody,proto3" json:"requestBody,omitempty"`
	// <dl> <dt>Статус кампании:</dt> <dd><code>-1</code> - кампания в процессе удаления </dd> <dd><code>4</code> - готова к запуску </dd> <dd><code>7</code> - кампания завершена</dd> <dd><code>8</code> - отказался</dd> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - кампания на паузе</dd> </dl> Кампания в процессе удаления. Статус означает, что кампания была удалена, и через 3-10 минут она исчезнет из ответа метода.
	Status int32 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	// <dl> <dt>Тип кампании:</dt> <dd><code>4</code> - кампания в каталоге</dd> <dd><code>5</code> - кампания в карточке товара</dd> <dd><code>6</code> - кампания в поиске</dd> <dd><code>7</code> - кампания в рекомендациях на главной странице</dd> <dd><code>8</code> - автоматическая кампания </dd> <dd><code>9</code> - поиск + каталог </dd> </dl>
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// <dl> <dt>Порядок:</dt> <dd><code>create</code> (по времени создания кампании)</dd> <dd><code>change</code> (по времени последнего изменения кампании)</dd> <dd><code>id</code> (по идентификатору кампании)</dd> </dl> <br>Например: <code>/adv/v1/promotion/adverts?type=6&order=change&direction=asc</code>
	Order string `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	// <dl> <dt>Направление:</dt> <dd><code>desc</code> (от большего к меньшему)</dd> <dd><code>asc</code> (от меньшего к большему)</dd> </dl> <br>Например: <code>/adv/v1/promotion/adverts?type=6&order=change&<b>direction=asc</b></code>
	Direction string `protobuf:"bytes,5,opt,name=direction,proto3" json:"direction,omitempty"`
}

func (x *AdvV1PromotionAdvertsPostRequest) Reset() {
	*x = AdvV1PromotionAdvertsPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1PromotionAdvertsPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1PromotionAdvertsPostRequest) ProtoMessage() {}

func (x *AdvV1PromotionAdvertsPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1PromotionAdvertsPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1PromotionAdvertsPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{34}
}

func (x *AdvV1PromotionAdvertsPostRequest) GetRequestBody() []int32 {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

func (x *AdvV1PromotionAdvertsPostRequest) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdvV1PromotionAdvertsPostRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AdvV1PromotionAdvertsPostRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *AdvV1PromotionAdvertsPostRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type AdvV1SaveAdPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV1SaveAdPostReq *AdvV1SaveAdPostReq `protobuf:"bytes,1,opt,name=advV1SaveAdPostReq,proto3" json:"advV1SaveAdPostReq,omitempty"`
}

func (x *AdvV1SaveAdPostRequest) Reset() {
	*x = AdvV1SaveAdPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SaveAdPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SaveAdPostRequest) ProtoMessage() {}

func (x *AdvV1SaveAdPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SaveAdPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1SaveAdPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{35}
}

func (x *AdvV1SaveAdPostRequest) GetAdvV1SaveAdPostReq() *AdvV1SaveAdPostReq {
	if x != nil {
		return x.AdvV1SaveAdPostReq
	}
	return nil
}

type AdvV1SaveAdPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1SaveAdPostResponse) Reset() {
	*x = AdvV1SaveAdPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SaveAdPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SaveAdPostResponse) ProtoMessage() {}

func (x *AdvV1SaveAdPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SaveAdPostResponse.ProtoReflect.Descriptor instead.
func (*AdvV1SaveAdPostResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{36}
}

func (x *AdvV1SaveAdPostResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type AdvV1SeacatStatGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV1SeacatStatGetRequest) Reset() {
	*x = AdvV1SeacatStatGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SeacatStatGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SeacatStatGetRequest) ProtoMessage() {}

func (x *AdvV1SeacatStatGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SeacatStatGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1SeacatStatGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{37}
}

func (x *AdvV1SeacatStatGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV1SearchSetExcludedPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id                            int32                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdvV1SearchSetExcludedPostReq *AdvV1SearchSetExcludedPostReq `protobuf:"bytes,2,opt,name=advV1SearchSetExcludedPostReq,proto3" json:"advV1SearchSetExcludedPostReq,omitempty"`
}

func (x *AdvV1SearchSetExcludedPostRequest) Reset() {
	*x = AdvV1SearchSetExcludedPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSetExcludedPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSetExcludedPostRequest) ProtoMessage() {}

func (x *AdvV1SearchSetExcludedPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSetExcludedPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSetExcludedPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{38}
}

func (x *AdvV1SearchSetExcludedPostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1SearchSetExcludedPostRequest) GetAdvV1SearchSetExcludedPostReq() *AdvV1SearchSetExcludedPostReq {
	if x != nil {
		return x.AdvV1SearchSetExcludedPostReq
	}
	return nil
}

type AdvV1SearchSetPhrasePostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id                          int32                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdvV1SearchSetPhrasePostReq *AdvV1SearchSetPhrasePostReq `protobuf:"bytes,2,opt,name=advV1SearchSetPhrasePostReq,proto3" json:"advV1SearchSetPhrasePostReq,omitempty"`
}

func (x *AdvV1SearchSetPhrasePostRequest) Reset() {
	*x = AdvV1SearchSetPhrasePostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSetPhrasePostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSetPhrasePostRequest) ProtoMessage() {}

func (x *AdvV1SearchSetPhrasePostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSetPhrasePostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSetPhrasePostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{39}
}

func (x *AdvV1SearchSetPhrasePostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1SearchSetPhrasePostRequest) GetAdvV1SearchSetPhrasePostReq() *AdvV1SearchSetPhrasePostReq {
	if x != nil {
		return x.AdvV1SearchSetPhrasePostReq
	}
	return nil
}

type AdvV1SearchSetPlusGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Новое состояние (`false` - сделать неактивными, `true` - сделать активными)
	Fixed bool `protobuf:"varint,2,opt,name=fixed,proto3" json:"fixed,omitempty"`
}

func (x *AdvV1SearchSetPlusGetRequest) Reset() {
	*x = AdvV1SearchSetPlusGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSetPlusGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSetPlusGetRequest) ProtoMessage() {}

func (x *AdvV1SearchSetPlusGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSetPlusGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSetPlusGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{40}
}

func (x *AdvV1SearchSetPlusGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1SearchSetPlusGetRequest) GetFixed() bool {
	if x != nil {
		return x.Fixed
	}
	return false
}

type AdvV1SearchSetPlusPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id                        int32                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdvV1SearchSetPlusPostReq *AdvV1SearchSetPlusPostReq `protobuf:"bytes,2,opt,name=advV1SearchSetPlusPostReq,proto3" json:"advV1SearchSetPlusPostReq,omitempty"`
}

func (x *AdvV1SearchSetPlusPostRequest) Reset() {
	*x = AdvV1SearchSetPlusPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSetPlusPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSetPlusPostRequest) ProtoMessage() {}

func (x *AdvV1SearchSetPlusPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSetPlusPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSetPlusPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{41}
}

func (x *AdvV1SearchSetPlusPostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1SearchSetPlusPostRequest) GetAdvV1SearchSetPlusPostReq() *AdvV1SearchSetPlusPostReq {
	if x != nil {
		return x.AdvV1SearchSetPlusPostReq
	}
	return nil
}

type AdvV1SearchSetPlusPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1SearchSetPlusPostResponse) Reset() {
	*x = AdvV1SearchSetPlusPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSetPlusPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSetPlusPostResponse) ProtoMessage() {}

func (x *AdvV1SearchSetPlusPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSetPlusPostResponse.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSetPlusPostResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{42}
}

func (x *AdvV1SearchSetPlusPostResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1SearchSetStrongPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id                          int32                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdvV1SearchSetStrongPostReq *AdvV1SearchSetStrongPostReq `protobuf:"bytes,2,opt,name=advV1SearchSetStrongPostReq,proto3" json:"advV1SearchSetStrongPostReq,omitempty"`
}

func (x *AdvV1SearchSetStrongPostRequest) Reset() {
	*x = AdvV1SearchSetStrongPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSetStrongPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSetStrongPostRequest) ProtoMessage() {}

func (x *AdvV1SearchSetStrongPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSetStrongPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSetStrongPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{43}
}

func (x *AdvV1SearchSetStrongPostRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdvV1SearchSetStrongPostRequest) GetAdvV1SearchSetStrongPostReq() *AdvV1SearchSetStrongPostReq {
	if x != nil {
		return x.AdvV1SearchSetStrongPostReq
	}
	return nil
}

type AdvV1SearchSupplierProductsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID предмета
	Subject int32 `protobuf:"varint,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *AdvV1SearchSupplierProductsGetRequest) Reset() {
	*x = AdvV1SearchSupplierProductsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSupplierProductsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSupplierProductsGetRequest) ProtoMessage() {}

func (x *AdvV1SearchSupplierProductsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSupplierProductsGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSupplierProductsGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{44}
}

func (x *AdvV1SearchSupplierProductsGetRequest) GetSubject() int32 {
	if x != nil {
		return x.Subject
	}
	return 0
}

type AdvV1SearchSupplierProductsGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV1SearchSupplierProductsGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1SearchSupplierProductsGetResponse) Reset() {
	*x = AdvV1SearchSupplierProductsGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSupplierProductsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSupplierProductsGetResponse) ProtoMessage() {}

func (x *AdvV1SearchSupplierProductsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSupplierProductsGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSupplierProductsGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{45}
}

func (x *AdvV1SearchSupplierProductsGetResponse) GetData() []*AdvV1SearchSupplierProductsGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1SearchSupplierSubjectsGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV1SearchSupplierSubjectsGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1SearchSupplierSubjectsGetResponse) Reset() {
	*x = AdvV1SearchSupplierSubjectsGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SearchSupplierSubjectsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SearchSupplierSubjectsGetResponse) ProtoMessage() {}

func (x *AdvV1SearchSupplierSubjectsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SearchSupplierSubjectsGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV1SearchSupplierSubjectsGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{46}
}

func (x *AdvV1SearchSupplierSubjectsGetResponse) GetData() []*AdvV1SearchSupplierSubjectsGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1StatWordsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV1StatWordsGetRequest) Reset() {
	*x = AdvV1StatWordsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1StatWordsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1StatWordsGetRequest) ProtoMessage() {}

func (x *AdvV1StatWordsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1StatWordsGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1StatWordsGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{47}
}

func (x *AdvV1StatWordsGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV1StatsPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV1StatsPostReq *AdvV1StatsPostReq `protobuf:"bytes,1,opt,name=advV1StatsPostReq,proto3" json:"advV1StatsPostReq,omitempty"`
}

func (x *AdvV1StatsPostRequest) Reset() {
	*x = AdvV1StatsPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1StatsPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1StatsPostRequest) ProtoMessage() {}

func (x *AdvV1StatsPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1StatsPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV1StatsPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{48}
}

func (x *AdvV1StatsPostRequest) GetAdvV1StatsPostReq() *AdvV1StatsPostReq {
	if x != nil {
		return x.AdvV1StatsPostReq
	}
	return nil
}

type AdvV1StatsPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV1StatsPost200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1StatsPostResponse) Reset() {
	*x = AdvV1StatsPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1StatsPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1StatsPostResponse) ProtoMessage() {}

func (x *AdvV1StatsPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1StatsPostResponse.ProtoReflect.Descriptor instead.
func (*AdvV1StatsPostResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{49}
}

func (x *AdvV1StatsPostResponse) GetData() []*AdvV1StatsPost200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1SupplierSubjectsGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV1SupplierSubjectsGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1SupplierSubjectsGetResponse) Reset() {
	*x = AdvV1SupplierSubjectsGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1SupplierSubjectsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1SupplierSubjectsGetResponse) ProtoMessage() {}

func (x *AdvV1SupplierSubjectsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1SupplierSubjectsGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV1SupplierSubjectsGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{50}
}

func (x *AdvV1SupplierSubjectsGetResponse) GetData() []*AdvV1SupplierSubjectsGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1UpdGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Начало интервала
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	// Конец интервала. <br>  (Минимальный интервал 1 день, максимальный 31)
	To string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *AdvV1UpdGetRequest) Reset() {
	*x = AdvV1UpdGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1UpdGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1UpdGetRequest) ProtoMessage() {}

func (x *AdvV1UpdGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1UpdGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV1UpdGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{51}
}

func (x *AdvV1UpdGetRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *AdvV1UpdGetRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

type AdvV1UpdGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV1UpdGet200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1UpdGetResponse) Reset() {
	*x = AdvV1UpdGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1UpdGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1UpdGetResponse) ProtoMessage() {}

func (x *AdvV1UpdGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1UpdGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV1UpdGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{52}
}

func (x *AdvV1UpdGetResponse) GetData() []*AdvV1UpdGet200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV1UpdIntervalsGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV1UpdIntervalsGetResponse) Reset() {
	*x = AdvV1UpdIntervalsGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV1UpdIntervalsGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV1UpdIntervalsGetResponse) ProtoMessage() {}

func (x *AdvV1UpdIntervalsGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV1UpdIntervalsGetResponse.ProtoReflect.Descriptor instead.
func (*AdvV1UpdIntervalsGetResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{53}
}

func (x *AdvV1UpdIntervalsGetResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdvV2AutoDailyWordsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV2AutoDailyWordsGetRequest) Reset() {
	*x = AdvV2AutoDailyWordsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV2AutoDailyWordsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV2AutoDailyWordsGetRequest) ProtoMessage() {}

func (x *AdvV2AutoDailyWordsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV2AutoDailyWordsGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV2AutoDailyWordsGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{54}
}

func (x *AdvV2AutoDailyWordsGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV2AutoStatWordsGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Идентификатор кампании
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AdvV2AutoStatWordsGetRequest) Reset() {
	*x = AdvV2AutoStatWordsGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV2AutoStatWordsGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV2AutoStatWordsGetRequest) ProtoMessage() {}

func (x *AdvV2AutoStatWordsGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV2AutoStatWordsGetRequest.ProtoReflect.Descriptor instead.
func (*AdvV2AutoStatWordsGetRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{55}
}

func (x *AdvV2AutoStatWordsGetRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AdvV2FullstatsPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV2FullstatsPostReq *AdvV2FullstatsPostReq `protobuf:"bytes,1,opt,name=advV2FullstatsPostReq,proto3" json:"advV2FullstatsPostReq,omitempty"`
}

func (x *AdvV2FullstatsPostRequest) Reset() {
	*x = AdvV2FullstatsPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV2FullstatsPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV2FullstatsPostRequest) ProtoMessage() {}

func (x *AdvV2FullstatsPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV2FullstatsPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV2FullstatsPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{56}
}

func (x *AdvV2FullstatsPostRequest) GetAdvV2FullstatsPostReq() *AdvV2FullstatsPostReq {
	if x != nil {
		return x.AdvV2FullstatsPostReq
	}
	return nil
}

type AdvV2SeacatSaveAdPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvV2SeacatSaveAdPostReq *AdvV2SeacatSaveAdPostReq `protobuf:"bytes,1,opt,name=advV2SeacatSaveAdPostReq,proto3" json:"advV2SeacatSaveAdPostReq,omitempty"`
}

func (x *AdvV2SeacatSaveAdPostRequest) Reset() {
	*x = AdvV2SeacatSaveAdPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV2SeacatSaveAdPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV2SeacatSaveAdPostRequest) ProtoMessage() {}

func (x *AdvV2SeacatSaveAdPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV2SeacatSaveAdPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV2SeacatSaveAdPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{57}
}

func (x *AdvV2SeacatSaveAdPostRequest) GetAdvV2SeacatSaveAdPostReq() *AdvV2SeacatSaveAdPostReq {
	if x != nil {
		return x.AdvV2SeacatSaveAdPostReq
	}
	return nil
}

type AdvV2SeacatSaveAdPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data int32 `protobuf:"varint,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV2SeacatSaveAdPostResponse) Reset() {
	*x = AdvV2SeacatSaveAdPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV2SeacatSaveAdPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV2SeacatSaveAdPostResponse) ProtoMessage() {}

func (x *AdvV2SeacatSaveAdPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV2SeacatSaveAdPostResponse.ProtoReflect.Descriptor instead.
func (*AdvV2SeacatSaveAdPostResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{58}
}

func (x *AdvV2SeacatSaveAdPostResponse) GetData() int32 {
	if x != nil {
		return x.Data
	}
	return 0
}

type AdvV2SupplierNmsPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID предметов, для которых нужно получить номенклатуры
	RequestBody []int32 `protobuf:"varint,1,rep,packed,name=requestBody,proto3" json:"requestBody,omitempty"`
}

func (x *AdvV2SupplierNmsPostRequest) Reset() {
	*x = AdvV2SupplierNmsPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV2SupplierNmsPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV2SupplierNmsPostRequest) ProtoMessage() {}

func (x *AdvV2SupplierNmsPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV2SupplierNmsPostRequest.ProtoReflect.Descriptor instead.
func (*AdvV2SupplierNmsPostRequest) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{59}
}

func (x *AdvV2SupplierNmsPostRequest) GetRequestBody() []int32 {
	if x != nil {
		return x.RequestBody
	}
	return nil
}

type AdvV2SupplierNmsPostResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AdvV2SupplierNmsPost200ResponseInner `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *AdvV2SupplierNmsPostResponse) Reset() {
	*x = AdvV2SupplierNmsPostResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wb_promotion_v1_service_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvV2SupplierNmsPostResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvV2SupplierNmsPostResponse) ProtoMessage() {}

func (x *AdvV2SupplierNmsPostResponse) ProtoReflect() protoreflect.Message {
	mi := &file_wb_promotion_v1_service_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvV2SupplierNmsPostResponse.ProtoReflect.Descriptor instead.
func (*AdvV2SupplierNmsPostResponse) Descriptor() ([]byte, []int) {
	return file_wb_promotion_v1_service_proto_rawDescGZIP(), []int{60}
}

func (x *AdvV2SupplierNmsPostResponse) GetData() []*AdvV2SupplierNmsPost200ResponseInner {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_wb_promotion_v1_service_proto protoreflect.FileDescriptor

var file_wb_promotion_v1_service_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x77,
	0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x76, 0x5f, 0x76, 0x30, 0x5f, 0x61, 0x6c, 0x6c, 0x63, 0x70, 0x6d, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x77, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76,
	0x30, 0x5f, 0x61, 0x6c, 0x6c, 0x63, 0x70, 0x6d, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x77, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76,
	0x5f, 0x76, 0x30, 0x5f, 0x63, 0x70, 0x6d, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x30, 0x5f, 0x63, 0x70, 0x6d, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3e, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x30, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3d, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x30, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x41, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x30, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x30, 0x5f, 0x72, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x61,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x77, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76,
	0x5f, 0x76, 0x31, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x36, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35, 0x77, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76,
	0x5f, 0x76, 0x31, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3a, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x35,
	0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x36, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x77, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f,
	0x76, 0x31, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x6e, 0x6d,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x77, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76,
	0x31, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f,
	0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x33, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74,
	0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x32, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x77, 0x62, 0x2f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f,
	0x76, 0x31, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x63, 0x70, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x3f, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x67, 0x65, 0x74, 0x32,
	0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x35, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x61,
	0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x34, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x31, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31,
	0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x38, 0x77, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76,
	0x5f, 0x76, 0x31, 0x5f, 0x73, 0x65, 0x61, 0x63, 0x61, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f,
	0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x39, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3b, 0x77, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64,
	0x76, 0x5f, 0x76, 0x31, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x73, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4b, 0x77, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76,
	0x31, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30,
	0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x4b, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x39, 0x77, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64,
	0x76, 0x5f, 0x76, 0x31, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x32,
	0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x44, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x31,
	0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x36,
	0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x76, 0x5f, 0x76, 0x31, 0x5f, 0x75, 0x70, 0x64, 0x5f, 0x67, 0x65, 0x74, 0x32, 0x30,
	0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x32, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f,
	0x67, 0x65, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3c, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x32, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x67, 0x65,
	0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x37, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x32, 0x5f, 0x66, 0x75, 0x6c, 0x6c,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x33, 0x77, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64,
	0x76, 0x5f, 0x76, 0x32, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x38, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x64, 0x76, 0x5f, 0x76, 0x32, 0x5f, 0x73, 0x65, 0x61, 0x63, 0x61, 0x74,
	0x5f, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x40, 0x77, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x76,
	0x5f, 0x76, 0x32, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x5f, 0x6e, 0x6d, 0x73,
	0x5f, 0x70, 0x6f, 0x73, 0x74, 0x32, 0x30, 0x30, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x77,
	0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x34, 0x32, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x29, 0x77, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x76, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x77, 0x62, 0x2f,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x34, 0x30, 0x31, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x15, 0x41, 0x64, 0x76, 0x56, 0x30, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56, 0x30, 0x41, 0x6c,
	0x6c, 0x63, 0x70, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x61, 0x64, 0x76, 0x56, 0x30, 0x41, 0x6c, 0x6c, 0x63,
	0x70, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x41, 0x6c, 0x6c, 0x63, 0x70, 0x6d, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x52, 0x12, 0x61, 0x64, 0x76, 0x56, 0x30, 0x41, 0x6c, 0x6c, 0x63, 0x70,
	0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x5f, 0x0a, 0x17, 0x41, 0x64, 0x76, 0x56,
	0x30, 0x41, 0x6c, 0x6c, 0x63, 0x70, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x41, 0x6c, 0x6c, 0x63, 0x70, 0x6d, 0x50,
	0x6f, 0x73, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x12, 0x41, 0x64, 0x76,
	0x56, 0x30, 0x43, 0x70, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x57, 0x0a, 0x13, 0x41, 0x64, 0x76,
	0x56, 0x30, 0x43, 0x70, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x43, 0x70, 0x6d, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x61, 0x0a, 0x13, 0x41, 0x64, 0x76, 0x56, 0x30, 0x43, 0x70, 0x6d, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x0f, 0x61, 0x64, 0x76,
	0x56, 0x30, 0x43, 0x70, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x43, 0x70, 0x6d, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x52, 0x0f, 0x61, 0x64, 0x76, 0x56, 0x30, 0x43, 0x70, 0x6d, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x27, 0x0a, 0x15, 0x41, 0x64, 0x76, 0x56, 0x30, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b,
	0x0a, 0x19, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x6e,
	0x75, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x65, 0x0a, 0x1a, 0x41,
	0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x2a, 0x0a, 0x18, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x63,
	0x0a, 0x19, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x65, 0x74,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x77, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56,
	0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x1c, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x6b, 0x0a, 0x1d, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x36, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x26, 0x0a, 0x14, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x75, 0x73, 0x65, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6d, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56,
	0x30, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x61, 0x64, 0x76, 0x56, 0x30, 0x52, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x52, 0x12, 0x61, 0x64, 0x76, 0x56, 0x30, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x26, 0x0a, 0x14, 0x41, 0x64, 0x76, 0x56, 0x30,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x25, 0x0a, 0x13, 0x41, 0x64, 0x76, 0x56, 0x30, 0x53, 0x74, 0x6f, 0x70, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41,
	0x64, 0x76, 0x65, 0x72, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x81, 0x01, 0x0a, 0x1b, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x62, 0x0a, 0x17, 0x61, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61,
	0x75, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x17, 0x61, 0x64, 0x76, 0x56,
	0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x22, 0x81, 0x01, 0x0a, 0x1b, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x17, 0x61, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x17,
	0x61, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x7d, 0x0a, 0x1a, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x61, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76,
	0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x16,
	0x61, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0xa6, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x5f, 0x0a, 0x17, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x8d, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x5f, 0x0a, 0x16, 0x61, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x16, 0x61, 0x64, 0x76, 0x56, 0x31, 0x41,
	0x75, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x22, 0x2f, 0x0a, 0x1d, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65, 0x74,
	0x6e, 0x6d, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x34, 0x0a, 0x1e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65,
	0x74, 0x6e, 0x6d, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x1f, 0x41, 0x64, 0x76, 0x56,
	0x31, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x6e, 0x0a, 0x1b, 0x61,
	0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x45,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x1b,
	0x61, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x29, 0x0a, 0x17, 0x41,
	0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x1c, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x6e, 0x6d, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x65, 0x0a, 0x18, 0x61, 0x64, 0x76, 0x56, 0x31,
	0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x6e, 0x6d, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56,
	0x31, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x6e, 0x6d, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x52, 0x18, 0x61, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x6e, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x99,
	0x01, 0x0a, 0x1d, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x68, 0x0a, 0x19, 0x61, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x44,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75, 0x64, 0x67, 0x65,
	0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52,
	0x19, 0x61, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x27, 0x0a, 0x15, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x89, 0x01, 0x0a, 0x1d, 0x41, 0x64, 0x76, 0x56, 0x31, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x70, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x19, 0x61, 0x64, 0x76, 0x56, 0x31, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x70, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x52, 0x19, 0x61, 0x64, 0x76, 0x56, 0x31, 0x49, 0x74, 0x65, 0x6d, 0x43,
	0x70, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x3d, 0x0a, 0x17, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x61,
	0x0a, 0x18, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0xa4, 0x01, 0x0a, 0x20, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56,
	0x31, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x52, 0x12, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x2d, 0x0a, 0x17, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x19, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53,
	0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0xa9, 0x01, 0x0a, 0x21, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x74, 0x0a, 0x1d, 0x61, 0x64, 0x76,
	0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x52, 0x1d, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74,
	0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22,
	0xa1, 0x01, 0x0a, 0x1f, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x65, 0x74, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x6e, 0x0a, 0x1b, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x1b, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x22, 0x44, 0x0a, 0x1c, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x22, 0x99, 0x01, 0x0a, 0x1d, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x73,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x68, 0x0a, 0x19, 0x61,
	0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75,
	0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50,
	0x6c, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x19, 0x61, 0x64, 0x76, 0x56,
	0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x34, 0x0a, 0x1e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa1, 0x01, 0x0a, 0x1f,
	0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x6f, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x6e, 0x0a, 0x1b, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x52, 0x1b, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x41, 0x0a, 0x25, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0x7d, 0x0a, 0x26, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x77, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76,
	0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x7d, 0x0a, 0x26, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x77, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56,
	0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2a, 0x0a, 0x18, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x15,
	0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x11, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x52, 0x11, 0x61, 0x64, 0x76, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x5d, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74,
	0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x20, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53,
	0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x38, 0x0a, 0x12, 0x41, 0x64, 0x76,
	0x56, 0x31, 0x55, 0x70, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x13, 0x41, 0x64, 0x76, 0x56, 0x31, 0x55, 0x70, 0x64, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x55, 0x70, 0x64, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x1c,
	0x41, 0x64, 0x76, 0x56, 0x31, 0x55, 0x70, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x2f, 0x0a, 0x1d, 0x41, 0x64, 0x76, 0x56, 0x32, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x2e, 0x0a, 0x1c, 0x41, 0x64, 0x76, 0x56, 0x32, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x79, 0x0a, 0x19, 0x41, 0x64, 0x76, 0x56, 0x32, 0x46, 0x75, 0x6c, 0x6c, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c,
	0x0a, 0x15, 0x61, 0x64, 0x76, 0x56, 0x32, 0x46, 0x75, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x76, 0x56, 0x32, 0x46, 0x75, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x15, 0x61, 0x64, 0x76, 0x56, 0x32, 0x46, 0x75, 0x6c, 0x6c,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x22, 0x85, 0x01, 0x0a,
	0x1c, 0x41, 0x64, 0x76, 0x56, 0x32, 0x53, 0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x61, 0x76, 0x65,
	0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65, 0x0a,
	0x18, 0x61, 0x64, 0x76, 0x56, 0x32, 0x53, 0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x61, 0x76, 0x65,
	0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32, 0x53, 0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x61, 0x76,
	0x65, 0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x52, 0x18, 0x61, 0x64, 0x76, 0x56,
	0x32, 0x53, 0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x22, 0x33, 0x0a, 0x1d, 0x41, 0x64, 0x76, 0x56, 0x32, 0x53, 0x65, 0x61,
	0x63, 0x61, 0x74, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3f, 0x0a, 0x1b, 0x41, 0x64, 0x76,
	0x56, 0x32, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4e, 0x6d, 0x73, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x69, 0x0a, 0x1c, 0x41, 0x64,
	0x76, 0x56, 0x32, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4e, 0x6d, 0x73, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4e, 0x6d, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x32,
	0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xc9, 0x27, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x0e, 0x41, 0x64,
	0x76, 0x56, 0x30, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x77,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x76, 0x56, 0x30, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64, 0x0a, 0x0f,
	0x41, 0x64, 0x76, 0x56, 0x30, 0x41, 0x6c, 0x6c, 0x63, 0x70, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x12,
	0x27, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x41, 0x6c, 0x6c, 0x63, 0x70, 0x6d, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30,
	0x41, 0x6c, 0x6c, 0x63, 0x70, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x41, 0x64, 0x76, 0x56, 0x30, 0x43, 0x70, 0x6d, 0x47, 0x65,
	0x74, 0x12, 0x23, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x43, 0x70, 0x6d, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x43, 0x70,
	0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0c,
	0x41, 0x64, 0x76, 0x56, 0x30, 0x43, 0x70, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x77,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x76, 0x56, 0x30, 0x43, 0x70, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x50, 0x0a, 0x0e, 0x41, 0x64,
	0x76, 0x56, 0x30, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x77,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x76, 0x56, 0x30, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x6d, 0x0a, 0x12,
	0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x47,
	0x65, 0x74, 0x12, 0x2a, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x4d, 0x65, 0x6e, 0x75, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x41,
	0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74,
	0x12, 0x29, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x65,
	0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x41, 0x64, 0x76, 0x56, 0x30,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74,
	0x12, 0x2d, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0d, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x75, 0x73, 0x65, 0x47, 0x65, 0x74,
	0x12, 0x25, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x50, 0x61, 0x75, 0x73, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x52, 0x0a, 0x0f, 0x41, 0x64, 0x76, 0x56, 0x30, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x12, 0x27, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0d, 0x41, 0x64, 0x76, 0x56, 0x30, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x47, 0x65, 0x74, 0x12, 0x25, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x41, 0x64, 0x76, 0x56, 0x30, 0x53, 0x74, 0x6f, 0x70,
	0x47, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x30, 0x53, 0x74, 0x6f, 0x70, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x64, 0x0a, 0x0e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x77, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x14, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12,
	0x2c, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x50, 0x61, 0x75,
	0x73, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x14, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x2e,
	0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x13, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x77, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76,
	0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x64, 0x0a, 0x0f, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x47,
	0x65, 0x74, 0x12, 0x27, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2b, 0x2e, 0x77,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x79, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65,
	0x74, 0x6e, 0x6d, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x47, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x77, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65, 0x74, 0x6e, 0x6d, 0x74, 0x6f, 0x61, 0x64,
	0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x77, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x47, 0x65, 0x74, 0x6e, 0x6d, 0x74, 0x6f, 0x61, 0x64,
	0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x18,
	0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x45, 0x78, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x6a, 0x0a, 0x10, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x74, 0x61, 0x74, 0x47, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75,
	0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e,
	0x0a, 0x15, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x6e, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x41,
	0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x6e, 0x6d, 0x50, 0x6f, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56,
	0x0a, 0x0f, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x65,
	0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2b, 0x2e, 0x77, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56,
	0x31, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42,
	0x75, 0x64, 0x67, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x2e, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75, 0x64,
	0x67, 0x65, 0x74, 0x47, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x42, 0x75, 0x64, 0x67, 0x65, 0x74, 0x47, 0x65, 0x74, 0x32,
	0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60,
	0x0a, 0x16, 0x41, 0x64, 0x76, 0x56, 0x31, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x70, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x67, 0x0a, 0x10, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x47, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x19, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x31, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x76, 0x65, 0x72, 0x74, 0x73, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x77, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76,
	0x56, 0x31, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x64, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x77, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76,
	0x56, 0x31, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a,
	0x12, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x47, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x63, 0x61,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2e, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x68, 0x0a, 0x1a, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65,
	0x74, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x32, 0x2e,
	0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x45, 0x78,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64, 0x0a, 0x18, 0x41, 0x64, 0x76,
	0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x68, 0x72, 0x61, 0x73,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x5e, 0x0a, 0x15, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65,
	0x74, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x65, 0x74, 0x12, 0x2d, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x79, 0x0a, 0x16, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65,
	0x74, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x2e, 0x77, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56,
	0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x77, 0x62, 0x2e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56,
	0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x50, 0x6c, 0x75, 0x73, 0x50, 0x6f,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x18, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x6f,
	0x6e, 0x67, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x74, 0x53, 0x74, 0x72, 0x6f, 0x6e, 0x67, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x91, 0x01, 0x0a, 0x1e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x47, 0x65, 0x74, 0x12, 0x36, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x77, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x71, 0x0a, 0x1e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x37,
	0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x11, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x53, 0x74, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x12, 0x29, 0x2e, 0x77,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x76, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53,
	0x74, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x18, 0x41, 0x64, 0x76,
	0x56, 0x31, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x31, 0x2e,
	0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x76, 0x56, 0x31, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0b, 0x41, 0x64, 0x76, 0x56, 0x31, 0x55, 0x70, 0x64, 0x47, 0x65, 0x74, 0x12,
	0x23, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x55, 0x70, 0x64, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x31, 0x55, 0x70, 0x64, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x41, 0x64,
	0x76, 0x56, 0x31, 0x55, 0x70, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x47,
	0x65, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2d, 0x2e, 0x77, 0x62, 0x2e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76,
	0x56, 0x31, 0x55, 0x70, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x16, 0x41, 0x64, 0x76,
	0x56, 0x32, 0x41, 0x75, 0x74, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73,
	0x47, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32, 0x41, 0x75, 0x74, 0x6f, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32, 0x41, 0x75, 0x74, 0x6f, 0x44,
	0x61, 0x69, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x15, 0x41, 0x64, 0x76, 0x56, 0x32,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74,
	0x12, 0x2d, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74,
	0x57, 0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x31, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x73, 0x47, 0x65, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x70, 0x0a, 0x12, 0x41, 0x64, 0x76, 0x56, 0x32, 0x46, 0x75, 0x6c, 0x6c, 0x73,
	0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32,
	0x46, 0x75, 0x6c, 0x6c, 0x73, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32, 0x46, 0x75, 0x6c, 0x6c,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x32, 0x30, 0x30, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x15, 0x41, 0x64, 0x76, 0x56, 0x32, 0x53, 0x65, 0x61,
	0x63, 0x61, 0x74, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x2d, 0x2e,
	0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x64, 0x76, 0x56, 0x32, 0x53, 0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x64, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x77,
	0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x76, 0x56, 0x32, 0x53, 0x65, 0x61, 0x63, 0x61, 0x74, 0x53, 0x61, 0x76, 0x65, 0x41, 0x64,
	0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x14,
	0x41, 0x64, 0x76, 0x56, 0x32, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x4e, 0x6d, 0x73,
	0x50, 0x6f, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32, 0x53, 0x75, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x72, 0x4e, 0x6d, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x77, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x76, 0x56, 0x32, 0x53, 0x75, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x72, 0x4e, 0x6d, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x41, 0x49, 0x4f, 0x2f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x77, 0x62,
	0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x77, 0x62,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_wb_promotion_v1_service_proto_rawDescOnce sync.Once
	file_wb_promotion_v1_service_proto_rawDescData = file_wb_promotion_v1_service_proto_rawDesc
)

func file_wb_promotion_v1_service_proto_rawDescGZIP() []byte {
	file_wb_promotion_v1_service_proto_rawDescOnce.Do(func() {
		file_wb_promotion_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_wb_promotion_v1_service_proto_rawDescData)
	})
	return file_wb_promotion_v1_service_proto_rawDescData
}

var file_wb_promotion_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 61)
var file_wb_promotion_v1_service_proto_goTypes = []interface{}{
	(*AdvV0ActiveGetRequest)(nil),                          // 0: wb.promotion.v1.AdvV0ActiveGetRequest
	(*AdvV0AllcpmPostRequest)(nil),                         // 1: wb.promotion.v1.AdvV0AllcpmPostRequest
	(*AdvV0AllcpmPostResponse)(nil),                        // 2: wb.promotion.v1.AdvV0AllcpmPostResponse
	(*AdvV0CpmGetRequest)(nil),                             // 3: wb.promotion.v1.AdvV0CpmGetRequest
	(*AdvV0CpmGetResponse)(nil),                            // 4: wb.promotion.v1.AdvV0CpmGetResponse
	(*AdvV0CpmPostRequest)(nil),                            // 5: wb.promotion.v1.AdvV0CpmPostRequest
	(*AdvV0DeleteGetRequest)(nil),                          // 6: wb.promotion.v1.AdvV0DeleteGetRequest
	(*AdvV0ParamsMenuGetRequest)(nil),                      // 7: wb.promotion.v1.AdvV0ParamsMenuGetRequest
	(*AdvV0ParamsMenuGetResponse)(nil),                     // 8: wb.promotion.v1.AdvV0ParamsMenuGetResponse
	(*AdvV0ParamsSetGetRequest)(nil),                       // 9: wb.promotion.v1.AdvV0ParamsSetGetRequest
	(*AdvV0ParamsSetGetResponse)(nil),                      // 10: wb.promotion.v1.AdvV0ParamsSetGetResponse
	(*AdvV0ParamsSubjectGetRequest)(nil),                   // 11: wb.promotion.v1.AdvV0ParamsSubjectGetRequest
	(*AdvV0ParamsSubjectGetResponse)(nil),                  // 12: wb.promotion.v1.AdvV0ParamsSubjectGetResponse
	(*AdvV0PauseGetRequest)(nil),                           // 13: wb.promotion.v1.AdvV0PauseGetRequest
	(*AdvV0RenamePostRequest)(nil),                         // 14: wb.promotion.v1.AdvV0RenamePostRequest
	(*AdvV0StartGetRequest)(nil),                           // 15: wb.promotion.v1.AdvV0StartGetRequest
	(*AdvV0StopGetRequest)(nil),                            // 16: wb.promotion.v1.AdvV0StopGetRequest
	(*AdvV1AdvertGetRequest)(nil),                          // 17: wb.promotion.v1.AdvV1AdvertGetRequest
	(*AdvV1AdvertPausePostRequest)(nil),                    // 18: wb.promotion.v1.AdvV1AdvertPausePostRequest
	(*AdvV1AdvertStartPostRequest)(nil),                    // 19: wb.promotion.v1.AdvV1AdvertStartPostRequest
	(*AdvV1AdvertStopPostRequest)(nil),                     // 20: wb.promotion.v1.AdvV1AdvertStopPostRequest
	(*AdvV1AdvertsGetRequest)(nil),                         // 21: wb.promotion.v1.AdvV1AdvertsGetRequest
	(*AdvV1AdvertsGetResponse)(nil),                        // 22: wb.promotion.v1.AdvV1AdvertsGetResponse
	(*AdvV1AutoActivePostRequest)(nil),                     // 23: wb.promotion.v1.AdvV1AutoActivePostRequest
	(*AdvV1AutoGetnmtoaddGetRequest)(nil),                  // 24: wb.promotion.v1.AdvV1AutoGetnmtoaddGetRequest
	(*AdvV1AutoGetnmtoaddGetResponse)(nil),                 // 25: wb.promotion.v1.AdvV1AutoGetnmtoaddGetResponse
	(*AdvV1AutoSetExcludedPostRequest)(nil),                // 26: wb.promotion.v1.AdvV1AutoSetExcludedPostRequest
	(*AdvV1AutoStatGetRequest)(nil),                        // 27: wb.promotion.v1.AdvV1AutoStatGetRequest
	(*AdvV1AutoUpdatenmPostRequest)(nil),                   // 28: wb.promotion.v1.AdvV1AutoUpdatenmPostRequest
	(*AdvV1BudgetDepositPostRequest)(nil),                  // 29: wb.promotion.v1.AdvV1BudgetDepositPostRequest
	(*AdvV1BudgetGetRequest)(nil),                          // 30: wb.promotion.v1.AdvV1BudgetGetRequest
	(*AdvV1ItemCpmChangePostRequest)(nil),                  // 31: wb.promotion.v1.AdvV1ItemCpmChangePostRequest
	(*AdvV1PaymentsGetRequest)(nil),                        // 32: wb.promotion.v1.AdvV1PaymentsGetRequest
	(*AdvV1PaymentsGetResponse)(nil),                       // 33: wb.promotion.v1.AdvV1PaymentsGetResponse
	(*AdvV1PromotionAdvertsPostRequest)(nil),               // 34: wb.promotion.v1.AdvV1PromotionAdvertsPostRequest
	(*AdvV1SaveAdPostRequest)(nil),                         // 35: wb.promotion.v1.AdvV1SaveAdPostRequest
	(*AdvV1SaveAdPostResponse)(nil),                        // 36: wb.promotion.v1.AdvV1SaveAdPostResponse
	(*AdvV1SeacatStatGetRequest)(nil),                      // 37: wb.promotion.v1.AdvV1SeacatStatGetRequest
	(*AdvV1SearchSetExcludedPostRequest)(nil),              // 38: wb.promotion.v1.AdvV1SearchSetExcludedPostRequest
	(*AdvV1SearchSetPhrasePostRequest)(nil),                // 39: wb.promotion.v1.AdvV1SearchSetPhrasePostRequest
	(*AdvV1SearchSetPlusGetRequest)(nil),                   // 40: wb.promotion.v1.AdvV1SearchSetPlusGetRequest
	(*AdvV1SearchSetPlusPostRequest)(nil),                  // 41: wb.promotion.v1.AdvV1SearchSetPlusPostRequest
	(*AdvV1SearchSetPlusPostResponse)(nil),                 // 42: wb.promotion.v1.AdvV1SearchSetPlusPostResponse
	(*AdvV1SearchSetStrongPostRequest)(nil),                // 43: wb.promotion.v1.AdvV1SearchSetStrongPostRequest
	(*AdvV1SearchSupplierProductsGetRequest)(nil),          // 44: wb.promotion.v1.AdvV1SearchSupplierProductsGetRequest
	(*AdvV1SearchSupplierProductsGetResponse)(nil),         // 45: wb.promotion.v1.AdvV1SearchSupplierProductsGetResponse
	(*AdvV1SearchSupplierSubjectsGetResponse)(nil),         // 46: wb.promotion.v1.AdvV1SearchSupplierSubjectsGetResponse
	(*AdvV1StatWordsGetRequest)(nil),                       // 47: wb.promotion.v1.AdvV1StatWordsGetRequest
	(*AdvV1StatsPostRequest)(nil),                          // 48: wb.promotion.v1.AdvV1StatsPostRequest
	(*AdvV1StatsPostResponse)(nil),                         // 49: wb.promotion.v1.AdvV1StatsPostResponse
	(*AdvV1SupplierSubjectsGetResponse)(nil),               // 50: wb.promotion.v1.AdvV1SupplierSubjectsGetResponse
	(*AdvV1UpdGetRequest)(nil),                             // 51: wb.promotion.v1.AdvV1UpdGetRequest
	(*AdvV1UpdGetResponse)(nil),                            // 52: wb.promotion.v1.AdvV1UpdGetResponse
	(*AdvV1UpdIntervalsGetResponse)(nil),                   // 53: wb.promotion.v1.AdvV1UpdIntervalsGetResponse
	(*AdvV2AutoDailyWordsGetRequest)(nil),                  // 54: wb.promotion.v1.AdvV2AutoDailyWordsGetRequest
	(*AdvV2AutoStatWordsGetRequest)(nil),                   // 55: wb.promotion.v1.AdvV2AutoStatWordsGetRequest
	(*AdvV2FullstatsPostRequest)(nil),                      // 56: wb.promotion.v1.AdvV2FullstatsPostRequest
	(*AdvV2SeacatSaveAdPostRequest)(nil),                   // 57: wb.promotion.v1.AdvV2SeacatSaveAdPostRequest
	(*AdvV2SeacatSaveAdPostResponse)(nil),                  // 58: wb.promotion.v1.AdvV2SeacatSaveAdPostResponse
	(*AdvV2SupplierNmsPostRequest)(nil),                    // 59: wb.promotion.v1.AdvV2SupplierNmsPostRequest
	(*AdvV2SupplierNmsPostResponse)(nil),                   // 60: wb.promotion.v1.AdvV2SupplierNmsPostResponse
	(*AdvV0AllcpmPostReq)(nil),                             // 61: wb.promotion.v1.AdvV0AllcpmPostReq
	(*AdvV0AllcpmPost200ResponseInner)(nil),                // 62: wb.promotion.v1.AdvV0AllcpmPost200ResponseInner
	(*AdvV0CpmGet200ResponseInner)(nil),                    // 63: wb.promotion.v1.AdvV0CpmGet200ResponseInner
	(*AdvV0CpmPostReq)(nil),                                // 64: wb.promotion.v1.AdvV0CpmPostReq
	(*AdvV0ParamsMenuGet200ResponseInner)(nil),             // 65: wb.promotion.v1.AdvV0ParamsMenuGet200ResponseInner
	(*AdvV0ParamsSetGet200ResponseInner)(nil),              // 66: wb.promotion.v1.AdvV0ParamsSetGet200ResponseInner
	(*AdvV0ParamsSubjectGet200ResponseInner)(nil),          // 67: wb.promotion.v1.AdvV0ParamsSubjectGet200ResponseInner
	(*AdvV0RenamePostReq)(nil),                             // 68: wb.promotion.v1.AdvV0RenamePostReq
	(*AdvV1AdvertPausePostReq)(nil),                        // 69: wb.promotion.v1.AdvV1AdvertPausePostReq
	(*AdvV1AdvertStartPostReq)(nil),                        // 70: wb.promotion.v1.AdvV1AdvertStartPostReq
	(*AdvV1AdvertStopPostReq)(nil),                         // 71: wb.promotion.v1.AdvV1AdvertStopPostReq
	(*AdvV1AdvertsGet200ResponseInner)(nil),                // 72: wb.promotion.v1.AdvV1AdvertsGet200ResponseInner
	(*AdvV1AutoActivePostReq)(nil),                         // 73: wb.promotion.v1.AdvV1AutoActivePostReq
	(*AdvV1AutoSetExcludedPostReq)(nil),                    // 74: wb.promotion.v1.AdvV1AutoSetExcludedPostReq
	(*AdvV1AutoUpdatenmPostReq)(nil),                       // 75: wb.promotion.v1.AdvV1AutoUpdatenmPostReq
	(*AdvV1BudgetDepositPostReq)(nil),                      // 76: wb.promotion.v1.AdvV1BudgetDepositPostReq
	(*AdvV1ItemCpmChangePostReq)(nil),                      // 77: wb.promotion.v1.AdvV1ItemCpmChangePostReq
	(*AdvV1PaymentsGet200ResponseInner)(nil),               // 78: wb.promotion.v1.AdvV1PaymentsGet200ResponseInner
	(*AdvV1SaveAdPostReq)(nil),                             // 79: wb.promotion.v1.AdvV1SaveAdPostReq
	(*AdvV1SearchSetExcludedPostReq)(nil),                  // 80: wb.promotion.v1.AdvV1SearchSetExcludedPostReq
	(*AdvV1SearchSetPhrasePostReq)(nil),                    // 81: wb.promotion.v1.AdvV1SearchSetPhrasePostReq
	(*AdvV1SearchSetPlusPostReq)(nil),                      // 82: wb.promotion.v1.AdvV1SearchSetPlusPostReq
	(*AdvV1SearchSetStrongPostReq)(nil),                    // 83: wb.promotion.v1.AdvV1SearchSetStrongPostReq
	(*AdvV1SearchSupplierProductsGet200ResponseInner)(nil), // 84: wb.promotion.v1.AdvV1SearchSupplierProductsGet200ResponseInner
	(*AdvV1SearchSupplierSubjectsGet200ResponseInner)(nil), // 85: wb.promotion.v1.AdvV1SearchSupplierSubjectsGet200ResponseInner
	(*AdvV1StatsPostReq)(nil),                              // 86: wb.promotion.v1.AdvV1StatsPostReq
	(*AdvV1StatsPost200ResponseInner)(nil),                 // 87: wb.promotion.v1.AdvV1StatsPost200ResponseInner
	(*AdvV1SupplierSubjectsGet200ResponseInner)(nil),       // 88: wb.promotion.v1.AdvV1SupplierSubjectsGet200ResponseInner
	(*AdvV1UpdGet200ResponseInner)(nil),                    // 89: wb.promotion.v1.AdvV1UpdGet200ResponseInner
	(*AdvV2FullstatsPostReq)(nil),                          // 90: wb.promotion.v1.AdvV2FullstatsPostReq
	(*AdvV2SeacatSaveAdPostReq)(nil),                       // 91: wb.promotion.v1.AdvV2SeacatSaveAdPostReq
	(*AdvV2SupplierNmsPost200ResponseInner)(nil),           // 92: wb.promotion.v1.AdvV2SupplierNmsPost200ResponseInner
	(*emptypb.Empty)(nil),                                  // 93: google.protobuf.Empty
	(*AdvV1AdvertGet200Response)(nil),                      // 94: wb.promotion.v1.AdvV1AdvertGet200Response
	(*AdvV1AutoStatGet200Response)(nil),                    // 95: wb.promotion.v1.AdvV1AutoStatGet200Response
	(*AdvV1BalanceGet200Response)(nil),                     // 96: wb.promotion.v1.AdvV1BalanceGet200Response
	(*AdvV1BudgetDepositPost200Response)(nil),              // 97: wb.promotion.v1.AdvV1BudgetDepositPost200Response
	(*AdvV1BudgetGet200Response)(nil),                      // 98: wb.promotion.v1.AdvV1BudgetGet200Response
	(*AdvV1CountGet200Response)(nil),                       // 99: wb.promotion.v1.AdvV1CountGet200Response
	(*AdvV1PromotionAdvertsPost200Response)(nil),           // 100: wb.promotion.v1.AdvV1PromotionAdvertsPost200Response
	(*AdvV1PromotionCountGet200Response)(nil),              // 101: wb.promotion.v1.AdvV1PromotionCountGet200Response
	(*AdvV1SeacatStatGet200Response)(nil),                  // 102: wb.promotion.v1.AdvV1SeacatStatGet200Response
	(*AdvV1StatWordsGet200Response)(nil),                   // 103: wb.promotion.v1.AdvV1StatWordsGet200Response
	(*AdvV2AutoDailyWordsGet200Response)(nil),              // 104: wb.promotion.v1.AdvV2AutoDailyWordsGet200Response
	(*AdvV2AutoStatWordsGet200Response)(nil),               // 105: wb.promotion.v1.AdvV2AutoStatWordsGet200Response
	(*AdvV2FullstatsPost200Response)(nil),                  // 106: wb.promotion.v1.AdvV2FullstatsPost200Response
}
var file_wb_promotion_v1_service_proto_depIdxs = []int32{
	61,  // 0: wb.promotion.v1.AdvV0AllcpmPostRequest.advV0AllcpmPostReq:type_name -> wb.promotion.v1.AdvV0AllcpmPostReq
	62,  // 1: wb.promotion.v1.AdvV0AllcpmPostResponse.data:type_name -> wb.promotion.v1.AdvV0AllcpmPost200ResponseInner
	63,  // 2: wb.promotion.v1.AdvV0CpmGetResponse.data:type_name -> wb.promotion.v1.AdvV0CpmGet200ResponseInner
	64,  // 3: wb.promotion.v1.AdvV0CpmPostRequest.advV0CpmPostReq:type_name -> wb.promotion.v1.AdvV0CpmPostReq
	65,  // 4: wb.promotion.v1.AdvV0ParamsMenuGetResponse.data:type_name -> wb.promotion.v1.AdvV0ParamsMenuGet200ResponseInner
	66,  // 5: wb.promotion.v1.AdvV0ParamsSetGetResponse.data:type_name -> wb.promotion.v1.AdvV0ParamsSetGet200ResponseInner
	67,  // 6: wb.promotion.v1.AdvV0ParamsSubjectGetResponse.data:type_name -> wb.promotion.v1.AdvV0ParamsSubjectGet200ResponseInner
	68,  // 7: wb.promotion.v1.AdvV0RenamePostRequest.advV0RenamePostReq:type_name -> wb.promotion.v1.AdvV0RenamePostReq
	69,  // 8: wb.promotion.v1.AdvV1AdvertPausePostRequest.advV1AdvertPausePostReq:type_name -> wb.promotion.v1.AdvV1AdvertPausePostReq
	70,  // 9: wb.promotion.v1.AdvV1AdvertStartPostRequest.advV1AdvertStartPostReq:type_name -> wb.promotion.v1.AdvV1AdvertStartPostReq
	71,  // 10: wb.promotion.v1.AdvV1AdvertStopPostRequest.advV1AdvertStopPostReq:type_name -> wb.promotion.v1.AdvV1AdvertStopPostReq
	72,  // 11: wb.promotion.v1.AdvV1AdvertsGetResponse.data:type_name -> wb.promotion.v1.AdvV1AdvertsGet200ResponseInner
	73,  // 12: wb.promotion.v1.AdvV1AutoActivePostRequest.advV1AutoActivePostReq:type_name -> wb.promotion.v1.AdvV1AutoActivePostReq
	74,  // 13: wb.promotion.v1.AdvV1AutoSetExcludedPostRequest.advV1AutoSetExcludedPostReq:type_name -> wb.promotion.v1.AdvV1AutoSetExcludedPostReq
	75,  // 14: wb.promotion.v1.AdvV1AutoUpdatenmPostRequest.advV1AutoUpdatenmPostReq:type_name -> wb.promotion.v1.AdvV1AutoUpdatenmPostReq
	76,  // 15: wb.promotion.v1.AdvV1BudgetDepositPostRequest.advV1BudgetDepositPostReq:type_name -> wb.promotion.v1.AdvV1BudgetDepositPostReq
	77,  // 16: wb.promotion.v1.AdvV1ItemCpmChangePostRequest.advV1ItemCpmChangePostReq:type_name -> wb.promotion.v1.AdvV1ItemCpmChangePostReq
	78,  // 17: wb.promotion.v1.AdvV1PaymentsGetResponse.data:type_name -> wb.promotion.v1.AdvV1PaymentsGet200ResponseInner
	79,  // 18: wb.promotion.v1.AdvV1SaveAdPostRequest.advV1SaveAdPostReq:type_name -> wb.promotion.v1.AdvV1SaveAdPostReq
	80,  // 19: wb.promotion.v1.AdvV1SearchSetExcludedPostRequest.advV1SearchSetExcludedPostReq:type_name -> wb.promotion.v1.AdvV1SearchSetExcludedPostReq
	81,  // 20: wb.promotion.v1.AdvV1SearchSetPhrasePostRequest.advV1SearchSetPhrasePostReq:type_name -> wb.promotion.v1.AdvV1SearchSetPhrasePostReq
	82,  // 21: wb.promotion.v1.AdvV1SearchSetPlusPostRequest.advV1SearchSetPlusPostReq:type_name -> wb.promotion.v1.AdvV1SearchSetPlusPostReq
	83,  // 22: wb.promotion.v1.AdvV1SearchSetStrongPostRequest.advV1SearchSetStrongPostReq:type_name -> wb.promotion.v1.AdvV1SearchSetStrongPostReq
	84,  // 23: wb.promotion.v1.AdvV1SearchSupplierProductsGetResponse.data:type_name -> wb.promotion.v1.AdvV1SearchSupplierProductsGet200ResponseInner
	85,  // 24: wb.promotion.v1.AdvV1SearchSupplierSubjectsGetResponse.data:type_name -> wb.promotion.v1.AdvV1SearchSupplierSubjectsGet200ResponseInner
	86,  // 25: wb.promotion.v1.AdvV1StatsPostRequest.advV1StatsPostReq:type_name -> wb.promotion.v1.AdvV1StatsPostReq
	87,  // 26: wb.promotion.v1.AdvV1StatsPostResponse.data:type_name -> wb.promotion.v1.AdvV1StatsPost200ResponseInner
	88,  // 27: wb.promotion.v1.AdvV1SupplierSubjectsGetResponse.data:type_name -> wb.promotion.v1.AdvV1SupplierSubjectsGet200ResponseInner
	89,  // 28: wb.promotion.v1.AdvV1UpdGetResponse.data:type_name -> wb.promotion.v1.AdvV1UpdGet200ResponseInner
	90,  // 29: wb.promotion.v1.AdvV2FullstatsPostRequest.advV2FullstatsPostReq:type_name -> wb.promotion.v1.AdvV2FullstatsPostReq
	91,  // 30: wb.promotion.v1.AdvV2SeacatSaveAdPostRequest.advV2SeacatSaveAdPostReq:type_name -> wb.promotion.v1.AdvV2SeacatSaveAdPostReq
	92,  // 31: wb.promotion.v1.AdvV2SupplierNmsPostResponse.data:type_name -> wb.promotion.v1.AdvV2SupplierNmsPost200ResponseInner
	0,   // 32: wb.promotion.v1.PromotionService.AdvV0ActiveGet:input_type -> wb.promotion.v1.AdvV0ActiveGetRequest
	1,   // 33: wb.promotion.v1.PromotionService.AdvV0AllcpmPost:input_type -> wb.promotion.v1.AdvV0AllcpmPostRequest
	3,   // 34: wb.promotion.v1.PromotionService.AdvV0CpmGet:input_type -> wb.promotion.v1.AdvV0CpmGetRequest
	5,   // 35: wb.promotion.v1.PromotionService.AdvV0CpmPost:input_type -> wb.promotion.v1.AdvV0CpmPostRequest
	6,   // 36: wb.promotion.v1.PromotionService.AdvV0DeleteGet:input_type -> wb.promotion.v1.AdvV0DeleteGetRequest
	7,   // 37: wb.promotion.v1.PromotionService.AdvV0ParamsMenuGet:input_type -> wb.promotion.v1.AdvV0ParamsMenuGetRequest
	9,   // 38: wb.promotion.v1.PromotionService.AdvV0ParamsSetGet:input_type -> wb.promotion.v1.AdvV0ParamsSetGetRequest
	11,  // 39: wb.promotion.v1.PromotionService.AdvV0ParamsSubjectGet:input_type -> wb.promotion.v1.AdvV0ParamsSubjectGetRequest
	13,  // 40: wb.promotion.v1.PromotionService.AdvV0PauseGet:input_type -> wb.promotion.v1.AdvV0PauseGetRequest
	14,  // 41: wb.promotion.v1.PromotionService.AdvV0RenamePost:input_type -> wb.promotion.v1.AdvV0RenamePostRequest
	15,  // 42: wb.promotion.v1.PromotionService.AdvV0StartGet:input_type -> wb.promotion.v1.AdvV0StartGetRequest
	16,  // 43: wb.promotion.v1.PromotionService.AdvV0StopGet:input_type -> wb.promotion.v1.AdvV0StopGetRequest
	17,  // 44: wb.promotion.v1.PromotionService.AdvV1AdvertGet:input_type -> wb.promotion.v1.AdvV1AdvertGetRequest
	18,  // 45: wb.promotion.v1.PromotionService.AdvV1AdvertPausePost:input_type -> wb.promotion.v1.AdvV1AdvertPausePostRequest
	19,  // 46: wb.promotion.v1.PromotionService.AdvV1AdvertStartPost:input_type -> wb.promotion.v1.AdvV1AdvertStartPostRequest
	20,  // 47: wb.promotion.v1.PromotionService.AdvV1AdvertStopPost:input_type -> wb.promotion.v1.AdvV1AdvertStopPostRequest
	21,  // 48: wb.promotion.v1.PromotionService.AdvV1AdvertsGet:input_type -> wb.promotion.v1.AdvV1AdvertsGetRequest
	23,  // 49: wb.promotion.v1.PromotionService.AdvV1AutoActivePost:input_type -> wb.promotion.v1.AdvV1AutoActivePostRequest
	24,  // 50: wb.promotion.v1.PromotionService.AdvV1AutoGetnmtoaddGet:input_type -> wb.promotion.v1.AdvV1AutoGetnmtoaddGetRequest
	26,  // 51: wb.promotion.v1.PromotionService.AdvV1AutoSetExcludedPost:input_type -> wb.promotion.v1.AdvV1AutoSetExcludedPostRequest
	27,  // 52: wb.promotion.v1.PromotionService.AdvV1AutoStatGet:input_type -> wb.promotion.v1.AdvV1AutoStatGetRequest
	28,  // 53: wb.promotion.v1.PromotionService.AdvV1AutoUpdatenmPost:input_type -> wb.promotion.v1.AdvV1AutoUpdatenmPostRequest
	93,  // 54: wb.promotion.v1.PromotionService.AdvV1BalanceGet:input_type -> google.protobuf.Empty
	29,  // 55: wb.promotion.v1.PromotionService.AdvV1BudgetDepositPost:input_type -> wb.promotion.v1.AdvV1BudgetDepositPostRequest
	30,  // 56: wb.promotion.v1.PromotionService.AdvV1BudgetGet:input_type -> wb.promotion.v1.AdvV1BudgetGetRequest
	93,  // 57: wb.promotion.v1.PromotionService.AdvV1CountGet:input_type -> google.protobuf.Empty
	31,  // 58: wb.promotion.v1.PromotionService.AdvV1ItemCpmChangePost:input_type -> wb.promotion.v1.AdvV1ItemCpmChangePostRequest
	32,  // 59: wb.promotion.v1.PromotionService.AdvV1PaymentsGet:input_type -> wb.promotion.v1.AdvV1PaymentsGetRequest
	34,  // 60: wb.promotion.v1.PromotionService.AdvV1PromotionAdvertsPost:input_type -> wb.promotion.v1.AdvV1PromotionAdvertsPostRequest
	93,  // 61: wb.promotion.v1.PromotionService.AdvV1PromotionCountGet:input_type -> google.protobuf.Empty
	35,  // 62: wb.promotion.v1.PromotionService.AdvV1SaveAdPost:input_type -> wb.promotion.v1.AdvV1SaveAdPostRequest
	37,  // 63: wb.promotion.v1.PromotionService.AdvV1SeacatStatGet:input_type -> wb.promotion.v1.AdvV1SeacatStatGetRequest
	38,  // 64: wb.promotion.v1.PromotionService.AdvV1SearchSetExcludedPost:input_type -> wb.promotion.v1.AdvV1SearchSetExcludedPostRequest
	39,  // 65: wb.promotion.v1.PromotionService.AdvV1SearchSetPhrasePost:input_type -> wb.promotion.v1.AdvV1SearchSetPhrasePostRequest
	40,  // 66: wb.promotion.v1.PromotionService.AdvV1SearchSetPlusGet:input_type -> wb.promotion.v1.AdvV1SearchSetPlusGetRequest
	41,  // 67: wb.promotion.v1.PromotionService.AdvV1SearchSetPlusPost:input_type -> wb.promotion.v1.AdvV1SearchSetPlusPostRequest
	43,  // 68: wb.promotion.v1.PromotionService.AdvV1SearchSetStrongPost:input_type -> wb.promotion.v1.AdvV1SearchSetStrongPostRequest
	44,  // 69: wb.promotion.v1.PromotionService.AdvV1SearchSupplierProductsGet:input_type -> wb.promotion.v1.AdvV1SearchSupplierProductsGetRequest
	93,  // 70: wb.promotion.v1.PromotionService.AdvV1SearchSupplierSubjectsGet:input_type -> google.protobuf.Empty
	47,  // 71: wb.promotion.v1.PromotionService.AdvV1StatWordsGet:input_type -> wb.promotion.v1.AdvV1StatWordsGetRequest
	48,  // 72: wb.promotion.v1.PromotionService.AdvV1StatsPost:input_type -> wb.promotion.v1.AdvV1StatsPostRequest
	93,  // 73: wb.promotion.v1.PromotionService.AdvV1SupplierSubjectsGet:input_type -> google.protobuf.Empty
	51,  // 74: wb.promotion.v1.PromotionService.AdvV1UpdGet:input_type -> wb.promotion.v1.AdvV1UpdGetRequest
	93,  // 75: wb.promotion.v1.PromotionService.AdvV1UpdIntervalsGet:input_type -> google.protobuf.Empty
	54,  // 76: wb.promotion.v1.PromotionService.AdvV2AutoDailyWordsGet:input_type -> wb.promotion.v1.AdvV2AutoDailyWordsGetRequest
	55,  // 77: wb.promotion.v1.PromotionService.AdvV2AutoStatWordsGet:input_type -> wb.promotion.v1.AdvV2AutoStatWordsGetRequest
	56,  // 78: wb.promotion.v1.PromotionService.AdvV2FullstatsPost:input_type -> wb.promotion.v1.AdvV2FullstatsPostRequest
	57,  // 79: wb.promotion.v1.PromotionService.AdvV2SeacatSaveAdPost:input_type -> wb.promotion.v1.AdvV2SeacatSaveAdPostRequest
	59,  // 80: wb.promotion.v1.PromotionService.AdvV2SupplierNmsPost:input_type -> wb.promotion.v1.AdvV2SupplierNmsPostRequest
	93,  // 81: wb.promotion.v1.PromotionService.AdvV0ActiveGet:output_type -> google.protobuf.Empty
	2,   // 82: wb.promotion.v1.PromotionService.AdvV0AllcpmPost:output_type -> wb.promotion.v1.AdvV0AllcpmPostResponse
	4,   // 83: wb.promotion.v1.PromotionService.AdvV0CpmGet:output_type -> wb.promotion.v1.AdvV0CpmGetResponse
	93,  // 84: wb.promotion.v1.PromotionService.AdvV0CpmPost:output_type -> google.protobuf.Empty
	93,  // 85: wb.promotion.v1.PromotionService.AdvV0DeleteGet:output_type -> google.protobuf.Empty
	8,   // 86: wb.promotion.v1.PromotionService.AdvV0ParamsMenuGet:output_type -> wb.promotion.v1.AdvV0ParamsMenuGetResponse
	10,  // 87: wb.promotion.v1.PromotionService.AdvV0ParamsSetGet:output_type -> wb.promotion.v1.AdvV0ParamsSetGetResponse
	12,  // 88: wb.promotion.v1.PromotionService.AdvV0ParamsSubjectGet:output_type -> wb.promotion.v1.AdvV0ParamsSubjectGetResponse
	93,  // 89: wb.promotion.v1.PromotionService.AdvV0PauseGet:output_type -> google.protobuf.Empty
	93,  // 90: wb.promotion.v1.PromotionService.AdvV0RenamePost:output_type -> google.protobuf.Empty
	93,  // 91: wb.promotion.v1.PromotionService.AdvV0StartGet:output_type -> google.protobuf.Empty
	93,  // 92: wb.promotion.v1.PromotionService.AdvV0StopGet:output_type -> google.protobuf.Empty
	94,  // 93: wb.promotion.v1.PromotionService.AdvV1AdvertGet:output_type -> wb.promotion.v1.AdvV1AdvertGet200Response
	93,  // 94: wb.promotion.v1.PromotionService.AdvV1AdvertPausePost:output_type -> google.protobuf.Empty
	93,  // 95: wb.promotion.v1.PromotionService.AdvV1AdvertStartPost:output_type -> google.protobuf.Empty
	93,  // 96: wb.promotion.v1.PromotionService.AdvV1AdvertStopPost:output_type -> google.protobuf.Empty
	22,  // 97: wb.promotion.v1.PromotionService.AdvV1AdvertsGet:output_type -> wb.promotion.v1.AdvV1AdvertsGetResponse
	93,  // 98: wb.promotion.v1.PromotionService.AdvV1AutoActivePost:output_type -> google.protobuf.Empty
	25,  // 99: wb.promotion.v1.PromotionService.AdvV1AutoGetnmtoaddGet:output_type -> wb.promotion.v1.AdvV1AutoGetnmtoaddGetResponse
	93,  // 100: wb.promotion.v1.PromotionService.AdvV1AutoSetExcludedPost:output_type -> google.protobuf.Empty
	95,  // 101: wb.promotion.v1.PromotionService.AdvV1AutoStatGet:output_type -> wb.promotion.v1.AdvV1AutoStatGet200Response
	93,  // 102: wb.promotion.v1.PromotionService.AdvV1AutoUpdatenmPost:output_type -> google.protobuf.Empty
	96,  // 103: wb.promotion.v1.PromotionService.AdvV1BalanceGet:output_type -> wb.promotion.v1.AdvV1BalanceGet200Response
	97,  // 104: wb.promotion.v1.PromotionService.AdvV1BudgetDepositPost:output_type -> wb.promotion.v1.AdvV1BudgetDepositPost200Response
	98,  // 105: wb.promotion.v1.PromotionService.AdvV1BudgetGet:output_type -> wb.promotion.v1.AdvV1BudgetGet200Response
	99,  // 106: wb.promotion.v1.PromotionService.AdvV1CountGet:output_type -> wb.promotion.v1.AdvV1CountGet200Response
	93,  // 107: wb.promotion.v1.PromotionService.AdvV1ItemCpmChangePost:output_type -> google.protobuf.Empty
	33,  // 108: wb.promotion.v1.PromotionService.AdvV1PaymentsGet:output_type -> wb.promotion.v1.AdvV1PaymentsGetResponse
	100, // 109: wb.promotion.v1.PromotionService.AdvV1PromotionAdvertsPost:output_type -> wb.promotion.v1.AdvV1PromotionAdvertsPost200Response
	101, // 110: wb.promotion.v1.PromotionService.AdvV1PromotionCountGet:output_type -> wb.promotion.v1.AdvV1PromotionCountGet200Response
	36,  // 111: wb.promotion.v1.PromotionService.AdvV1SaveAdPost:output_type -> wb.promotion.v1.AdvV1SaveAdPostResponse
	102, // 112: wb.promotion.v1.PromotionService.AdvV1SeacatStatGet:output_type -> wb.promotion.v1.AdvV1SeacatStatGet200Response
	93,  // 113: wb.promotion.v1.PromotionService.AdvV1SearchSetExcludedPost:output_type -> google.protobuf.Empty
	93,  // 114: wb.promotion.v1.PromotionService.AdvV1SearchSetPhrasePost:output_type -> google.protobuf.Empty
	93,  // 115: wb.promotion.v1.PromotionService.AdvV1SearchSetPlusGet:output_type -> google.protobuf.Empty
	42,  // 116: wb.promotion.v1.PromotionService.AdvV1SearchSetPlusPost:output_type -> wb.promotion.v1.AdvV1SearchSetPlusPostResponse
	93,  // 117: wb.promotion.v1.PromotionService.AdvV1SearchSetStrongPost:output_type -> google.protobuf.Empty
	45,  // 118: wb.promotion.v1.PromotionService.AdvV1SearchSupplierProductsGet:output_type -> wb.promotion.v1.AdvV1SearchSupplierProductsGetResponse
	46,  // 119: wb.promotion.v1.PromotionService.AdvV1SearchSupplierSubjectsGet:output_type -> wb.promotion.v1.AdvV1SearchSupplierSubjectsGetResponse
	103, // 120: wb.promotion.v1.PromotionService.AdvV1StatWordsGet:output_type -> wb.promotion.v1.AdvV1StatWordsGet200Response
	49,  // 121: wb.promotion.v1.PromotionService.AdvV1StatsPost:output_type -> wb.promotion.v1.AdvV1StatsPostResponse
	50,  // 122: wb.promotion.v1.PromotionService.AdvV1SupplierSubjectsGet:output_type -> wb.promotion.v1.AdvV1SupplierSubjectsGetResponse
	52,  // 123: wb.promotion.v1.PromotionService.AdvV1UpdGet:output_type -> wb.promotion.v1.AdvV1UpdGetResponse
	53,  // 124: wb.promotion.v1.PromotionService.AdvV1UpdIntervalsGet:output_type -> wb.promotion.v1.AdvV1UpdIntervalsGetResponse
	104, // 125: wb.promotion.v1.PromotionService.AdvV2AutoDailyWordsGet:output_type -> wb.promotion.v1.AdvV2AutoDailyWordsGet200Response
	105, // 126: wb.promotion.v1.PromotionService.AdvV2AutoStatWordsGet:output_type -> wb.promotion.v1.AdvV2AutoStatWordsGet200Response
	106, // 127: wb.promotion.v1.PromotionService.AdvV2FullstatsPost:output_type -> wb.promotion.v1.AdvV2FullstatsPost200Response
	58,  // 128: wb.promotion.v1.PromotionService.AdvV2SeacatSaveAdPost:output_type -> wb.promotion.v1.AdvV2SeacatSaveAdPostResponse
	60,  // 129: wb.promotion.v1.PromotionService.AdvV2SupplierNmsPost:output_type -> wb.promotion.v1.AdvV2SupplierNmsPostResponse
	81,  // [81:130] is the sub-list for method output_type
	32,  // [32:81] is the sub-list for method input_type
	32,  // [32:32] is the sub-list for extension type_name
	32,  // [32:32] is the sub-list for extension extendee
	0,   // [0:32] is the sub-list for field type_name
}

func init() { file_wb_promotion_v1_service_proto_init() }
func file_wb_promotion_v1_service_proto_init() {
	if File_wb_promotion_v1_service_proto != nil {
		return
	}
	file_wb_promotion_v1_adv_v0_allcpm_post200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v0_allcpm_post_request_proto_init()
	file_wb_promotion_v1_adv_v0_cpm_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v0_cpm_post_request_proto_init()
	file_wb_promotion_v1_adv_v0_params_menu_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v0_params_set_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v0_params_subject_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v0_rename_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_advert_get200_response_proto_init()
	file_wb_promotion_v1_adv_v1_advert_pause_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_advert_start_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_advert_stop_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_adverts_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v1_auto_active_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_auto_set_excluded_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_auto_stat_get200_response_proto_init()
	file_wb_promotion_v1_adv_v1_auto_updatenm_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_balance_get200_response_proto_init()
	file_wb_promotion_v1_adv_v1_budget_deposit_post200_response_proto_init()
	file_wb_promotion_v1_adv_v1_budget_deposit_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_budget_get200_response_proto_init()
	file_wb_promotion_v1_adv_v1_count_get200_response_proto_init()
	file_wb_promotion_v1_adv_v1_item_cpm_change_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_payments_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v1_promotion_adverts_post200_response_proto_init()
	file_wb_promotion_v1_adv_v1_promotion_count_get200_response_proto_init()
	file_wb_promotion_v1_adv_v1_save_ad_post400_response_proto_init()
	file_wb_promotion_v1_adv_v1_save_ad_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_seacat_stat_get200_response_proto_init()
	file_wb_promotion_v1_adv_v1_search_set_excluded_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_search_set_phrase_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_search_set_plus_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_search_set_strong_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_search_supplier_products_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v1_search_supplier_subjects_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v1_stat_words_get200_response_proto_init()
	file_wb_promotion_v1_adv_v1_stats_post200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v1_stats_post_request_proto_init()
	file_wb_promotion_v1_adv_v1_supplier_subjects_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v1_upd_get200_response_inner_proto_init()
	file_wb_promotion_v1_adv_v2_auto_daily_words_get200_response_proto_init()
	file_wb_promotion_v1_adv_v2_auto_stat_words_get200_response_proto_init()
	file_wb_promotion_v1_adv_v2_fullstats_post200_response_proto_init()
	file_wb_promotion_v1_adv_v2_fullstats_post_request_proto_init()
	file_wb_promotion_v1_adv_v2_seacat_save_ad_post_request_proto_init()
	file_wb_promotion_v1_adv_v2_supplier_nms_post200_response_inner_proto_init()
	file_wb_promotion_v1_response429_proto_init()
	file_wb_promotion_v1_response_adv_error1_proto_init()
	file_wb_promotion_v1_response_advert401_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wb_promotion_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0ActiveGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0AllcpmPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0AllcpmPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0CpmGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0CpmGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0CpmPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0DeleteGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0ParamsMenuGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0ParamsMenuGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0ParamsSetGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0ParamsSetGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0ParamsSubjectGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0ParamsSubjectGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0PauseGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0RenamePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0StartGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV0StopGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AdvertGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AdvertPausePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AdvertStartPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AdvertStopPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AdvertsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AdvertsGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AutoActivePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AutoGetnmtoaddGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AutoGetnmtoaddGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AutoSetExcludedPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AutoStatGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1AutoUpdatenmPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1BudgetDepositPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1BudgetGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1ItemCpmChangePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1PaymentsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1PaymentsGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1PromotionAdvertsPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SaveAdPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SaveAdPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SeacatStatGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSetExcludedPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSetPhrasePostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSetPlusGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSetPlusPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSetPlusPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSetStrongPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSupplierProductsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSupplierProductsGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SearchSupplierSubjectsGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1StatWordsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1StatsPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1StatsPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1SupplierSubjectsGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1UpdGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1UpdGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV1UpdIntervalsGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV2AutoDailyWordsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV2AutoStatWordsGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV2FullstatsPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV2SeacatSaveAdPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV2SeacatSaveAdPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV2SupplierNmsPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wb_promotion_v1_service_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvV2SupplierNmsPostResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wb_promotion_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   61,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wb_promotion_v1_service_proto_goTypes,
		DependencyIndexes: file_wb_promotion_v1_service_proto_depIdxs,
		MessageInfos:      file_wb_promotion_v1_service_proto_msgTypes,
	}.Build()
	File_wb_promotion_v1_service_proto = out.File
	file_wb_promotion_v1_service_proto_rawDesc = nil
	file_wb_promotion_v1_service_proto_goTypes = nil
	file_wb_promotion_v1_service_proto_depIdxs = nil
}
