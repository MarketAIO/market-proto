//
//Описание API Статистики
//
//С помощью этих методов можно получить отчёты.
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: wb/statistics/v1/_service.proto

package wbSTATISTICSconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/MarketAIO/market-proto/gen/go/pb/wb/statistics/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// DefaultServiceName is the fully-qualified name of the DefaultService service.
	DefaultServiceName = "wb.statistics.v1.DefaultService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// DefaultServiceApiV1SupplierIncomesGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV1SupplierIncomesGet RPC.
	DefaultServiceApiV1SupplierIncomesGetProcedure = "/wb.statistics.v1.DefaultService/ApiV1SupplierIncomesGet"
	// DefaultServiceApiV1SupplierOrdersGetProcedure is the fully-qualified name of the DefaultService's
	// ApiV1SupplierOrdersGet RPC.
	DefaultServiceApiV1SupplierOrdersGetProcedure = "/wb.statistics.v1.DefaultService/ApiV1SupplierOrdersGet"
	// DefaultServiceApiV1SupplierSalesGetProcedure is the fully-qualified name of the DefaultService's
	// ApiV1SupplierSalesGet RPC.
	DefaultServiceApiV1SupplierSalesGetProcedure = "/wb.statistics.v1.DefaultService/ApiV1SupplierSalesGet"
	// DefaultServiceApiV1SupplierStocksGetProcedure is the fully-qualified name of the DefaultService's
	// ApiV1SupplierStocksGet RPC.
	DefaultServiceApiV1SupplierStocksGetProcedure = "/wb.statistics.v1.DefaultService/ApiV1SupplierStocksGet"
	// DefaultServiceApiV5SupplierReportDetailByPeriodGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV5SupplierReportDetailByPeriodGet RPC.
	DefaultServiceApiV5SupplierReportDetailByPeriodGetProcedure = "/wb.statistics.v1.DefaultService/ApiV5SupplierReportDetailByPeriodGet"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	defaultServiceServiceDescriptor                                    = v1.File_wb_statistics_v1__service_proto.Services().ByName("DefaultService")
	defaultServiceApiV1SupplierIncomesGetMethodDescriptor              = defaultServiceServiceDescriptor.Methods().ByName("ApiV1SupplierIncomesGet")
	defaultServiceApiV1SupplierOrdersGetMethodDescriptor               = defaultServiceServiceDescriptor.Methods().ByName("ApiV1SupplierOrdersGet")
	defaultServiceApiV1SupplierSalesGetMethodDescriptor                = defaultServiceServiceDescriptor.Methods().ByName("ApiV1SupplierSalesGet")
	defaultServiceApiV1SupplierStocksGetMethodDescriptor               = defaultServiceServiceDescriptor.Methods().ByName("ApiV1SupplierStocksGet")
	defaultServiceApiV5SupplierReportDetailByPeriodGetMethodDescriptor = defaultServiceServiceDescriptor.Methods().ByName("ApiV5SupplierReportDetailByPeriodGet")
)

// DefaultServiceClient is a client for the wb.statistics.v1.DefaultService service.
type DefaultServiceClient interface {
	ApiV1SupplierIncomesGet(context.Context, *connect.Request[v1.ApiV1SupplierIncomesGetRequest]) (*connect.Response[v1.ApiV1SupplierIncomesGetResponse], error)
	ApiV1SupplierOrdersGet(context.Context, *connect.Request[v1.ApiV1SupplierOrdersGetRequest]) (*connect.Response[v1.ApiV1SupplierOrdersGetResponse], error)
	ApiV1SupplierSalesGet(context.Context, *connect.Request[v1.ApiV1SupplierSalesGetRequest]) (*connect.Response[v1.ApiV1SupplierSalesGetResponse], error)
	ApiV1SupplierStocksGet(context.Context, *connect.Request[v1.ApiV1SupplierStocksGetRequest]) (*connect.Response[v1.ApiV1SupplierStocksGetResponse], error)
	ApiV5SupplierReportDetailByPeriodGet(context.Context, *connect.Request[v1.ApiV5SupplierReportDetailByPeriodGetRequest]) (*connect.Response[v1.ApiV5SupplierReportDetailByPeriodGetResponse], error)
}

// NewDefaultServiceClient constructs a client for the wb.statistics.v1.DefaultService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewDefaultServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) DefaultServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &defaultServiceClient{
		apiV1SupplierIncomesGet: connect.NewClient[v1.ApiV1SupplierIncomesGetRequest, v1.ApiV1SupplierIncomesGetResponse](
			httpClient,
			baseURL+DefaultServiceApiV1SupplierIncomesGetProcedure,
			connect.WithSchema(defaultServiceApiV1SupplierIncomesGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1SupplierOrdersGet: connect.NewClient[v1.ApiV1SupplierOrdersGetRequest, v1.ApiV1SupplierOrdersGetResponse](
			httpClient,
			baseURL+DefaultServiceApiV1SupplierOrdersGetProcedure,
			connect.WithSchema(defaultServiceApiV1SupplierOrdersGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1SupplierSalesGet: connect.NewClient[v1.ApiV1SupplierSalesGetRequest, v1.ApiV1SupplierSalesGetResponse](
			httpClient,
			baseURL+DefaultServiceApiV1SupplierSalesGetProcedure,
			connect.WithSchema(defaultServiceApiV1SupplierSalesGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1SupplierStocksGet: connect.NewClient[v1.ApiV1SupplierStocksGetRequest, v1.ApiV1SupplierStocksGetResponse](
			httpClient,
			baseURL+DefaultServiceApiV1SupplierStocksGetProcedure,
			connect.WithSchema(defaultServiceApiV1SupplierStocksGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV5SupplierReportDetailByPeriodGet: connect.NewClient[v1.ApiV5SupplierReportDetailByPeriodGetRequest, v1.ApiV5SupplierReportDetailByPeriodGetResponse](
			httpClient,
			baseURL+DefaultServiceApiV5SupplierReportDetailByPeriodGetProcedure,
			connect.WithSchema(defaultServiceApiV5SupplierReportDetailByPeriodGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// defaultServiceClient implements DefaultServiceClient.
type defaultServiceClient struct {
	apiV1SupplierIncomesGet              *connect.Client[v1.ApiV1SupplierIncomesGetRequest, v1.ApiV1SupplierIncomesGetResponse]
	apiV1SupplierOrdersGet               *connect.Client[v1.ApiV1SupplierOrdersGetRequest, v1.ApiV1SupplierOrdersGetResponse]
	apiV1SupplierSalesGet                *connect.Client[v1.ApiV1SupplierSalesGetRequest, v1.ApiV1SupplierSalesGetResponse]
	apiV1SupplierStocksGet               *connect.Client[v1.ApiV1SupplierStocksGetRequest, v1.ApiV1SupplierStocksGetResponse]
	apiV5SupplierReportDetailByPeriodGet *connect.Client[v1.ApiV5SupplierReportDetailByPeriodGetRequest, v1.ApiV5SupplierReportDetailByPeriodGetResponse]
}

// ApiV1SupplierIncomesGet calls wb.statistics.v1.DefaultService.ApiV1SupplierIncomesGet.
func (c *defaultServiceClient) ApiV1SupplierIncomesGet(ctx context.Context, req *connect.Request[v1.ApiV1SupplierIncomesGetRequest]) (*connect.Response[v1.ApiV1SupplierIncomesGetResponse], error) {
	return c.apiV1SupplierIncomesGet.CallUnary(ctx, req)
}

// ApiV1SupplierOrdersGet calls wb.statistics.v1.DefaultService.ApiV1SupplierOrdersGet.
func (c *defaultServiceClient) ApiV1SupplierOrdersGet(ctx context.Context, req *connect.Request[v1.ApiV1SupplierOrdersGetRequest]) (*connect.Response[v1.ApiV1SupplierOrdersGetResponse], error) {
	return c.apiV1SupplierOrdersGet.CallUnary(ctx, req)
}

// ApiV1SupplierSalesGet calls wb.statistics.v1.DefaultService.ApiV1SupplierSalesGet.
func (c *defaultServiceClient) ApiV1SupplierSalesGet(ctx context.Context, req *connect.Request[v1.ApiV1SupplierSalesGetRequest]) (*connect.Response[v1.ApiV1SupplierSalesGetResponse], error) {
	return c.apiV1SupplierSalesGet.CallUnary(ctx, req)
}

// ApiV1SupplierStocksGet calls wb.statistics.v1.DefaultService.ApiV1SupplierStocksGet.
func (c *defaultServiceClient) ApiV1SupplierStocksGet(ctx context.Context, req *connect.Request[v1.ApiV1SupplierStocksGetRequest]) (*connect.Response[v1.ApiV1SupplierStocksGetResponse], error) {
	return c.apiV1SupplierStocksGet.CallUnary(ctx, req)
}

// ApiV5SupplierReportDetailByPeriodGet calls
// wb.statistics.v1.DefaultService.ApiV5SupplierReportDetailByPeriodGet.
func (c *defaultServiceClient) ApiV5SupplierReportDetailByPeriodGet(ctx context.Context, req *connect.Request[v1.ApiV5SupplierReportDetailByPeriodGetRequest]) (*connect.Response[v1.ApiV5SupplierReportDetailByPeriodGetResponse], error) {
	return c.apiV5SupplierReportDetailByPeriodGet.CallUnary(ctx, req)
}

// DefaultServiceHandler is an implementation of the wb.statistics.v1.DefaultService service.
type DefaultServiceHandler interface {
	ApiV1SupplierIncomesGet(context.Context, *connect.Request[v1.ApiV1SupplierIncomesGetRequest]) (*connect.Response[v1.ApiV1SupplierIncomesGetResponse], error)
	ApiV1SupplierOrdersGet(context.Context, *connect.Request[v1.ApiV1SupplierOrdersGetRequest]) (*connect.Response[v1.ApiV1SupplierOrdersGetResponse], error)
	ApiV1SupplierSalesGet(context.Context, *connect.Request[v1.ApiV1SupplierSalesGetRequest]) (*connect.Response[v1.ApiV1SupplierSalesGetResponse], error)
	ApiV1SupplierStocksGet(context.Context, *connect.Request[v1.ApiV1SupplierStocksGetRequest]) (*connect.Response[v1.ApiV1SupplierStocksGetResponse], error)
	ApiV5SupplierReportDetailByPeriodGet(context.Context, *connect.Request[v1.ApiV5SupplierReportDetailByPeriodGetRequest]) (*connect.Response[v1.ApiV5SupplierReportDetailByPeriodGetResponse], error)
}

// NewDefaultServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewDefaultServiceHandler(svc DefaultServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	defaultServiceApiV1SupplierIncomesGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1SupplierIncomesGetProcedure,
		svc.ApiV1SupplierIncomesGet,
		connect.WithSchema(defaultServiceApiV1SupplierIncomesGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1SupplierOrdersGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1SupplierOrdersGetProcedure,
		svc.ApiV1SupplierOrdersGet,
		connect.WithSchema(defaultServiceApiV1SupplierOrdersGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1SupplierSalesGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1SupplierSalesGetProcedure,
		svc.ApiV1SupplierSalesGet,
		connect.WithSchema(defaultServiceApiV1SupplierSalesGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1SupplierStocksGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1SupplierStocksGetProcedure,
		svc.ApiV1SupplierStocksGet,
		connect.WithSchema(defaultServiceApiV1SupplierStocksGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV5SupplierReportDetailByPeriodGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV5SupplierReportDetailByPeriodGetProcedure,
		svc.ApiV5SupplierReportDetailByPeriodGet,
		connect.WithSchema(defaultServiceApiV5SupplierReportDetailByPeriodGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/wb.statistics.v1.DefaultService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case DefaultServiceApiV1SupplierIncomesGetProcedure:
			defaultServiceApiV1SupplierIncomesGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1SupplierOrdersGetProcedure:
			defaultServiceApiV1SupplierOrdersGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1SupplierSalesGetProcedure:
			defaultServiceApiV1SupplierSalesGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1SupplierStocksGetProcedure:
			defaultServiceApiV1SupplierStocksGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV5SupplierReportDetailByPeriodGetProcedure:
			defaultServiceApiV5SupplierReportDetailByPeriodGetHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedDefaultServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedDefaultServiceHandler struct{}

func (UnimplementedDefaultServiceHandler) ApiV1SupplierIncomesGet(context.Context, *connect.Request[v1.ApiV1SupplierIncomesGetRequest]) (*connect.Response[v1.ApiV1SupplierIncomesGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.statistics.v1.DefaultService.ApiV1SupplierIncomesGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1SupplierOrdersGet(context.Context, *connect.Request[v1.ApiV1SupplierOrdersGetRequest]) (*connect.Response[v1.ApiV1SupplierOrdersGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.statistics.v1.DefaultService.ApiV1SupplierOrdersGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1SupplierSalesGet(context.Context, *connect.Request[v1.ApiV1SupplierSalesGetRequest]) (*connect.Response[v1.ApiV1SupplierSalesGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.statistics.v1.DefaultService.ApiV1SupplierSalesGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1SupplierStocksGet(context.Context, *connect.Request[v1.ApiV1SupplierStocksGetRequest]) (*connect.Response[v1.ApiV1SupplierStocksGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.statistics.v1.DefaultService.ApiV1SupplierStocksGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV5SupplierReportDetailByPeriodGet(context.Context, *connect.Request[v1.ApiV5SupplierReportDetailByPeriodGetRequest]) (*connect.Response[v1.ApiV5SupplierReportDetailByPeriodGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.statistics.v1.DefaultService.ApiV5SupplierReportDetailByPeriodGet is not implemented"))
}
