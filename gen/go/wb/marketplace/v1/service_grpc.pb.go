//
//Описание API Marketplace
//
//No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: wb/marketplace/v1/service.proto

package wbMarketplace

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MarketplaceService_ApiV3FilesOrdersExternalStickersPost_FullMethodName               = "/wb.marketplace.v1.MarketplaceService/ApiV3FilesOrdersExternalStickersPost"
	MarketplaceService_ApiV3OfficesGet_FullMethodName                                    = "/wb.marketplace.v1.MarketplaceService/ApiV3OfficesGet"
	MarketplaceService_ApiV3OrdersGet_FullMethodName                                     = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersGet"
	MarketplaceService_ApiV3OrdersNewGet_FullMethodName                                  = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersNewGet"
	MarketplaceService_ApiV3OrdersOrderIdCancelPatch_FullMethodName                      = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersOrderIdCancelPatch"
	MarketplaceService_ApiV3OrdersOrderIdMetaDelete_FullMethodName                       = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersOrderIdMetaDelete"
	MarketplaceService_ApiV3OrdersOrderIdMetaGet_FullMethodName                          = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersOrderIdMetaGet"
	MarketplaceService_ApiV3OrdersOrderIdMetaGtinPut_FullMethodName                      = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersOrderIdMetaGtinPut"
	MarketplaceService_ApiV3OrdersOrderIdMetaImeiPut_FullMethodName                      = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersOrderIdMetaImeiPut"
	MarketplaceService_ApiV3OrdersOrderIdMetaSgtinPut_FullMethodName                     = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersOrderIdMetaSgtinPut"
	MarketplaceService_ApiV3OrdersOrderIdMetaUinPut_FullMethodName                       = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersOrderIdMetaUinPut"
	MarketplaceService_ApiV3OrdersStatusPost_FullMethodName                              = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersStatusPost"
	MarketplaceService_ApiV3OrdersStickersPost_FullMethodName                            = "/wb.marketplace.v1.MarketplaceService/ApiV3OrdersStickersPost"
	MarketplaceService_ApiV3PassesGet_FullMethodName                                     = "/wb.marketplace.v1.MarketplaceService/ApiV3PassesGet"
	MarketplaceService_ApiV3PassesOfficesGet_FullMethodName                              = "/wb.marketplace.v1.MarketplaceService/ApiV3PassesOfficesGet"
	MarketplaceService_ApiV3PassesPassIdDelete_FullMethodName                            = "/wb.marketplace.v1.MarketplaceService/ApiV3PassesPassIdDelete"
	MarketplaceService_ApiV3PassesPassIdPut_FullMethodName                               = "/wb.marketplace.v1.MarketplaceService/ApiV3PassesPassIdPut"
	MarketplaceService_ApiV3PassesPost_FullMethodName                                    = "/wb.marketplace.v1.MarketplaceService/ApiV3PassesPost"
	MarketplaceService_ApiV3StocksWarehouseIdDelete_FullMethodName                       = "/wb.marketplace.v1.MarketplaceService/ApiV3StocksWarehouseIdDelete"
	MarketplaceService_ApiV3StocksWarehouseIdPost_FullMethodName                         = "/wb.marketplace.v1.MarketplaceService/ApiV3StocksWarehouseIdPost"
	MarketplaceService_ApiV3StocksWarehouseIdPut_FullMethodName                          = "/wb.marketplace.v1.MarketplaceService/ApiV3StocksWarehouseIdPut"
	MarketplaceService_ApiV3SuppliesGet_FullMethodName                                   = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesGet"
	MarketplaceService_ApiV3SuppliesOrdersReshipmentGet_FullMethodName                   = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesOrdersReshipmentGet"
	MarketplaceService_ApiV3SuppliesPost_FullMethodName                                  = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesPost"
	MarketplaceService_ApiV3SuppliesSupplyIdBarcodeGet_FullMethodName                    = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdBarcodeGet"
	MarketplaceService_ApiV3SuppliesSupplyIdDelete_FullMethodName                        = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdDelete"
	MarketplaceService_ApiV3SuppliesSupplyIdDeliverPatch_FullMethodName                  = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdDeliverPatch"
	MarketplaceService_ApiV3SuppliesSupplyIdGet_FullMethodName                           = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdGet"
	MarketplaceService_ApiV3SuppliesSupplyIdOrdersGet_FullMethodName                     = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdOrdersGet"
	MarketplaceService_ApiV3SuppliesSupplyIdOrdersOrderIdPatch_FullMethodName            = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdOrdersOrderIdPatch"
	MarketplaceService_ApiV3SuppliesSupplyIdTrbxDelete_FullMethodName                    = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdTrbxDelete"
	MarketplaceService_ApiV3SuppliesSupplyIdTrbxGet_FullMethodName                       = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdTrbxGet"
	MarketplaceService_ApiV3SuppliesSupplyIdTrbxPost_FullMethodName                      = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdTrbxPost"
	MarketplaceService_ApiV3SuppliesSupplyIdTrbxStickersPost_FullMethodName              = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdTrbxStickersPost"
	MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete_FullMethodName = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete"
	MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdPatch_FullMethodName               = "/wb.marketplace.v1.MarketplaceService/ApiV3SuppliesSupplyIdTrbxTrbxIdPatch"
	MarketplaceService_ApiV3WarehousesGet_FullMethodName                                 = "/wb.marketplace.v1.MarketplaceService/ApiV3WarehousesGet"
	MarketplaceService_ApiV3WarehousesPost_FullMethodName                                = "/wb.marketplace.v1.MarketplaceService/ApiV3WarehousesPost"
	MarketplaceService_ApiV3WarehousesWarehouseIdDelete_FullMethodName                   = "/wb.marketplace.v1.MarketplaceService/ApiV3WarehousesWarehouseIdDelete"
	MarketplaceService_ApiV3WarehousesWarehouseIdPut_FullMethodName                      = "/wb.marketplace.v1.MarketplaceService/ApiV3WarehousesWarehouseIdPut"
)

// MarketplaceServiceClient is the client API for MarketplaceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MarketplaceServiceClient interface {
	ApiV3FilesOrdersExternalStickersPost(ctx context.Context, in *ApiV3FilesOrdersExternalStickersPostRequest, opts ...grpc.CallOption) (*ApiV3FilesOrdersExternalStickersPost200Response, error)
	ApiV3OfficesGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3OfficesGetResponse, error)
	ApiV3OrdersGet(ctx context.Context, in *ApiV3OrdersGetRequest, opts ...grpc.CallOption) (*ApiV3OrdersGet200Response, error)
	ApiV3OrdersNewGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3OrdersNewGet200Response, error)
	ApiV3OrdersOrderIdCancelPatch(ctx context.Context, in *ApiV3OrdersOrderIdCancelPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaDelete(ctx context.Context, in *ApiV3OrdersOrderIdMetaDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaGet(ctx context.Context, in *ApiV3OrdersOrderIdMetaGetRequest, opts ...grpc.CallOption) (*ApiV3OrdersOrderIdMetaGet200Response, error)
	ApiV3OrdersOrderIdMetaGtinPut(ctx context.Context, in *ApiV3OrdersOrderIdMetaGtinPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaImeiPut(ctx context.Context, in *ApiV3OrdersOrderIdMetaImeiPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaSgtinPut(ctx context.Context, in *ApiV3OrdersOrderIdMetaSgtinPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaUinPut(ctx context.Context, in *ApiV3OrdersOrderIdMetaUinPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3OrdersStatusPost(ctx context.Context, in *ApiV3OrdersStatusPostRequest, opts ...grpc.CallOption) (*ApiV3OrdersStatusPost200Response, error)
	ApiV3OrdersStickersPost(ctx context.Context, in *ApiV3OrdersStickersPostRequest, opts ...grpc.CallOption) (*ApiV3OrdersStickersPost200Response, error)
	ApiV3PassesGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3PassesGetResponse, error)
	ApiV3PassesOfficesGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3PassesOfficesGetResponse, error)
	ApiV3PassesPassIdDelete(ctx context.Context, in *ApiV3PassesPassIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3PassesPassIdPut(ctx context.Context, in *ApiV3PassesPassIdPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3PassesPost(ctx context.Context, in *ApiV3PassesPostRequest, opts ...grpc.CallOption) (*ApiV3PassesPost201Response, error)
	ApiV3StocksWarehouseIdDelete(ctx context.Context, in *ApiV3StocksWarehouseIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3StocksWarehouseIdPost(ctx context.Context, in *ApiV3StocksWarehouseIdPostRequest, opts ...grpc.CallOption) (*ApiV3StocksWarehouseIdPost200Response, error)
	ApiV3StocksWarehouseIdPut(ctx context.Context, in *ApiV3StocksWarehouseIdPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3SuppliesGet(ctx context.Context, in *ApiV3SuppliesGetRequest, opts ...grpc.CallOption) (*ApiV3SuppliesGet200Response, error)
	ApiV3SuppliesOrdersReshipmentGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3SuppliesOrdersReshipmentGet200Response, error)
	ApiV3SuppliesPost(ctx context.Context, in *ApiV3SuppliesPostRequest, opts ...grpc.CallOption) (*ApiV3SuppliesPost201Response, error)
	ApiV3SuppliesSupplyIdBarcodeGet(ctx context.Context, in *ApiV3SuppliesSupplyIdBarcodeGetRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdBarcodeGet200Response, error)
	ApiV3SuppliesSupplyIdDelete(ctx context.Context, in *ApiV3SuppliesSupplyIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdDeliverPatch(ctx context.Context, in *ApiV3SuppliesSupplyIdDeliverPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdGet(ctx context.Context, in *ApiV3SuppliesSupplyIdGetRequest, opts ...grpc.CallOption) (*Supply, error)
	ApiV3SuppliesSupplyIdOrdersGet(ctx context.Context, in *ApiV3SuppliesSupplyIdOrdersGetRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdOrdersGet200Response, error)
	ApiV3SuppliesSupplyIdOrdersOrderIdPatch(ctx context.Context, in *ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdTrbxDelete(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdTrbxGet(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxGetRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdTrbxGet200Response, error)
	ApiV3SuppliesSupplyIdTrbxPost(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxPostRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdTrbxPost201Response, error)
	ApiV3SuppliesSupplyIdTrbxStickersPost(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxStickersPostRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdTrbxStickersPost200Response, error)
	ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdTrbxTrbxIdPatch(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3WarehousesGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3WarehousesGetResponse, error)
	ApiV3WarehousesPost(ctx context.Context, in *ApiV3WarehousesPostRequest, opts ...grpc.CallOption) (*ApiV3WarehousesPost201Response, error)
	ApiV3WarehousesWarehouseIdDelete(ctx context.Context, in *ApiV3WarehousesWarehouseIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV3WarehousesWarehouseIdPut(ctx context.Context, in *ApiV3WarehousesWarehouseIdPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type marketplaceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMarketplaceServiceClient(cc grpc.ClientConnInterface) MarketplaceServiceClient {
	return &marketplaceServiceClient{cc}
}

func (c *marketplaceServiceClient) ApiV3FilesOrdersExternalStickersPost(ctx context.Context, in *ApiV3FilesOrdersExternalStickersPostRequest, opts ...grpc.CallOption) (*ApiV3FilesOrdersExternalStickersPost200Response, error) {
	out := new(ApiV3FilesOrdersExternalStickersPost200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3FilesOrdersExternalStickersPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OfficesGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3OfficesGetResponse, error) {
	out := new(ApiV3OfficesGetResponse)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OfficesGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersGet(ctx context.Context, in *ApiV3OrdersGetRequest, opts ...grpc.CallOption) (*ApiV3OrdersGet200Response, error) {
	out := new(ApiV3OrdersGet200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersNewGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3OrdersNewGet200Response, error) {
	out := new(ApiV3OrdersNewGet200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersNewGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersOrderIdCancelPatch(ctx context.Context, in *ApiV3OrdersOrderIdCancelPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersOrderIdCancelPatch_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersOrderIdMetaDelete(ctx context.Context, in *ApiV3OrdersOrderIdMetaDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersOrderIdMetaDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersOrderIdMetaGet(ctx context.Context, in *ApiV3OrdersOrderIdMetaGetRequest, opts ...grpc.CallOption) (*ApiV3OrdersOrderIdMetaGet200Response, error) {
	out := new(ApiV3OrdersOrderIdMetaGet200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersOrderIdMetaGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersOrderIdMetaGtinPut(ctx context.Context, in *ApiV3OrdersOrderIdMetaGtinPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersOrderIdMetaGtinPut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersOrderIdMetaImeiPut(ctx context.Context, in *ApiV3OrdersOrderIdMetaImeiPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersOrderIdMetaImeiPut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersOrderIdMetaSgtinPut(ctx context.Context, in *ApiV3OrdersOrderIdMetaSgtinPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersOrderIdMetaSgtinPut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersOrderIdMetaUinPut(ctx context.Context, in *ApiV3OrdersOrderIdMetaUinPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersOrderIdMetaUinPut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersStatusPost(ctx context.Context, in *ApiV3OrdersStatusPostRequest, opts ...grpc.CallOption) (*ApiV3OrdersStatusPost200Response, error) {
	out := new(ApiV3OrdersStatusPost200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersStatusPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3OrdersStickersPost(ctx context.Context, in *ApiV3OrdersStickersPostRequest, opts ...grpc.CallOption) (*ApiV3OrdersStickersPost200Response, error) {
	out := new(ApiV3OrdersStickersPost200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3OrdersStickersPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3PassesGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3PassesGetResponse, error) {
	out := new(ApiV3PassesGetResponse)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3PassesGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3PassesOfficesGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3PassesOfficesGetResponse, error) {
	out := new(ApiV3PassesOfficesGetResponse)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3PassesOfficesGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3PassesPassIdDelete(ctx context.Context, in *ApiV3PassesPassIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3PassesPassIdDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3PassesPassIdPut(ctx context.Context, in *ApiV3PassesPassIdPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3PassesPassIdPut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3PassesPost(ctx context.Context, in *ApiV3PassesPostRequest, opts ...grpc.CallOption) (*ApiV3PassesPost201Response, error) {
	out := new(ApiV3PassesPost201Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3PassesPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3StocksWarehouseIdDelete(ctx context.Context, in *ApiV3StocksWarehouseIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3StocksWarehouseIdDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3StocksWarehouseIdPost(ctx context.Context, in *ApiV3StocksWarehouseIdPostRequest, opts ...grpc.CallOption) (*ApiV3StocksWarehouseIdPost200Response, error) {
	out := new(ApiV3StocksWarehouseIdPost200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3StocksWarehouseIdPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3StocksWarehouseIdPut(ctx context.Context, in *ApiV3StocksWarehouseIdPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3StocksWarehouseIdPut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesGet(ctx context.Context, in *ApiV3SuppliesGetRequest, opts ...grpc.CallOption) (*ApiV3SuppliesGet200Response, error) {
	out := new(ApiV3SuppliesGet200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesOrdersReshipmentGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3SuppliesOrdersReshipmentGet200Response, error) {
	out := new(ApiV3SuppliesOrdersReshipmentGet200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesOrdersReshipmentGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesPost(ctx context.Context, in *ApiV3SuppliesPostRequest, opts ...grpc.CallOption) (*ApiV3SuppliesPost201Response, error) {
	out := new(ApiV3SuppliesPost201Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdBarcodeGet(ctx context.Context, in *ApiV3SuppliesSupplyIdBarcodeGetRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdBarcodeGet200Response, error) {
	out := new(ApiV3SuppliesSupplyIdBarcodeGet200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdBarcodeGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdDelete(ctx context.Context, in *ApiV3SuppliesSupplyIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdDeliverPatch(ctx context.Context, in *ApiV3SuppliesSupplyIdDeliverPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdDeliverPatch_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdGet(ctx context.Context, in *ApiV3SuppliesSupplyIdGetRequest, opts ...grpc.CallOption) (*Supply, error) {
	out := new(Supply)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdOrdersGet(ctx context.Context, in *ApiV3SuppliesSupplyIdOrdersGetRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdOrdersGet200Response, error) {
	out := new(ApiV3SuppliesSupplyIdOrdersGet200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdOrdersGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdOrdersOrderIdPatch(ctx context.Context, in *ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdOrdersOrderIdPatch_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdTrbxDelete(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdTrbxDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdTrbxGet(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxGetRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdTrbxGet200Response, error) {
	out := new(ApiV3SuppliesSupplyIdTrbxGet200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdTrbxGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdTrbxPost(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxPostRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdTrbxPost201Response, error) {
	out := new(ApiV3SuppliesSupplyIdTrbxPost201Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdTrbxPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdTrbxStickersPost(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxStickersPostRequest, opts ...grpc.CallOption) (*ApiV3SuppliesSupplyIdTrbxStickersPost200Response, error) {
	out := new(ApiV3SuppliesSupplyIdTrbxStickersPost200Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdTrbxStickersPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3SuppliesSupplyIdTrbxTrbxIdPatch(ctx context.Context, in *ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdPatch_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3WarehousesGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV3WarehousesGetResponse, error) {
	out := new(ApiV3WarehousesGetResponse)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3WarehousesGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3WarehousesPost(ctx context.Context, in *ApiV3WarehousesPostRequest, opts ...grpc.CallOption) (*ApiV3WarehousesPost201Response, error) {
	out := new(ApiV3WarehousesPost201Response)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3WarehousesPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3WarehousesWarehouseIdDelete(ctx context.Context, in *ApiV3WarehousesWarehouseIdDeleteRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3WarehousesWarehouseIdDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *marketplaceServiceClient) ApiV3WarehousesWarehouseIdPut(ctx context.Context, in *ApiV3WarehousesWarehouseIdPutRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, MarketplaceService_ApiV3WarehousesWarehouseIdPut_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MarketplaceServiceServer is the server API for MarketplaceService service.
// All implementations must embed UnimplementedMarketplaceServiceServer
// for forward compatibility
type MarketplaceServiceServer interface {
	ApiV3FilesOrdersExternalStickersPost(context.Context, *ApiV3FilesOrdersExternalStickersPostRequest) (*ApiV3FilesOrdersExternalStickersPost200Response, error)
	ApiV3OfficesGet(context.Context, *emptypb.Empty) (*ApiV3OfficesGetResponse, error)
	ApiV3OrdersGet(context.Context, *ApiV3OrdersGetRequest) (*ApiV3OrdersGet200Response, error)
	ApiV3OrdersNewGet(context.Context, *emptypb.Empty) (*ApiV3OrdersNewGet200Response, error)
	ApiV3OrdersOrderIdCancelPatch(context.Context, *ApiV3OrdersOrderIdCancelPatchRequest) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaDelete(context.Context, *ApiV3OrdersOrderIdMetaDeleteRequest) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaGet(context.Context, *ApiV3OrdersOrderIdMetaGetRequest) (*ApiV3OrdersOrderIdMetaGet200Response, error)
	ApiV3OrdersOrderIdMetaGtinPut(context.Context, *ApiV3OrdersOrderIdMetaGtinPutRequest) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaImeiPut(context.Context, *ApiV3OrdersOrderIdMetaImeiPutRequest) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaSgtinPut(context.Context, *ApiV3OrdersOrderIdMetaSgtinPutRequest) (*emptypb.Empty, error)
	ApiV3OrdersOrderIdMetaUinPut(context.Context, *ApiV3OrdersOrderIdMetaUinPutRequest) (*emptypb.Empty, error)
	ApiV3OrdersStatusPost(context.Context, *ApiV3OrdersStatusPostRequest) (*ApiV3OrdersStatusPost200Response, error)
	ApiV3OrdersStickersPost(context.Context, *ApiV3OrdersStickersPostRequest) (*ApiV3OrdersStickersPost200Response, error)
	ApiV3PassesGet(context.Context, *emptypb.Empty) (*ApiV3PassesGetResponse, error)
	ApiV3PassesOfficesGet(context.Context, *emptypb.Empty) (*ApiV3PassesOfficesGetResponse, error)
	ApiV3PassesPassIdDelete(context.Context, *ApiV3PassesPassIdDeleteRequest) (*emptypb.Empty, error)
	ApiV3PassesPassIdPut(context.Context, *ApiV3PassesPassIdPutRequest) (*emptypb.Empty, error)
	ApiV3PassesPost(context.Context, *ApiV3PassesPostRequest) (*ApiV3PassesPost201Response, error)
	ApiV3StocksWarehouseIdDelete(context.Context, *ApiV3StocksWarehouseIdDeleteRequest) (*emptypb.Empty, error)
	ApiV3StocksWarehouseIdPost(context.Context, *ApiV3StocksWarehouseIdPostRequest) (*ApiV3StocksWarehouseIdPost200Response, error)
	ApiV3StocksWarehouseIdPut(context.Context, *ApiV3StocksWarehouseIdPutRequest) (*emptypb.Empty, error)
	ApiV3SuppliesGet(context.Context, *ApiV3SuppliesGetRequest) (*ApiV3SuppliesGet200Response, error)
	ApiV3SuppliesOrdersReshipmentGet(context.Context, *emptypb.Empty) (*ApiV3SuppliesOrdersReshipmentGet200Response, error)
	ApiV3SuppliesPost(context.Context, *ApiV3SuppliesPostRequest) (*ApiV3SuppliesPost201Response, error)
	ApiV3SuppliesSupplyIdBarcodeGet(context.Context, *ApiV3SuppliesSupplyIdBarcodeGetRequest) (*ApiV3SuppliesSupplyIdBarcodeGet200Response, error)
	ApiV3SuppliesSupplyIdDelete(context.Context, *ApiV3SuppliesSupplyIdDeleteRequest) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdDeliverPatch(context.Context, *ApiV3SuppliesSupplyIdDeliverPatchRequest) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdGet(context.Context, *ApiV3SuppliesSupplyIdGetRequest) (*Supply, error)
	ApiV3SuppliesSupplyIdOrdersGet(context.Context, *ApiV3SuppliesSupplyIdOrdersGetRequest) (*ApiV3SuppliesSupplyIdOrdersGet200Response, error)
	ApiV3SuppliesSupplyIdOrdersOrderIdPatch(context.Context, *ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdTrbxDelete(context.Context, *ApiV3SuppliesSupplyIdTrbxDeleteRequest) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdTrbxGet(context.Context, *ApiV3SuppliesSupplyIdTrbxGetRequest) (*ApiV3SuppliesSupplyIdTrbxGet200Response, error)
	ApiV3SuppliesSupplyIdTrbxPost(context.Context, *ApiV3SuppliesSupplyIdTrbxPostRequest) (*ApiV3SuppliesSupplyIdTrbxPost201Response, error)
	ApiV3SuppliesSupplyIdTrbxStickersPost(context.Context, *ApiV3SuppliesSupplyIdTrbxStickersPostRequest) (*ApiV3SuppliesSupplyIdTrbxStickersPost200Response, error)
	ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete(context.Context, *ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest) (*emptypb.Empty, error)
	ApiV3SuppliesSupplyIdTrbxTrbxIdPatch(context.Context, *ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest) (*emptypb.Empty, error)
	ApiV3WarehousesGet(context.Context, *emptypb.Empty) (*ApiV3WarehousesGetResponse, error)
	ApiV3WarehousesPost(context.Context, *ApiV3WarehousesPostRequest) (*ApiV3WarehousesPost201Response, error)
	ApiV3WarehousesWarehouseIdDelete(context.Context, *ApiV3WarehousesWarehouseIdDeleteRequest) (*emptypb.Empty, error)
	ApiV3WarehousesWarehouseIdPut(context.Context, *ApiV3WarehousesWarehouseIdPutRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedMarketplaceServiceServer()
}

// UnimplementedMarketplaceServiceServer must be embedded to have forward compatible implementations.
type UnimplementedMarketplaceServiceServer struct {
}

func (UnimplementedMarketplaceServiceServer) ApiV3FilesOrdersExternalStickersPost(context.Context, *ApiV3FilesOrdersExternalStickersPostRequest) (*ApiV3FilesOrdersExternalStickersPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3FilesOrdersExternalStickersPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OfficesGet(context.Context, *emptypb.Empty) (*ApiV3OfficesGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OfficesGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersGet(context.Context, *ApiV3OrdersGetRequest) (*ApiV3OrdersGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersNewGet(context.Context, *emptypb.Empty) (*ApiV3OrdersNewGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersNewGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersOrderIdCancelPatch(context.Context, *ApiV3OrdersOrderIdCancelPatchRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersOrderIdCancelPatch not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersOrderIdMetaDelete(context.Context, *ApiV3OrdersOrderIdMetaDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersOrderIdMetaDelete not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersOrderIdMetaGet(context.Context, *ApiV3OrdersOrderIdMetaGetRequest) (*ApiV3OrdersOrderIdMetaGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersOrderIdMetaGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersOrderIdMetaGtinPut(context.Context, *ApiV3OrdersOrderIdMetaGtinPutRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersOrderIdMetaGtinPut not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersOrderIdMetaImeiPut(context.Context, *ApiV3OrdersOrderIdMetaImeiPutRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersOrderIdMetaImeiPut not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersOrderIdMetaSgtinPut(context.Context, *ApiV3OrdersOrderIdMetaSgtinPutRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersOrderIdMetaSgtinPut not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersOrderIdMetaUinPut(context.Context, *ApiV3OrdersOrderIdMetaUinPutRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersOrderIdMetaUinPut not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersStatusPost(context.Context, *ApiV3OrdersStatusPostRequest) (*ApiV3OrdersStatusPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersStatusPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3OrdersStickersPost(context.Context, *ApiV3OrdersStickersPostRequest) (*ApiV3OrdersStickersPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3OrdersStickersPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3PassesGet(context.Context, *emptypb.Empty) (*ApiV3PassesGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3PassesGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3PassesOfficesGet(context.Context, *emptypb.Empty) (*ApiV3PassesOfficesGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3PassesOfficesGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3PassesPassIdDelete(context.Context, *ApiV3PassesPassIdDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3PassesPassIdDelete not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3PassesPassIdPut(context.Context, *ApiV3PassesPassIdPutRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3PassesPassIdPut not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3PassesPost(context.Context, *ApiV3PassesPostRequest) (*ApiV3PassesPost201Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3PassesPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3StocksWarehouseIdDelete(context.Context, *ApiV3StocksWarehouseIdDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3StocksWarehouseIdDelete not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3StocksWarehouseIdPost(context.Context, *ApiV3StocksWarehouseIdPostRequest) (*ApiV3StocksWarehouseIdPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3StocksWarehouseIdPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3StocksWarehouseIdPut(context.Context, *ApiV3StocksWarehouseIdPutRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3StocksWarehouseIdPut not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesGet(context.Context, *ApiV3SuppliesGetRequest) (*ApiV3SuppliesGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesOrdersReshipmentGet(context.Context, *emptypb.Empty) (*ApiV3SuppliesOrdersReshipmentGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesOrdersReshipmentGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesPost(context.Context, *ApiV3SuppliesPostRequest) (*ApiV3SuppliesPost201Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdBarcodeGet(context.Context, *ApiV3SuppliesSupplyIdBarcodeGetRequest) (*ApiV3SuppliesSupplyIdBarcodeGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdBarcodeGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdDelete(context.Context, *ApiV3SuppliesSupplyIdDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdDelete not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdDeliverPatch(context.Context, *ApiV3SuppliesSupplyIdDeliverPatchRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdDeliverPatch not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdGet(context.Context, *ApiV3SuppliesSupplyIdGetRequest) (*Supply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdOrdersGet(context.Context, *ApiV3SuppliesSupplyIdOrdersGetRequest) (*ApiV3SuppliesSupplyIdOrdersGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdOrdersGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdOrdersOrderIdPatch(context.Context, *ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdOrdersOrderIdPatch not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdTrbxDelete(context.Context, *ApiV3SuppliesSupplyIdTrbxDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdTrbxDelete not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdTrbxGet(context.Context, *ApiV3SuppliesSupplyIdTrbxGetRequest) (*ApiV3SuppliesSupplyIdTrbxGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdTrbxGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdTrbxPost(context.Context, *ApiV3SuppliesSupplyIdTrbxPostRequest) (*ApiV3SuppliesSupplyIdTrbxPost201Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdTrbxPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdTrbxStickersPost(context.Context, *ApiV3SuppliesSupplyIdTrbxStickersPostRequest) (*ApiV3SuppliesSupplyIdTrbxStickersPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdTrbxStickersPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete(context.Context, *ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3SuppliesSupplyIdTrbxTrbxIdPatch(context.Context, *ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3SuppliesSupplyIdTrbxTrbxIdPatch not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3WarehousesGet(context.Context, *emptypb.Empty) (*ApiV3WarehousesGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3WarehousesGet not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3WarehousesPost(context.Context, *ApiV3WarehousesPostRequest) (*ApiV3WarehousesPost201Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3WarehousesPost not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3WarehousesWarehouseIdDelete(context.Context, *ApiV3WarehousesWarehouseIdDeleteRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3WarehousesWarehouseIdDelete not implemented")
}
func (UnimplementedMarketplaceServiceServer) ApiV3WarehousesWarehouseIdPut(context.Context, *ApiV3WarehousesWarehouseIdPutRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV3WarehousesWarehouseIdPut not implemented")
}
func (UnimplementedMarketplaceServiceServer) mustEmbedUnimplementedMarketplaceServiceServer() {}

// UnsafeMarketplaceServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MarketplaceServiceServer will
// result in compilation errors.
type UnsafeMarketplaceServiceServer interface {
	mustEmbedUnimplementedMarketplaceServiceServer()
}

func RegisterMarketplaceServiceServer(s grpc.ServiceRegistrar, srv MarketplaceServiceServer) {
	s.RegisterService(&MarketplaceService_ServiceDesc, srv)
}

func _MarketplaceService_ApiV3FilesOrdersExternalStickersPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3FilesOrdersExternalStickersPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3FilesOrdersExternalStickersPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3FilesOrdersExternalStickersPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3FilesOrdersExternalStickersPost(ctx, req.(*ApiV3FilesOrdersExternalStickersPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OfficesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OfficesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OfficesGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OfficesGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersGet(ctx, req.(*ApiV3OrdersGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersNewGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersNewGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersNewGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersNewGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersOrderIdCancelPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersOrderIdCancelPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdCancelPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersOrderIdCancelPatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdCancelPatch(ctx, req.(*ApiV3OrdersOrderIdCancelPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersOrderIdMetaDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersOrderIdMetaDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersOrderIdMetaDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaDelete(ctx, req.(*ApiV3OrdersOrderIdMetaDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersOrderIdMetaGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersOrderIdMetaGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersOrderIdMetaGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaGet(ctx, req.(*ApiV3OrdersOrderIdMetaGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersOrderIdMetaGtinPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersOrderIdMetaGtinPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaGtinPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersOrderIdMetaGtinPut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaGtinPut(ctx, req.(*ApiV3OrdersOrderIdMetaGtinPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersOrderIdMetaImeiPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersOrderIdMetaImeiPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaImeiPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersOrderIdMetaImeiPut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaImeiPut(ctx, req.(*ApiV3OrdersOrderIdMetaImeiPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersOrderIdMetaSgtinPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersOrderIdMetaSgtinPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaSgtinPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersOrderIdMetaSgtinPut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaSgtinPut(ctx, req.(*ApiV3OrdersOrderIdMetaSgtinPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersOrderIdMetaUinPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersOrderIdMetaUinPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaUinPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersOrderIdMetaUinPut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersOrderIdMetaUinPut(ctx, req.(*ApiV3OrdersOrderIdMetaUinPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersStatusPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersStatusPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersStatusPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersStatusPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersStatusPost(ctx, req.(*ApiV3OrdersStatusPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3OrdersStickersPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3OrdersStickersPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3OrdersStickersPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3OrdersStickersPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3OrdersStickersPost(ctx, req.(*ApiV3OrdersStickersPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3PassesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3PassesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3PassesGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3PassesGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3PassesOfficesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3PassesOfficesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3PassesOfficesGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3PassesOfficesGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3PassesPassIdDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3PassesPassIdDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3PassesPassIdDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3PassesPassIdDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3PassesPassIdDelete(ctx, req.(*ApiV3PassesPassIdDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3PassesPassIdPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3PassesPassIdPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3PassesPassIdPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3PassesPassIdPut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3PassesPassIdPut(ctx, req.(*ApiV3PassesPassIdPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3PassesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3PassesPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3PassesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3PassesPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3PassesPost(ctx, req.(*ApiV3PassesPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3StocksWarehouseIdDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3StocksWarehouseIdDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3StocksWarehouseIdDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3StocksWarehouseIdDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3StocksWarehouseIdDelete(ctx, req.(*ApiV3StocksWarehouseIdDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3StocksWarehouseIdPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3StocksWarehouseIdPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3StocksWarehouseIdPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3StocksWarehouseIdPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3StocksWarehouseIdPost(ctx, req.(*ApiV3StocksWarehouseIdPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3StocksWarehouseIdPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3StocksWarehouseIdPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3StocksWarehouseIdPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3StocksWarehouseIdPut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3StocksWarehouseIdPut(ctx, req.(*ApiV3StocksWarehouseIdPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesGet(ctx, req.(*ApiV3SuppliesGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesOrdersReshipmentGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesOrdersReshipmentGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesOrdersReshipmentGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesOrdersReshipmentGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesPost(ctx, req.(*ApiV3SuppliesPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdBarcodeGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdBarcodeGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdBarcodeGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdBarcodeGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdBarcodeGet(ctx, req.(*ApiV3SuppliesSupplyIdBarcodeGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdDelete(ctx, req.(*ApiV3SuppliesSupplyIdDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdDeliverPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdDeliverPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdDeliverPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdDeliverPatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdDeliverPatch(ctx, req.(*ApiV3SuppliesSupplyIdDeliverPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdGet(ctx, req.(*ApiV3SuppliesSupplyIdGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdOrdersGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdOrdersGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdOrdersGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdOrdersGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdOrdersGet(ctx, req.(*ApiV3SuppliesSupplyIdOrdersGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdOrdersOrderIdPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdOrdersOrderIdPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdOrdersOrderIdPatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdOrdersOrderIdPatch(ctx, req.(*ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdTrbxDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdTrbxDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdTrbxDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxDelete(ctx, req.(*ApiV3SuppliesSupplyIdTrbxDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdTrbxGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdTrbxGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdTrbxGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxGet(ctx, req.(*ApiV3SuppliesSupplyIdTrbxGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdTrbxPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdTrbxPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdTrbxPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxPost(ctx, req.(*ApiV3SuppliesSupplyIdTrbxPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdTrbxStickersPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdTrbxStickersPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxStickersPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdTrbxStickersPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxStickersPost(ctx, req.(*ApiV3SuppliesSupplyIdTrbxStickersPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete(ctx, req.(*ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxTrbxIdPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdPatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3SuppliesSupplyIdTrbxTrbxIdPatch(ctx, req.(*ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3WarehousesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3WarehousesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3WarehousesGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3WarehousesGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3WarehousesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3WarehousesPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3WarehousesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3WarehousesPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3WarehousesPost(ctx, req.(*ApiV3WarehousesPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3WarehousesWarehouseIdDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3WarehousesWarehouseIdDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3WarehousesWarehouseIdDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3WarehousesWarehouseIdDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3WarehousesWarehouseIdDelete(ctx, req.(*ApiV3WarehousesWarehouseIdDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MarketplaceService_ApiV3WarehousesWarehouseIdPut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV3WarehousesWarehouseIdPutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MarketplaceServiceServer).ApiV3WarehousesWarehouseIdPut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MarketplaceService_ApiV3WarehousesWarehouseIdPut_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MarketplaceServiceServer).ApiV3WarehousesWarehouseIdPut(ctx, req.(*ApiV3WarehousesWarehouseIdPutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MarketplaceService_ServiceDesc is the grpc.ServiceDesc for MarketplaceService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MarketplaceService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "wb.marketplace.v1.MarketplaceService",
	HandlerType: (*MarketplaceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApiV3FilesOrdersExternalStickersPost",
			Handler:    _MarketplaceService_ApiV3FilesOrdersExternalStickersPost_Handler,
		},
		{
			MethodName: "ApiV3OfficesGet",
			Handler:    _MarketplaceService_ApiV3OfficesGet_Handler,
		},
		{
			MethodName: "ApiV3OrdersGet",
			Handler:    _MarketplaceService_ApiV3OrdersGet_Handler,
		},
		{
			MethodName: "ApiV3OrdersNewGet",
			Handler:    _MarketplaceService_ApiV3OrdersNewGet_Handler,
		},
		{
			MethodName: "ApiV3OrdersOrderIdCancelPatch",
			Handler:    _MarketplaceService_ApiV3OrdersOrderIdCancelPatch_Handler,
		},
		{
			MethodName: "ApiV3OrdersOrderIdMetaDelete",
			Handler:    _MarketplaceService_ApiV3OrdersOrderIdMetaDelete_Handler,
		},
		{
			MethodName: "ApiV3OrdersOrderIdMetaGet",
			Handler:    _MarketplaceService_ApiV3OrdersOrderIdMetaGet_Handler,
		},
		{
			MethodName: "ApiV3OrdersOrderIdMetaGtinPut",
			Handler:    _MarketplaceService_ApiV3OrdersOrderIdMetaGtinPut_Handler,
		},
		{
			MethodName: "ApiV3OrdersOrderIdMetaImeiPut",
			Handler:    _MarketplaceService_ApiV3OrdersOrderIdMetaImeiPut_Handler,
		},
		{
			MethodName: "ApiV3OrdersOrderIdMetaSgtinPut",
			Handler:    _MarketplaceService_ApiV3OrdersOrderIdMetaSgtinPut_Handler,
		},
		{
			MethodName: "ApiV3OrdersOrderIdMetaUinPut",
			Handler:    _MarketplaceService_ApiV3OrdersOrderIdMetaUinPut_Handler,
		},
		{
			MethodName: "ApiV3OrdersStatusPost",
			Handler:    _MarketplaceService_ApiV3OrdersStatusPost_Handler,
		},
		{
			MethodName: "ApiV3OrdersStickersPost",
			Handler:    _MarketplaceService_ApiV3OrdersStickersPost_Handler,
		},
		{
			MethodName: "ApiV3PassesGet",
			Handler:    _MarketplaceService_ApiV3PassesGet_Handler,
		},
		{
			MethodName: "ApiV3PassesOfficesGet",
			Handler:    _MarketplaceService_ApiV3PassesOfficesGet_Handler,
		},
		{
			MethodName: "ApiV3PassesPassIdDelete",
			Handler:    _MarketplaceService_ApiV3PassesPassIdDelete_Handler,
		},
		{
			MethodName: "ApiV3PassesPassIdPut",
			Handler:    _MarketplaceService_ApiV3PassesPassIdPut_Handler,
		},
		{
			MethodName: "ApiV3PassesPost",
			Handler:    _MarketplaceService_ApiV3PassesPost_Handler,
		},
		{
			MethodName: "ApiV3StocksWarehouseIdDelete",
			Handler:    _MarketplaceService_ApiV3StocksWarehouseIdDelete_Handler,
		},
		{
			MethodName: "ApiV3StocksWarehouseIdPost",
			Handler:    _MarketplaceService_ApiV3StocksWarehouseIdPost_Handler,
		},
		{
			MethodName: "ApiV3StocksWarehouseIdPut",
			Handler:    _MarketplaceService_ApiV3StocksWarehouseIdPut_Handler,
		},
		{
			MethodName: "ApiV3SuppliesGet",
			Handler:    _MarketplaceService_ApiV3SuppliesGet_Handler,
		},
		{
			MethodName: "ApiV3SuppliesOrdersReshipmentGet",
			Handler:    _MarketplaceService_ApiV3SuppliesOrdersReshipmentGet_Handler,
		},
		{
			MethodName: "ApiV3SuppliesPost",
			Handler:    _MarketplaceService_ApiV3SuppliesPost_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdBarcodeGet",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdBarcodeGet_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdDelete",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdDelete_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdDeliverPatch",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdDeliverPatch_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdGet",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdGet_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdOrdersGet",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdOrdersGet_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdOrdersOrderIdPatch",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdOrdersOrderIdPatch_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdTrbxDelete",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdTrbxDelete_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdTrbxGet",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdTrbxGet_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdTrbxPost",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdTrbxPost_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdTrbxStickersPost",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdTrbxStickersPost_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDelete_Handler,
		},
		{
			MethodName: "ApiV3SuppliesSupplyIdTrbxTrbxIdPatch",
			Handler:    _MarketplaceService_ApiV3SuppliesSupplyIdTrbxTrbxIdPatch_Handler,
		},
		{
			MethodName: "ApiV3WarehousesGet",
			Handler:    _MarketplaceService_ApiV3WarehousesGet_Handler,
		},
		{
			MethodName: "ApiV3WarehousesPost",
			Handler:    _MarketplaceService_ApiV3WarehousesPost_Handler,
		},
		{
			MethodName: "ApiV3WarehousesWarehouseIdDelete",
			Handler:    _MarketplaceService_ApiV3WarehousesWarehouseIdDelete_Handler,
		},
		{
			MethodName: "ApiV3WarehousesWarehouseIdPut",
			Handler:    _MarketplaceService_ApiV3WarehousesWarehouseIdPut_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wb/marketplace/v1/service.proto",
}
