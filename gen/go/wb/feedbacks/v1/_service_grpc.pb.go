//
//Описание API Вопросов и Отзывов
//
//`Важно.` Допускается 1 запрос в секунду на методы вопросов и отзывов в целом. При превышении лимита до 3 запросов в секунду последует блокировка на 60 секунд.
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: wb/feedbacks/v1/_service.proto

package wbFEEDBACKS

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DefaultService_ApiV1FeedbackGet_FullMethodName                    = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbackGet"
	DefaultService_ApiV1FeedbacksArchiveGet_FullMethodName            = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksArchiveGet"
	DefaultService_ApiV1FeedbacksCountGet_FullMethodName              = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksCountGet"
	DefaultService_ApiV1FeedbacksCountUnansweredGet_FullMethodName    = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksCountUnansweredGet"
	DefaultService_ApiV1FeedbacksGet_FullMethodName                   = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksGet"
	DefaultService_ApiV1FeedbacksOrderReturnPost_FullMethodName       = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksOrderReturnPost"
	DefaultService_ApiV1FeedbacksPatch_FullMethodName                 = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksPatch"
	DefaultService_ApiV1FeedbacksProductsRatingGet_FullMethodName     = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksProductsRatingGet"
	DefaultService_ApiV1FeedbacksProductsRatingNmidGet_FullMethodName = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksProductsRatingNmidGet"
	DefaultService_ApiV1FeedbacksProductsRatingTopGet_FullMethodName  = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksProductsRatingTopGet"
	DefaultService_ApiV1FeedbacksReportGet_FullMethodName             = "/wb.feedbacks.v1.DefaultService/ApiV1FeedbacksReportGet"
	DefaultService_ApiV1NewFeedbacksQuestionsGet_FullMethodName       = "/wb.feedbacks.v1.DefaultService/ApiV1NewFeedbacksQuestionsGet"
	DefaultService_ApiV1ParentSubjectsGet_FullMethodName              = "/wb.feedbacks.v1.DefaultService/ApiV1ParentSubjectsGet"
	DefaultService_ApiV1QuestionGet_FullMethodName                    = "/wb.feedbacks.v1.DefaultService/ApiV1QuestionGet"
	DefaultService_ApiV1QuestionsCountGet_FullMethodName              = "/wb.feedbacks.v1.DefaultService/ApiV1QuestionsCountGet"
	DefaultService_ApiV1QuestionsCountUnansweredGet_FullMethodName    = "/wb.feedbacks.v1.DefaultService/ApiV1QuestionsCountUnansweredGet"
	DefaultService_ApiV1QuestionsGet_FullMethodName                   = "/wb.feedbacks.v1.DefaultService/ApiV1QuestionsGet"
	DefaultService_ApiV1QuestionsPatch_FullMethodName                 = "/wb.feedbacks.v1.DefaultService/ApiV1QuestionsPatch"
	DefaultService_ApiV1QuestionsProductsRatingGet_FullMethodName     = "/wb.feedbacks.v1.DefaultService/ApiV1QuestionsProductsRatingGet"
	DefaultService_ApiV1QuestionsReportGet_FullMethodName             = "/wb.feedbacks.v1.DefaultService/ApiV1QuestionsReportGet"
	DefaultService_ApiV1SupplierValuationsGet_FullMethodName          = "/wb.feedbacks.v1.DefaultService/ApiV1SupplierValuationsGet"
	DefaultService_ApiV1TemplatesDelete_FullMethodName                = "/wb.feedbacks.v1.DefaultService/ApiV1TemplatesDelete"
	DefaultService_ApiV1TemplatesGet_FullMethodName                   = "/wb.feedbacks.v1.DefaultService/ApiV1TemplatesGet"
	DefaultService_ApiV1TemplatesPatch_FullMethodName                 = "/wb.feedbacks.v1.DefaultService/ApiV1TemplatesPatch"
	DefaultService_ApiV1TemplatesPost_FullMethodName                  = "/wb.feedbacks.v1.DefaultService/ApiV1TemplatesPost"
)

// DefaultServiceClient is the client API for DefaultService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DefaultServiceClient interface {
	ApiV1FeedbackGet(ctx context.Context, in *ApiV1FeedbackGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbackGet200Response, error)
	ApiV1FeedbacksArchiveGet(ctx context.Context, in *ApiV1FeedbacksArchiveGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksArchiveGet200Response, error)
	ApiV1FeedbacksCountGet(ctx context.Context, in *ApiV1FeedbacksCountGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksCountGet200Response, error)
	ApiV1FeedbacksCountUnansweredGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV1FeedbacksCountUnansweredGet200Response, error)
	ApiV1FeedbacksGet(ctx context.Context, in *ApiV1FeedbacksGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksGet200Response, error)
	ApiV1FeedbacksOrderReturnPost(ctx context.Context, in *ApiV1FeedbacksOrderReturnPostRequest, opts ...grpc.CallOption) (*ApiV1QuestionsPatch200Response, error)
	ApiV1FeedbacksPatch(ctx context.Context, in *ApiV1FeedbacksPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV1FeedbacksProductsRatingGet(ctx context.Context, in *ApiV1FeedbacksProductsRatingGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksProductsRatingGet200Response, error)
	ApiV1FeedbacksProductsRatingNmidGet(ctx context.Context, in *ApiV1FeedbacksProductsRatingNmidGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksProductsRatingNmidGet200Response, error)
	ApiV1FeedbacksProductsRatingTopGet(ctx context.Context, in *ApiV1FeedbacksProductsRatingTopGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksProductsRatingTopGet200Response, error)
	ApiV1FeedbacksReportGet(ctx context.Context, in *ApiV1FeedbacksReportGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksReportGet200Response, error)
	ApiV1NewFeedbacksQuestionsGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV1NewFeedbacksQuestionsGet200Response, error)
	ApiV1ParentSubjectsGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV1ParentSubjectsGet200Response, error)
	ApiV1QuestionGet(ctx context.Context, in *ApiV1QuestionGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionGet200Response, error)
	ApiV1QuestionsCountGet(ctx context.Context, in *ApiV1QuestionsCountGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionsCountGet200Response, error)
	ApiV1QuestionsCountUnansweredGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV1QuestionsCountUnansweredGet200Response, error)
	ApiV1QuestionsGet(ctx context.Context, in *ApiV1QuestionsGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionsGet200Response, error)
	ApiV1QuestionsPatch(ctx context.Context, in *ApiV1QuestionsPatchRequest, opts ...grpc.CallOption) (*ApiV1QuestionsPatch200Response, error)
	ApiV1QuestionsProductsRatingGet(ctx context.Context, in *ApiV1QuestionsProductsRatingGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionsProductsRatingGet200Response, error)
	ApiV1QuestionsReportGet(ctx context.Context, in *ApiV1QuestionsReportGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionsReportGet200Response, error)
	ApiV1SupplierValuationsGet(ctx context.Context, in *ApiV1SupplierValuationsGetRequest, opts ...grpc.CallOption) (*ApiV1SupplierValuationsGet200Response, error)
	ApiV1TemplatesDelete(ctx context.Context, in *ApiV1TemplatesDeleteRequest, opts ...grpc.CallOption) (*ApiV1TemplatesDelete200Response, error)
	ApiV1TemplatesGet(ctx context.Context, in *ApiV1TemplatesGetRequest, opts ...grpc.CallOption) (*ApiV1TemplatesGet200Response, error)
	ApiV1TemplatesPatch(ctx context.Context, in *ApiV1TemplatesPatchRequest, opts ...grpc.CallOption) (*ApiV1TemplatesDelete200Response, error)
	ApiV1TemplatesPost(ctx context.Context, in *ApiV1TemplatesPostRequest, opts ...grpc.CallOption) (*ApiV1TemplatesPost200Response, error)
}

type defaultServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDefaultServiceClient(cc grpc.ClientConnInterface) DefaultServiceClient {
	return &defaultServiceClient{cc}
}

func (c *defaultServiceClient) ApiV1FeedbackGet(ctx context.Context, in *ApiV1FeedbackGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbackGet200Response, error) {
	out := new(ApiV1FeedbackGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbackGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksArchiveGet(ctx context.Context, in *ApiV1FeedbacksArchiveGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksArchiveGet200Response, error) {
	out := new(ApiV1FeedbacksArchiveGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksArchiveGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksCountGet(ctx context.Context, in *ApiV1FeedbacksCountGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksCountGet200Response, error) {
	out := new(ApiV1FeedbacksCountGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksCountGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksCountUnansweredGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV1FeedbacksCountUnansweredGet200Response, error) {
	out := new(ApiV1FeedbacksCountUnansweredGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksCountUnansweredGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksGet(ctx context.Context, in *ApiV1FeedbacksGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksGet200Response, error) {
	out := new(ApiV1FeedbacksGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksOrderReturnPost(ctx context.Context, in *ApiV1FeedbacksOrderReturnPostRequest, opts ...grpc.CallOption) (*ApiV1QuestionsPatch200Response, error) {
	out := new(ApiV1QuestionsPatch200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksOrderReturnPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksPatch(ctx context.Context, in *ApiV1FeedbacksPatchRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksPatch_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksProductsRatingGet(ctx context.Context, in *ApiV1FeedbacksProductsRatingGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksProductsRatingGet200Response, error) {
	out := new(ApiV1FeedbacksProductsRatingGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksProductsRatingGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksProductsRatingNmidGet(ctx context.Context, in *ApiV1FeedbacksProductsRatingNmidGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksProductsRatingNmidGet200Response, error) {
	out := new(ApiV1FeedbacksProductsRatingNmidGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksProductsRatingNmidGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksProductsRatingTopGet(ctx context.Context, in *ApiV1FeedbacksProductsRatingTopGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksProductsRatingTopGet200Response, error) {
	out := new(ApiV1FeedbacksProductsRatingTopGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksProductsRatingTopGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1FeedbacksReportGet(ctx context.Context, in *ApiV1FeedbacksReportGetRequest, opts ...grpc.CallOption) (*ApiV1FeedbacksReportGet200Response, error) {
	out := new(ApiV1FeedbacksReportGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1FeedbacksReportGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1NewFeedbacksQuestionsGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV1NewFeedbacksQuestionsGet200Response, error) {
	out := new(ApiV1NewFeedbacksQuestionsGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1NewFeedbacksQuestionsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1ParentSubjectsGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV1ParentSubjectsGet200Response, error) {
	out := new(ApiV1ParentSubjectsGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1ParentSubjectsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1QuestionGet(ctx context.Context, in *ApiV1QuestionGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionGet200Response, error) {
	out := new(ApiV1QuestionGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1QuestionGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1QuestionsCountGet(ctx context.Context, in *ApiV1QuestionsCountGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionsCountGet200Response, error) {
	out := new(ApiV1QuestionsCountGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1QuestionsCountGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1QuestionsCountUnansweredGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ApiV1QuestionsCountUnansweredGet200Response, error) {
	out := new(ApiV1QuestionsCountUnansweredGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1QuestionsCountUnansweredGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1QuestionsGet(ctx context.Context, in *ApiV1QuestionsGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionsGet200Response, error) {
	out := new(ApiV1QuestionsGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1QuestionsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1QuestionsPatch(ctx context.Context, in *ApiV1QuestionsPatchRequest, opts ...grpc.CallOption) (*ApiV1QuestionsPatch200Response, error) {
	out := new(ApiV1QuestionsPatch200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1QuestionsPatch_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1QuestionsProductsRatingGet(ctx context.Context, in *ApiV1QuestionsProductsRatingGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionsProductsRatingGet200Response, error) {
	out := new(ApiV1QuestionsProductsRatingGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1QuestionsProductsRatingGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1QuestionsReportGet(ctx context.Context, in *ApiV1QuestionsReportGetRequest, opts ...grpc.CallOption) (*ApiV1QuestionsReportGet200Response, error) {
	out := new(ApiV1QuestionsReportGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1QuestionsReportGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1SupplierValuationsGet(ctx context.Context, in *ApiV1SupplierValuationsGetRequest, opts ...grpc.CallOption) (*ApiV1SupplierValuationsGet200Response, error) {
	out := new(ApiV1SupplierValuationsGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1SupplierValuationsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1TemplatesDelete(ctx context.Context, in *ApiV1TemplatesDeleteRequest, opts ...grpc.CallOption) (*ApiV1TemplatesDelete200Response, error) {
	out := new(ApiV1TemplatesDelete200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1TemplatesDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1TemplatesGet(ctx context.Context, in *ApiV1TemplatesGetRequest, opts ...grpc.CallOption) (*ApiV1TemplatesGet200Response, error) {
	out := new(ApiV1TemplatesGet200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1TemplatesGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1TemplatesPatch(ctx context.Context, in *ApiV1TemplatesPatchRequest, opts ...grpc.CallOption) (*ApiV1TemplatesDelete200Response, error) {
	out := new(ApiV1TemplatesDelete200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1TemplatesPatch_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1TemplatesPost(ctx context.Context, in *ApiV1TemplatesPostRequest, opts ...grpc.CallOption) (*ApiV1TemplatesPost200Response, error) {
	out := new(ApiV1TemplatesPost200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1TemplatesPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DefaultServiceServer is the server API for DefaultService service.
// All implementations must embed UnimplementedDefaultServiceServer
// for forward compatibility
type DefaultServiceServer interface {
	ApiV1FeedbackGet(context.Context, *ApiV1FeedbackGetRequest) (*ApiV1FeedbackGet200Response, error)
	ApiV1FeedbacksArchiveGet(context.Context, *ApiV1FeedbacksArchiveGetRequest) (*ApiV1FeedbacksArchiveGet200Response, error)
	ApiV1FeedbacksCountGet(context.Context, *ApiV1FeedbacksCountGetRequest) (*ApiV1FeedbacksCountGet200Response, error)
	ApiV1FeedbacksCountUnansweredGet(context.Context, *emptypb.Empty) (*ApiV1FeedbacksCountUnansweredGet200Response, error)
	ApiV1FeedbacksGet(context.Context, *ApiV1FeedbacksGetRequest) (*ApiV1FeedbacksGet200Response, error)
	ApiV1FeedbacksOrderReturnPost(context.Context, *ApiV1FeedbacksOrderReturnPostRequest) (*ApiV1QuestionsPatch200Response, error)
	ApiV1FeedbacksPatch(context.Context, *ApiV1FeedbacksPatchRequest) (*emptypb.Empty, error)
	ApiV1FeedbacksProductsRatingGet(context.Context, *ApiV1FeedbacksProductsRatingGetRequest) (*ApiV1FeedbacksProductsRatingGet200Response, error)
	ApiV1FeedbacksProductsRatingNmidGet(context.Context, *ApiV1FeedbacksProductsRatingNmidGetRequest) (*ApiV1FeedbacksProductsRatingNmidGet200Response, error)
	ApiV1FeedbacksProductsRatingTopGet(context.Context, *ApiV1FeedbacksProductsRatingTopGetRequest) (*ApiV1FeedbacksProductsRatingTopGet200Response, error)
	ApiV1FeedbacksReportGet(context.Context, *ApiV1FeedbacksReportGetRequest) (*ApiV1FeedbacksReportGet200Response, error)
	ApiV1NewFeedbacksQuestionsGet(context.Context, *emptypb.Empty) (*ApiV1NewFeedbacksQuestionsGet200Response, error)
	ApiV1ParentSubjectsGet(context.Context, *emptypb.Empty) (*ApiV1ParentSubjectsGet200Response, error)
	ApiV1QuestionGet(context.Context, *ApiV1QuestionGetRequest) (*ApiV1QuestionGet200Response, error)
	ApiV1QuestionsCountGet(context.Context, *ApiV1QuestionsCountGetRequest) (*ApiV1QuestionsCountGet200Response, error)
	ApiV1QuestionsCountUnansweredGet(context.Context, *emptypb.Empty) (*ApiV1QuestionsCountUnansweredGet200Response, error)
	ApiV1QuestionsGet(context.Context, *ApiV1QuestionsGetRequest) (*ApiV1QuestionsGet200Response, error)
	ApiV1QuestionsPatch(context.Context, *ApiV1QuestionsPatchRequest) (*ApiV1QuestionsPatch200Response, error)
	ApiV1QuestionsProductsRatingGet(context.Context, *ApiV1QuestionsProductsRatingGetRequest) (*ApiV1QuestionsProductsRatingGet200Response, error)
	ApiV1QuestionsReportGet(context.Context, *ApiV1QuestionsReportGetRequest) (*ApiV1QuestionsReportGet200Response, error)
	ApiV1SupplierValuationsGet(context.Context, *ApiV1SupplierValuationsGetRequest) (*ApiV1SupplierValuationsGet200Response, error)
	ApiV1TemplatesDelete(context.Context, *ApiV1TemplatesDeleteRequest) (*ApiV1TemplatesDelete200Response, error)
	ApiV1TemplatesGet(context.Context, *ApiV1TemplatesGetRequest) (*ApiV1TemplatesGet200Response, error)
	ApiV1TemplatesPatch(context.Context, *ApiV1TemplatesPatchRequest) (*ApiV1TemplatesDelete200Response, error)
	ApiV1TemplatesPost(context.Context, *ApiV1TemplatesPostRequest) (*ApiV1TemplatesPost200Response, error)
	mustEmbedUnimplementedDefaultServiceServer()
}

// UnimplementedDefaultServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDefaultServiceServer struct {
}

func (UnimplementedDefaultServiceServer) ApiV1FeedbackGet(context.Context, *ApiV1FeedbackGetRequest) (*ApiV1FeedbackGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbackGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksArchiveGet(context.Context, *ApiV1FeedbacksArchiveGetRequest) (*ApiV1FeedbacksArchiveGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksArchiveGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksCountGet(context.Context, *ApiV1FeedbacksCountGetRequest) (*ApiV1FeedbacksCountGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksCountGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksCountUnansweredGet(context.Context, *emptypb.Empty) (*ApiV1FeedbacksCountUnansweredGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksCountUnansweredGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksGet(context.Context, *ApiV1FeedbacksGetRequest) (*ApiV1FeedbacksGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksOrderReturnPost(context.Context, *ApiV1FeedbacksOrderReturnPostRequest) (*ApiV1QuestionsPatch200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksOrderReturnPost not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksPatch(context.Context, *ApiV1FeedbacksPatchRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksPatch not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksProductsRatingGet(context.Context, *ApiV1FeedbacksProductsRatingGetRequest) (*ApiV1FeedbacksProductsRatingGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksProductsRatingGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksProductsRatingNmidGet(context.Context, *ApiV1FeedbacksProductsRatingNmidGetRequest) (*ApiV1FeedbacksProductsRatingNmidGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksProductsRatingNmidGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksProductsRatingTopGet(context.Context, *ApiV1FeedbacksProductsRatingTopGetRequest) (*ApiV1FeedbacksProductsRatingTopGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksProductsRatingTopGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1FeedbacksReportGet(context.Context, *ApiV1FeedbacksReportGetRequest) (*ApiV1FeedbacksReportGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1FeedbacksReportGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1NewFeedbacksQuestionsGet(context.Context, *emptypb.Empty) (*ApiV1NewFeedbacksQuestionsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1NewFeedbacksQuestionsGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1ParentSubjectsGet(context.Context, *emptypb.Empty) (*ApiV1ParentSubjectsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1ParentSubjectsGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1QuestionGet(context.Context, *ApiV1QuestionGetRequest) (*ApiV1QuestionGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1QuestionGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1QuestionsCountGet(context.Context, *ApiV1QuestionsCountGetRequest) (*ApiV1QuestionsCountGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1QuestionsCountGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1QuestionsCountUnansweredGet(context.Context, *emptypb.Empty) (*ApiV1QuestionsCountUnansweredGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1QuestionsCountUnansweredGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1QuestionsGet(context.Context, *ApiV1QuestionsGetRequest) (*ApiV1QuestionsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1QuestionsGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1QuestionsPatch(context.Context, *ApiV1QuestionsPatchRequest) (*ApiV1QuestionsPatch200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1QuestionsPatch not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1QuestionsProductsRatingGet(context.Context, *ApiV1QuestionsProductsRatingGetRequest) (*ApiV1QuestionsProductsRatingGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1QuestionsProductsRatingGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1QuestionsReportGet(context.Context, *ApiV1QuestionsReportGetRequest) (*ApiV1QuestionsReportGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1QuestionsReportGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1SupplierValuationsGet(context.Context, *ApiV1SupplierValuationsGetRequest) (*ApiV1SupplierValuationsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1SupplierValuationsGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1TemplatesDelete(context.Context, *ApiV1TemplatesDeleteRequest) (*ApiV1TemplatesDelete200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1TemplatesDelete not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1TemplatesGet(context.Context, *ApiV1TemplatesGetRequest) (*ApiV1TemplatesGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1TemplatesGet not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1TemplatesPatch(context.Context, *ApiV1TemplatesPatchRequest) (*ApiV1TemplatesDelete200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1TemplatesPatch not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1TemplatesPost(context.Context, *ApiV1TemplatesPostRequest) (*ApiV1TemplatesPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1TemplatesPost not implemented")
}
func (UnimplementedDefaultServiceServer) mustEmbedUnimplementedDefaultServiceServer() {}

// UnsafeDefaultServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DefaultServiceServer will
// result in compilation errors.
type UnsafeDefaultServiceServer interface {
	mustEmbedUnimplementedDefaultServiceServer()
}

func RegisterDefaultServiceServer(s grpc.ServiceRegistrar, srv DefaultServiceServer) {
	s.RegisterService(&DefaultService_ServiceDesc, srv)
}

func _DefaultService_ApiV1FeedbackGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbackGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbackGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbackGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbackGet(ctx, req.(*ApiV1FeedbackGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksArchiveGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksArchiveGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksArchiveGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksArchiveGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksArchiveGet(ctx, req.(*ApiV1FeedbacksArchiveGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksCountGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksCountGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksCountGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksCountGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksCountGet(ctx, req.(*ApiV1FeedbacksCountGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksCountUnansweredGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksCountUnansweredGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksCountUnansweredGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksCountUnansweredGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksGet(ctx, req.(*ApiV1FeedbacksGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksOrderReturnPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksOrderReturnPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksOrderReturnPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksOrderReturnPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksOrderReturnPost(ctx, req.(*ApiV1FeedbacksOrderReturnPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksPatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksPatch(ctx, req.(*ApiV1FeedbacksPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksProductsRatingGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksProductsRatingGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksProductsRatingGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksProductsRatingGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksProductsRatingGet(ctx, req.(*ApiV1FeedbacksProductsRatingGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksProductsRatingNmidGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksProductsRatingNmidGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksProductsRatingNmidGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksProductsRatingNmidGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksProductsRatingNmidGet(ctx, req.(*ApiV1FeedbacksProductsRatingNmidGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksProductsRatingTopGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksProductsRatingTopGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksProductsRatingTopGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksProductsRatingTopGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksProductsRatingTopGet(ctx, req.(*ApiV1FeedbacksProductsRatingTopGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1FeedbacksReportGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1FeedbacksReportGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1FeedbacksReportGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1FeedbacksReportGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1FeedbacksReportGet(ctx, req.(*ApiV1FeedbacksReportGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1NewFeedbacksQuestionsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1NewFeedbacksQuestionsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1NewFeedbacksQuestionsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1NewFeedbacksQuestionsGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1ParentSubjectsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1ParentSubjectsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1ParentSubjectsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1ParentSubjectsGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1QuestionGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1QuestionGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1QuestionGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1QuestionGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1QuestionGet(ctx, req.(*ApiV1QuestionGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1QuestionsCountGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1QuestionsCountGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1QuestionsCountGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1QuestionsCountGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1QuestionsCountGet(ctx, req.(*ApiV1QuestionsCountGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1QuestionsCountUnansweredGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1QuestionsCountUnansweredGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1QuestionsCountUnansweredGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1QuestionsCountUnansweredGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1QuestionsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1QuestionsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1QuestionsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1QuestionsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1QuestionsGet(ctx, req.(*ApiV1QuestionsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1QuestionsPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1QuestionsPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1QuestionsPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1QuestionsPatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1QuestionsPatch(ctx, req.(*ApiV1QuestionsPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1QuestionsProductsRatingGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1QuestionsProductsRatingGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1QuestionsProductsRatingGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1QuestionsProductsRatingGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1QuestionsProductsRatingGet(ctx, req.(*ApiV1QuestionsProductsRatingGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1QuestionsReportGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1QuestionsReportGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1QuestionsReportGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1QuestionsReportGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1QuestionsReportGet(ctx, req.(*ApiV1QuestionsReportGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1SupplierValuationsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1SupplierValuationsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1SupplierValuationsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1SupplierValuationsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1SupplierValuationsGet(ctx, req.(*ApiV1SupplierValuationsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1TemplatesDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1TemplatesDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1TemplatesDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1TemplatesDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1TemplatesDelete(ctx, req.(*ApiV1TemplatesDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1TemplatesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1TemplatesGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1TemplatesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1TemplatesGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1TemplatesGet(ctx, req.(*ApiV1TemplatesGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1TemplatesPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1TemplatesPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1TemplatesPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1TemplatesPatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1TemplatesPatch(ctx, req.(*ApiV1TemplatesPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1TemplatesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1TemplatesPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1TemplatesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1TemplatesPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1TemplatesPost(ctx, req.(*ApiV1TemplatesPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DefaultService_ServiceDesc is the grpc.ServiceDesc for DefaultService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DefaultService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "wb.feedbacks.v1.DefaultService",
	HandlerType: (*DefaultServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApiV1FeedbackGet",
			Handler:    _DefaultService_ApiV1FeedbackGet_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksArchiveGet",
			Handler:    _DefaultService_ApiV1FeedbacksArchiveGet_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksCountGet",
			Handler:    _DefaultService_ApiV1FeedbacksCountGet_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksCountUnansweredGet",
			Handler:    _DefaultService_ApiV1FeedbacksCountUnansweredGet_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksGet",
			Handler:    _DefaultService_ApiV1FeedbacksGet_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksOrderReturnPost",
			Handler:    _DefaultService_ApiV1FeedbacksOrderReturnPost_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksPatch",
			Handler:    _DefaultService_ApiV1FeedbacksPatch_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksProductsRatingGet",
			Handler:    _DefaultService_ApiV1FeedbacksProductsRatingGet_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksProductsRatingNmidGet",
			Handler:    _DefaultService_ApiV1FeedbacksProductsRatingNmidGet_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksProductsRatingTopGet",
			Handler:    _DefaultService_ApiV1FeedbacksProductsRatingTopGet_Handler,
		},
		{
			MethodName: "ApiV1FeedbacksReportGet",
			Handler:    _DefaultService_ApiV1FeedbacksReportGet_Handler,
		},
		{
			MethodName: "ApiV1NewFeedbacksQuestionsGet",
			Handler:    _DefaultService_ApiV1NewFeedbacksQuestionsGet_Handler,
		},
		{
			MethodName: "ApiV1ParentSubjectsGet",
			Handler:    _DefaultService_ApiV1ParentSubjectsGet_Handler,
		},
		{
			MethodName: "ApiV1QuestionGet",
			Handler:    _DefaultService_ApiV1QuestionGet_Handler,
		},
		{
			MethodName: "ApiV1QuestionsCountGet",
			Handler:    _DefaultService_ApiV1QuestionsCountGet_Handler,
		},
		{
			MethodName: "ApiV1QuestionsCountUnansweredGet",
			Handler:    _DefaultService_ApiV1QuestionsCountUnansweredGet_Handler,
		},
		{
			MethodName: "ApiV1QuestionsGet",
			Handler:    _DefaultService_ApiV1QuestionsGet_Handler,
		},
		{
			MethodName: "ApiV1QuestionsPatch",
			Handler:    _DefaultService_ApiV1QuestionsPatch_Handler,
		},
		{
			MethodName: "ApiV1QuestionsProductsRatingGet",
			Handler:    _DefaultService_ApiV1QuestionsProductsRatingGet_Handler,
		},
		{
			MethodName: "ApiV1QuestionsReportGet",
			Handler:    _DefaultService_ApiV1QuestionsReportGet_Handler,
		},
		{
			MethodName: "ApiV1SupplierValuationsGet",
			Handler:    _DefaultService_ApiV1SupplierValuationsGet_Handler,
		},
		{
			MethodName: "ApiV1TemplatesDelete",
			Handler:    _DefaultService_ApiV1TemplatesDelete_Handler,
		},
		{
			MethodName: "ApiV1TemplatesGet",
			Handler:    _DefaultService_ApiV1TemplatesGet_Handler,
		},
		{
			MethodName: "ApiV1TemplatesPatch",
			Handler:    _DefaultService_ApiV1TemplatesPatch_Handler,
		},
		{
			MethodName: "ApiV1TemplatesPost",
			Handler:    _DefaultService_ApiV1TemplatesPost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wb/feedbacks/v1/_service.proto",
}
