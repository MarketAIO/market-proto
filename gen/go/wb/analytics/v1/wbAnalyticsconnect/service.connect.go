//
//Описание API Аналитика
//
//Сервис предоставляет публичный API для получения аналитических данных. С помощью этих методов вы можете получать аналитические отчёты. [Часть методов](./#tag/Voronka-prodazh-(Dzhem)/) доступна только с [подпиской на расширенную аналитику Джем](https://seller.wildberries.ru/dynamic-product-categories/jam).
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: wb/analytics/v1/service.proto

package wbAnalyticsconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/MarketAIO/market-proto/gen/go/wb/analytics/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// AnalyticsServiceName is the fully-qualified name of the AnalyticsService service.
	AnalyticsServiceName = "wb.analytics.v1.AnalyticsService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// AnalyticsServiceApiV1AnalyticsAcceptanceReportGetProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV1AnalyticsAcceptanceReportGet RPC.
	AnalyticsServiceApiV1AnalyticsAcceptanceReportGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1AnalyticsAcceptanceReportGet"
	// AnalyticsServiceApiV1AnalyticsAntifraudDetailsGetProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV1AnalyticsAntifraudDetailsGet RPC.
	AnalyticsServiceApiV1AnalyticsAntifraudDetailsGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1AnalyticsAntifraudDetailsGet"
	// AnalyticsServiceApiV1AnalyticsExciseReportPostProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV1AnalyticsExciseReportPost RPC.
	AnalyticsServiceApiV1AnalyticsExciseReportPostProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1AnalyticsExciseReportPost"
	// AnalyticsServiceApiV1AnalyticsGoodsLabelingGetProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV1AnalyticsGoodsLabelingGet RPC.
	AnalyticsServiceApiV1AnalyticsGoodsLabelingGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1AnalyticsGoodsLabelingGet"
	// AnalyticsServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV1AnalyticsIncorrectAttachmentsGet RPC.
	AnalyticsServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1AnalyticsIncorrectAttachmentsGet"
	// AnalyticsServiceApiV1AnalyticsStorageCoefficientGetProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV1AnalyticsStorageCoefficientGet RPC.
	AnalyticsServiceApiV1AnalyticsStorageCoefficientGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1AnalyticsStorageCoefficientGet"
	// AnalyticsServiceApiV1PaidStorageGetProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV1PaidStorageGet RPC.
	AnalyticsServiceApiV1PaidStorageGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1PaidStorageGet"
	// AnalyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure is the fully-qualified name of
	// the AnalyticsService's ApiV1PaidStorageTasksTaskIdDownloadGet RPC.
	AnalyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1PaidStorageTasksTaskIdDownloadGet"
	// AnalyticsServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV1PaidStorageTasksTaskIdStatusGet RPC.
	AnalyticsServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV1PaidStorageTasksTaskIdStatusGet"
	// AnalyticsServiceApiV2NmReportDetailHistoryPostProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV2NmReportDetailHistoryPost RPC.
	AnalyticsServiceApiV2NmReportDetailHistoryPostProcedure = "/wb.analytics.v1.AnalyticsService/ApiV2NmReportDetailHistoryPost"
	// AnalyticsServiceApiV2NmReportDetailPostProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV2NmReportDetailPost RPC.
	AnalyticsServiceApiV2NmReportDetailPostProcedure = "/wb.analytics.v1.AnalyticsService/ApiV2NmReportDetailPost"
	// AnalyticsServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure is the fully-qualified name of
	// the AnalyticsService's ApiV2NmReportDownloadsFileDownloadIdGet RPC.
	AnalyticsServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV2NmReportDownloadsFileDownloadIdGet"
	// AnalyticsServiceApiV2NmReportDownloadsGetProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV2NmReportDownloadsGet RPC.
	AnalyticsServiceApiV2NmReportDownloadsGetProcedure = "/wb.analytics.v1.AnalyticsService/ApiV2NmReportDownloadsGet"
	// AnalyticsServiceApiV2NmReportDownloadsPostProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV2NmReportDownloadsPost RPC.
	AnalyticsServiceApiV2NmReportDownloadsPostProcedure = "/wb.analytics.v1.AnalyticsService/ApiV2NmReportDownloadsPost"
	// AnalyticsServiceApiV2NmReportDownloadsRetryPostProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV2NmReportDownloadsRetryPost RPC.
	AnalyticsServiceApiV2NmReportDownloadsRetryPostProcedure = "/wb.analytics.v1.AnalyticsService/ApiV2NmReportDownloadsRetryPost"
	// AnalyticsServiceApiV2NmReportGroupedHistoryPostProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV2NmReportGroupedHistoryPost RPC.
	AnalyticsServiceApiV2NmReportGroupedHistoryPostProcedure = "/wb.analytics.v1.AnalyticsService/ApiV2NmReportGroupedHistoryPost"
	// AnalyticsServiceApiV2NmReportGroupedPostProcedure is the fully-qualified name of the
	// AnalyticsService's ApiV2NmReportGroupedPost RPC.
	AnalyticsServiceApiV2NmReportGroupedPostProcedure = "/wb.analytics.v1.AnalyticsService/ApiV2NmReportGroupedPost"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	analyticsServiceServiceDescriptor                                       = v1.File_wb_analytics_v1_service_proto.Services().ByName("AnalyticsService")
	analyticsServiceApiV1AnalyticsAcceptanceReportGetMethodDescriptor       = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsAcceptanceReportGet")
	analyticsServiceApiV1AnalyticsAntifraudDetailsGetMethodDescriptor       = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsAntifraudDetailsGet")
	analyticsServiceApiV1AnalyticsExciseReportPostMethodDescriptor          = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsExciseReportPost")
	analyticsServiceApiV1AnalyticsGoodsLabelingGetMethodDescriptor          = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsGoodsLabelingGet")
	analyticsServiceApiV1AnalyticsIncorrectAttachmentsGetMethodDescriptor   = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsIncorrectAttachmentsGet")
	analyticsServiceApiV1AnalyticsStorageCoefficientGetMethodDescriptor     = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsStorageCoefficientGet")
	analyticsServiceApiV1PaidStorageGetMethodDescriptor                     = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1PaidStorageGet")
	analyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetMethodDescriptor  = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1PaidStorageTasksTaskIdDownloadGet")
	analyticsServiceApiV1PaidStorageTasksTaskIdStatusGetMethodDescriptor    = analyticsServiceServiceDescriptor.Methods().ByName("ApiV1PaidStorageTasksTaskIdStatusGet")
	analyticsServiceApiV2NmReportDetailHistoryPostMethodDescriptor          = analyticsServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDetailHistoryPost")
	analyticsServiceApiV2NmReportDetailPostMethodDescriptor                 = analyticsServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDetailPost")
	analyticsServiceApiV2NmReportDownloadsFileDownloadIdGetMethodDescriptor = analyticsServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDownloadsFileDownloadIdGet")
	analyticsServiceApiV2NmReportDownloadsGetMethodDescriptor               = analyticsServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDownloadsGet")
	analyticsServiceApiV2NmReportDownloadsPostMethodDescriptor              = analyticsServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDownloadsPost")
	analyticsServiceApiV2NmReportDownloadsRetryPostMethodDescriptor         = analyticsServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDownloadsRetryPost")
	analyticsServiceApiV2NmReportGroupedHistoryPostMethodDescriptor         = analyticsServiceServiceDescriptor.Methods().ByName("ApiV2NmReportGroupedHistoryPost")
	analyticsServiceApiV2NmReportGroupedPostMethodDescriptor                = analyticsServiceServiceDescriptor.Methods().ByName("ApiV2NmReportGroupedPost")
)

// AnalyticsServiceClient is a client for the wb.analytics.v1.AnalyticsService service.
type AnalyticsServiceClient interface {
	ApiV1AnalyticsAcceptanceReportGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAcceptanceReportGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAcceptanceReportGet200Response], error)
	ApiV1AnalyticsAntifraudDetailsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAntifraudDetailsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAntifraudDetailsGet200Response], error)
	ApiV1AnalyticsExciseReportPost(context.Context, *connect.Request[v1.ApiV1AnalyticsExciseReportPostRequest]) (*connect.Response[v1.ExciseReportResponse], error)
	ApiV1AnalyticsGoodsLabelingGet(context.Context, *connect.Request[v1.ApiV1AnalyticsGoodsLabelingGetRequest]) (*connect.Response[v1.ApiV1AnalyticsGoodsLabelingGet200Response], error)
	ApiV1AnalyticsIncorrectAttachmentsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response], error)
	ApiV1AnalyticsStorageCoefficientGet(context.Context, *connect.Request[v1.ApiV1AnalyticsStorageCoefficientGetRequest]) (*connect.Response[v1.ApiV1AnalyticsStorageCoefficientGet200Response], error)
	ApiV1PaidStorageGet(context.Context, *connect.Request[v1.ApiV1PaidStorageGetRequest]) (*connect.Response[v1.CreateTaskResponse], error)
	ApiV1PaidStorageTasksTaskIdDownloadGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest]) (*connect.Response[v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse], error)
	ApiV1PaidStorageTasksTaskIdStatusGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest]) (*connect.Response[v1.GetTasksResponse], error)
	ApiV2NmReportDetailHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailHistoryPostRequest]) (*connect.Response[v1.NmReportDetailHistoryResponse], error)
	ApiV2NmReportDetailPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailPostRequest]) (*connect.Response[v1.NmReportDetailResponse], error)
	ApiV2NmReportDownloadsFileDownloadIdGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest]) (*connect.Response[v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse], error)
	ApiV2NmReportDownloadsGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsGetRequest]) (*connect.Response[v1.NmReportGetReportsResponse], error)
	ApiV2NmReportDownloadsPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsPostRequest]) (*connect.Response[v1.NmReportCreateReportResponse], error)
	ApiV2NmReportDownloadsRetryPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsRetryPostRequest]) (*connect.Response[v1.NmReportRetryReportResponse], error)
	ApiV2NmReportGroupedHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedHistoryPostRequest]) (*connect.Response[v1.NmReportGroupedHistoryResponse], error)
	ApiV2NmReportGroupedPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedPostRequest]) (*connect.Response[v1.NmReportGroupedResponse], error)
}

// NewAnalyticsServiceClient constructs a client for the wb.analytics.v1.AnalyticsService service.
// By default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped
// responses, and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewAnalyticsServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) AnalyticsServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &analyticsServiceClient{
		apiV1AnalyticsAcceptanceReportGet: connect.NewClient[v1.ApiV1AnalyticsAcceptanceReportGetRequest, v1.ApiV1AnalyticsAcceptanceReportGet200Response](
			httpClient,
			baseURL+AnalyticsServiceApiV1AnalyticsAcceptanceReportGetProcedure,
			connect.WithSchema(analyticsServiceApiV1AnalyticsAcceptanceReportGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsAntifraudDetailsGet: connect.NewClient[v1.ApiV1AnalyticsAntifraudDetailsGetRequest, v1.ApiV1AnalyticsAntifraudDetailsGet200Response](
			httpClient,
			baseURL+AnalyticsServiceApiV1AnalyticsAntifraudDetailsGetProcedure,
			connect.WithSchema(analyticsServiceApiV1AnalyticsAntifraudDetailsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsExciseReportPost: connect.NewClient[v1.ApiV1AnalyticsExciseReportPostRequest, v1.ExciseReportResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV1AnalyticsExciseReportPostProcedure,
			connect.WithSchema(analyticsServiceApiV1AnalyticsExciseReportPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsGoodsLabelingGet: connect.NewClient[v1.ApiV1AnalyticsGoodsLabelingGetRequest, v1.ApiV1AnalyticsGoodsLabelingGet200Response](
			httpClient,
			baseURL+AnalyticsServiceApiV1AnalyticsGoodsLabelingGetProcedure,
			connect.WithSchema(analyticsServiceApiV1AnalyticsGoodsLabelingGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsIncorrectAttachmentsGet: connect.NewClient[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest, v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response](
			httpClient,
			baseURL+AnalyticsServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure,
			connect.WithSchema(analyticsServiceApiV1AnalyticsIncorrectAttachmentsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsStorageCoefficientGet: connect.NewClient[v1.ApiV1AnalyticsStorageCoefficientGetRequest, v1.ApiV1AnalyticsStorageCoefficientGet200Response](
			httpClient,
			baseURL+AnalyticsServiceApiV1AnalyticsStorageCoefficientGetProcedure,
			connect.WithSchema(analyticsServiceApiV1AnalyticsStorageCoefficientGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1PaidStorageGet: connect.NewClient[v1.ApiV1PaidStorageGetRequest, v1.CreateTaskResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV1PaidStorageGetProcedure,
			connect.WithSchema(analyticsServiceApiV1PaidStorageGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1PaidStorageTasksTaskIdDownloadGet: connect.NewClient[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest, v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure,
			connect.WithSchema(analyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1PaidStorageTasksTaskIdStatusGet: connect.NewClient[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest, v1.GetTasksResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure,
			connect.WithSchema(analyticsServiceApiV1PaidStorageTasksTaskIdStatusGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDetailHistoryPost: connect.NewClient[v1.ApiV2NmReportDetailHistoryPostRequest, v1.NmReportDetailHistoryResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV2NmReportDetailHistoryPostProcedure,
			connect.WithSchema(analyticsServiceApiV2NmReportDetailHistoryPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDetailPost: connect.NewClient[v1.ApiV2NmReportDetailPostRequest, v1.NmReportDetailResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV2NmReportDetailPostProcedure,
			connect.WithSchema(analyticsServiceApiV2NmReportDetailPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDownloadsFileDownloadIdGet: connect.NewClient[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest, v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure,
			connect.WithSchema(analyticsServiceApiV2NmReportDownloadsFileDownloadIdGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDownloadsGet: connect.NewClient[v1.ApiV2NmReportDownloadsGetRequest, v1.NmReportGetReportsResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV2NmReportDownloadsGetProcedure,
			connect.WithSchema(analyticsServiceApiV2NmReportDownloadsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDownloadsPost: connect.NewClient[v1.ApiV2NmReportDownloadsPostRequest, v1.NmReportCreateReportResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV2NmReportDownloadsPostProcedure,
			connect.WithSchema(analyticsServiceApiV2NmReportDownloadsPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDownloadsRetryPost: connect.NewClient[v1.ApiV2NmReportDownloadsRetryPostRequest, v1.NmReportRetryReportResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV2NmReportDownloadsRetryPostProcedure,
			connect.WithSchema(analyticsServiceApiV2NmReportDownloadsRetryPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportGroupedHistoryPost: connect.NewClient[v1.ApiV2NmReportGroupedHistoryPostRequest, v1.NmReportGroupedHistoryResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV2NmReportGroupedHistoryPostProcedure,
			connect.WithSchema(analyticsServiceApiV2NmReportGroupedHistoryPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportGroupedPost: connect.NewClient[v1.ApiV2NmReportGroupedPostRequest, v1.NmReportGroupedResponse](
			httpClient,
			baseURL+AnalyticsServiceApiV2NmReportGroupedPostProcedure,
			connect.WithSchema(analyticsServiceApiV2NmReportGroupedPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// analyticsServiceClient implements AnalyticsServiceClient.
type analyticsServiceClient struct {
	apiV1AnalyticsAcceptanceReportGet       *connect.Client[v1.ApiV1AnalyticsAcceptanceReportGetRequest, v1.ApiV1AnalyticsAcceptanceReportGet200Response]
	apiV1AnalyticsAntifraudDetailsGet       *connect.Client[v1.ApiV1AnalyticsAntifraudDetailsGetRequest, v1.ApiV1AnalyticsAntifraudDetailsGet200Response]
	apiV1AnalyticsExciseReportPost          *connect.Client[v1.ApiV1AnalyticsExciseReportPostRequest, v1.ExciseReportResponse]
	apiV1AnalyticsGoodsLabelingGet          *connect.Client[v1.ApiV1AnalyticsGoodsLabelingGetRequest, v1.ApiV1AnalyticsGoodsLabelingGet200Response]
	apiV1AnalyticsIncorrectAttachmentsGet   *connect.Client[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest, v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response]
	apiV1AnalyticsStorageCoefficientGet     *connect.Client[v1.ApiV1AnalyticsStorageCoefficientGetRequest, v1.ApiV1AnalyticsStorageCoefficientGet200Response]
	apiV1PaidStorageGet                     *connect.Client[v1.ApiV1PaidStorageGetRequest, v1.CreateTaskResponse]
	apiV1PaidStorageTasksTaskIdDownloadGet  *connect.Client[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest, v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse]
	apiV1PaidStorageTasksTaskIdStatusGet    *connect.Client[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest, v1.GetTasksResponse]
	apiV2NmReportDetailHistoryPost          *connect.Client[v1.ApiV2NmReportDetailHistoryPostRequest, v1.NmReportDetailHistoryResponse]
	apiV2NmReportDetailPost                 *connect.Client[v1.ApiV2NmReportDetailPostRequest, v1.NmReportDetailResponse]
	apiV2NmReportDownloadsFileDownloadIdGet *connect.Client[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest, v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse]
	apiV2NmReportDownloadsGet               *connect.Client[v1.ApiV2NmReportDownloadsGetRequest, v1.NmReportGetReportsResponse]
	apiV2NmReportDownloadsPost              *connect.Client[v1.ApiV2NmReportDownloadsPostRequest, v1.NmReportCreateReportResponse]
	apiV2NmReportDownloadsRetryPost         *connect.Client[v1.ApiV2NmReportDownloadsRetryPostRequest, v1.NmReportRetryReportResponse]
	apiV2NmReportGroupedHistoryPost         *connect.Client[v1.ApiV2NmReportGroupedHistoryPostRequest, v1.NmReportGroupedHistoryResponse]
	apiV2NmReportGroupedPost                *connect.Client[v1.ApiV2NmReportGroupedPostRequest, v1.NmReportGroupedResponse]
}

// ApiV1AnalyticsAcceptanceReportGet calls
// wb.analytics.v1.AnalyticsService.ApiV1AnalyticsAcceptanceReportGet.
func (c *analyticsServiceClient) ApiV1AnalyticsAcceptanceReportGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsAcceptanceReportGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAcceptanceReportGet200Response], error) {
	return c.apiV1AnalyticsAcceptanceReportGet.CallUnary(ctx, req)
}

// ApiV1AnalyticsAntifraudDetailsGet calls
// wb.analytics.v1.AnalyticsService.ApiV1AnalyticsAntifraudDetailsGet.
func (c *analyticsServiceClient) ApiV1AnalyticsAntifraudDetailsGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsAntifraudDetailsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAntifraudDetailsGet200Response], error) {
	return c.apiV1AnalyticsAntifraudDetailsGet.CallUnary(ctx, req)
}

// ApiV1AnalyticsExciseReportPost calls
// wb.analytics.v1.AnalyticsService.ApiV1AnalyticsExciseReportPost.
func (c *analyticsServiceClient) ApiV1AnalyticsExciseReportPost(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsExciseReportPostRequest]) (*connect.Response[v1.ExciseReportResponse], error) {
	return c.apiV1AnalyticsExciseReportPost.CallUnary(ctx, req)
}

// ApiV1AnalyticsGoodsLabelingGet calls
// wb.analytics.v1.AnalyticsService.ApiV1AnalyticsGoodsLabelingGet.
func (c *analyticsServiceClient) ApiV1AnalyticsGoodsLabelingGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsGoodsLabelingGetRequest]) (*connect.Response[v1.ApiV1AnalyticsGoodsLabelingGet200Response], error) {
	return c.apiV1AnalyticsGoodsLabelingGet.CallUnary(ctx, req)
}

// ApiV1AnalyticsIncorrectAttachmentsGet calls
// wb.analytics.v1.AnalyticsService.ApiV1AnalyticsIncorrectAttachmentsGet.
func (c *analyticsServiceClient) ApiV1AnalyticsIncorrectAttachmentsGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response], error) {
	return c.apiV1AnalyticsIncorrectAttachmentsGet.CallUnary(ctx, req)
}

// ApiV1AnalyticsStorageCoefficientGet calls
// wb.analytics.v1.AnalyticsService.ApiV1AnalyticsStorageCoefficientGet.
func (c *analyticsServiceClient) ApiV1AnalyticsStorageCoefficientGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsStorageCoefficientGetRequest]) (*connect.Response[v1.ApiV1AnalyticsStorageCoefficientGet200Response], error) {
	return c.apiV1AnalyticsStorageCoefficientGet.CallUnary(ctx, req)
}

// ApiV1PaidStorageGet calls wb.analytics.v1.AnalyticsService.ApiV1PaidStorageGet.
func (c *analyticsServiceClient) ApiV1PaidStorageGet(ctx context.Context, req *connect.Request[v1.ApiV1PaidStorageGetRequest]) (*connect.Response[v1.CreateTaskResponse], error) {
	return c.apiV1PaidStorageGet.CallUnary(ctx, req)
}

// ApiV1PaidStorageTasksTaskIdDownloadGet calls
// wb.analytics.v1.AnalyticsService.ApiV1PaidStorageTasksTaskIdDownloadGet.
func (c *analyticsServiceClient) ApiV1PaidStorageTasksTaskIdDownloadGet(ctx context.Context, req *connect.Request[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest]) (*connect.Response[v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse], error) {
	return c.apiV1PaidStorageTasksTaskIdDownloadGet.CallUnary(ctx, req)
}

// ApiV1PaidStorageTasksTaskIdStatusGet calls
// wb.analytics.v1.AnalyticsService.ApiV1PaidStorageTasksTaskIdStatusGet.
func (c *analyticsServiceClient) ApiV1PaidStorageTasksTaskIdStatusGet(ctx context.Context, req *connect.Request[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest]) (*connect.Response[v1.GetTasksResponse], error) {
	return c.apiV1PaidStorageTasksTaskIdStatusGet.CallUnary(ctx, req)
}

// ApiV2NmReportDetailHistoryPost calls
// wb.analytics.v1.AnalyticsService.ApiV2NmReportDetailHistoryPost.
func (c *analyticsServiceClient) ApiV2NmReportDetailHistoryPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDetailHistoryPostRequest]) (*connect.Response[v1.NmReportDetailHistoryResponse], error) {
	return c.apiV2NmReportDetailHistoryPost.CallUnary(ctx, req)
}

// ApiV2NmReportDetailPost calls wb.analytics.v1.AnalyticsService.ApiV2NmReportDetailPost.
func (c *analyticsServiceClient) ApiV2NmReportDetailPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDetailPostRequest]) (*connect.Response[v1.NmReportDetailResponse], error) {
	return c.apiV2NmReportDetailPost.CallUnary(ctx, req)
}

// ApiV2NmReportDownloadsFileDownloadIdGet calls
// wb.analytics.v1.AnalyticsService.ApiV2NmReportDownloadsFileDownloadIdGet.
func (c *analyticsServiceClient) ApiV2NmReportDownloadsFileDownloadIdGet(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest]) (*connect.Response[v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse], error) {
	return c.apiV2NmReportDownloadsFileDownloadIdGet.CallUnary(ctx, req)
}

// ApiV2NmReportDownloadsGet calls wb.analytics.v1.AnalyticsService.ApiV2NmReportDownloadsGet.
func (c *analyticsServiceClient) ApiV2NmReportDownloadsGet(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDownloadsGetRequest]) (*connect.Response[v1.NmReportGetReportsResponse], error) {
	return c.apiV2NmReportDownloadsGet.CallUnary(ctx, req)
}

// ApiV2NmReportDownloadsPost calls wb.analytics.v1.AnalyticsService.ApiV2NmReportDownloadsPost.
func (c *analyticsServiceClient) ApiV2NmReportDownloadsPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDownloadsPostRequest]) (*connect.Response[v1.NmReportCreateReportResponse], error) {
	return c.apiV2NmReportDownloadsPost.CallUnary(ctx, req)
}

// ApiV2NmReportDownloadsRetryPost calls
// wb.analytics.v1.AnalyticsService.ApiV2NmReportDownloadsRetryPost.
func (c *analyticsServiceClient) ApiV2NmReportDownloadsRetryPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDownloadsRetryPostRequest]) (*connect.Response[v1.NmReportRetryReportResponse], error) {
	return c.apiV2NmReportDownloadsRetryPost.CallUnary(ctx, req)
}

// ApiV2NmReportGroupedHistoryPost calls
// wb.analytics.v1.AnalyticsService.ApiV2NmReportGroupedHistoryPost.
func (c *analyticsServiceClient) ApiV2NmReportGroupedHistoryPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportGroupedHistoryPostRequest]) (*connect.Response[v1.NmReportGroupedHistoryResponse], error) {
	return c.apiV2NmReportGroupedHistoryPost.CallUnary(ctx, req)
}

// ApiV2NmReportGroupedPost calls wb.analytics.v1.AnalyticsService.ApiV2NmReportGroupedPost.
func (c *analyticsServiceClient) ApiV2NmReportGroupedPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportGroupedPostRequest]) (*connect.Response[v1.NmReportGroupedResponse], error) {
	return c.apiV2NmReportGroupedPost.CallUnary(ctx, req)
}

// AnalyticsServiceHandler is an implementation of the wb.analytics.v1.AnalyticsService service.
type AnalyticsServiceHandler interface {
	ApiV1AnalyticsAcceptanceReportGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAcceptanceReportGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAcceptanceReportGet200Response], error)
	ApiV1AnalyticsAntifraudDetailsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAntifraudDetailsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAntifraudDetailsGet200Response], error)
	ApiV1AnalyticsExciseReportPost(context.Context, *connect.Request[v1.ApiV1AnalyticsExciseReportPostRequest]) (*connect.Response[v1.ExciseReportResponse], error)
	ApiV1AnalyticsGoodsLabelingGet(context.Context, *connect.Request[v1.ApiV1AnalyticsGoodsLabelingGetRequest]) (*connect.Response[v1.ApiV1AnalyticsGoodsLabelingGet200Response], error)
	ApiV1AnalyticsIncorrectAttachmentsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response], error)
	ApiV1AnalyticsStorageCoefficientGet(context.Context, *connect.Request[v1.ApiV1AnalyticsStorageCoefficientGetRequest]) (*connect.Response[v1.ApiV1AnalyticsStorageCoefficientGet200Response], error)
	ApiV1PaidStorageGet(context.Context, *connect.Request[v1.ApiV1PaidStorageGetRequest]) (*connect.Response[v1.CreateTaskResponse], error)
	ApiV1PaidStorageTasksTaskIdDownloadGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest]) (*connect.Response[v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse], error)
	ApiV1PaidStorageTasksTaskIdStatusGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest]) (*connect.Response[v1.GetTasksResponse], error)
	ApiV2NmReportDetailHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailHistoryPostRequest]) (*connect.Response[v1.NmReportDetailHistoryResponse], error)
	ApiV2NmReportDetailPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailPostRequest]) (*connect.Response[v1.NmReportDetailResponse], error)
	ApiV2NmReportDownloadsFileDownloadIdGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest]) (*connect.Response[v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse], error)
	ApiV2NmReportDownloadsGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsGetRequest]) (*connect.Response[v1.NmReportGetReportsResponse], error)
	ApiV2NmReportDownloadsPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsPostRequest]) (*connect.Response[v1.NmReportCreateReportResponse], error)
	ApiV2NmReportDownloadsRetryPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsRetryPostRequest]) (*connect.Response[v1.NmReportRetryReportResponse], error)
	ApiV2NmReportGroupedHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedHistoryPostRequest]) (*connect.Response[v1.NmReportGroupedHistoryResponse], error)
	ApiV2NmReportGroupedPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedPostRequest]) (*connect.Response[v1.NmReportGroupedResponse], error)
}

// NewAnalyticsServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewAnalyticsServiceHandler(svc AnalyticsServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	analyticsServiceApiV1AnalyticsAcceptanceReportGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1AnalyticsAcceptanceReportGetProcedure,
		svc.ApiV1AnalyticsAcceptanceReportGet,
		connect.WithSchema(analyticsServiceApiV1AnalyticsAcceptanceReportGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV1AnalyticsAntifraudDetailsGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1AnalyticsAntifraudDetailsGetProcedure,
		svc.ApiV1AnalyticsAntifraudDetailsGet,
		connect.WithSchema(analyticsServiceApiV1AnalyticsAntifraudDetailsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV1AnalyticsExciseReportPostHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1AnalyticsExciseReportPostProcedure,
		svc.ApiV1AnalyticsExciseReportPost,
		connect.WithSchema(analyticsServiceApiV1AnalyticsExciseReportPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV1AnalyticsGoodsLabelingGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1AnalyticsGoodsLabelingGetProcedure,
		svc.ApiV1AnalyticsGoodsLabelingGet,
		connect.WithSchema(analyticsServiceApiV1AnalyticsGoodsLabelingGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV1AnalyticsIncorrectAttachmentsGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure,
		svc.ApiV1AnalyticsIncorrectAttachmentsGet,
		connect.WithSchema(analyticsServiceApiV1AnalyticsIncorrectAttachmentsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV1AnalyticsStorageCoefficientGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1AnalyticsStorageCoefficientGetProcedure,
		svc.ApiV1AnalyticsStorageCoefficientGet,
		connect.WithSchema(analyticsServiceApiV1AnalyticsStorageCoefficientGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV1PaidStorageGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1PaidStorageGetProcedure,
		svc.ApiV1PaidStorageGet,
		connect.WithSchema(analyticsServiceApiV1PaidStorageGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure,
		svc.ApiV1PaidStorageTasksTaskIdDownloadGet,
		connect.WithSchema(analyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV1PaidStorageTasksTaskIdStatusGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure,
		svc.ApiV1PaidStorageTasksTaskIdStatusGet,
		connect.WithSchema(analyticsServiceApiV1PaidStorageTasksTaskIdStatusGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV2NmReportDetailHistoryPostHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV2NmReportDetailHistoryPostProcedure,
		svc.ApiV2NmReportDetailHistoryPost,
		connect.WithSchema(analyticsServiceApiV2NmReportDetailHistoryPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV2NmReportDetailPostHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV2NmReportDetailPostProcedure,
		svc.ApiV2NmReportDetailPost,
		connect.WithSchema(analyticsServiceApiV2NmReportDetailPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV2NmReportDownloadsFileDownloadIdGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure,
		svc.ApiV2NmReportDownloadsFileDownloadIdGet,
		connect.WithSchema(analyticsServiceApiV2NmReportDownloadsFileDownloadIdGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV2NmReportDownloadsGetHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV2NmReportDownloadsGetProcedure,
		svc.ApiV2NmReportDownloadsGet,
		connect.WithSchema(analyticsServiceApiV2NmReportDownloadsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV2NmReportDownloadsPostHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV2NmReportDownloadsPostProcedure,
		svc.ApiV2NmReportDownloadsPost,
		connect.WithSchema(analyticsServiceApiV2NmReportDownloadsPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV2NmReportDownloadsRetryPostHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV2NmReportDownloadsRetryPostProcedure,
		svc.ApiV2NmReportDownloadsRetryPost,
		connect.WithSchema(analyticsServiceApiV2NmReportDownloadsRetryPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV2NmReportGroupedHistoryPostHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV2NmReportGroupedHistoryPostProcedure,
		svc.ApiV2NmReportGroupedHistoryPost,
		connect.WithSchema(analyticsServiceApiV2NmReportGroupedHistoryPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	analyticsServiceApiV2NmReportGroupedPostHandler := connect.NewUnaryHandler(
		AnalyticsServiceApiV2NmReportGroupedPostProcedure,
		svc.ApiV2NmReportGroupedPost,
		connect.WithSchema(analyticsServiceApiV2NmReportGroupedPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/wb.analytics.v1.AnalyticsService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case AnalyticsServiceApiV1AnalyticsAcceptanceReportGetProcedure:
			analyticsServiceApiV1AnalyticsAcceptanceReportGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV1AnalyticsAntifraudDetailsGetProcedure:
			analyticsServiceApiV1AnalyticsAntifraudDetailsGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV1AnalyticsExciseReportPostProcedure:
			analyticsServiceApiV1AnalyticsExciseReportPostHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV1AnalyticsGoodsLabelingGetProcedure:
			analyticsServiceApiV1AnalyticsGoodsLabelingGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure:
			analyticsServiceApiV1AnalyticsIncorrectAttachmentsGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV1AnalyticsStorageCoefficientGetProcedure:
			analyticsServiceApiV1AnalyticsStorageCoefficientGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV1PaidStorageGetProcedure:
			analyticsServiceApiV1PaidStorageGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure:
			analyticsServiceApiV1PaidStorageTasksTaskIdDownloadGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure:
			analyticsServiceApiV1PaidStorageTasksTaskIdStatusGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV2NmReportDetailHistoryPostProcedure:
			analyticsServiceApiV2NmReportDetailHistoryPostHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV2NmReportDetailPostProcedure:
			analyticsServiceApiV2NmReportDetailPostHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure:
			analyticsServiceApiV2NmReportDownloadsFileDownloadIdGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV2NmReportDownloadsGetProcedure:
			analyticsServiceApiV2NmReportDownloadsGetHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV2NmReportDownloadsPostProcedure:
			analyticsServiceApiV2NmReportDownloadsPostHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV2NmReportDownloadsRetryPostProcedure:
			analyticsServiceApiV2NmReportDownloadsRetryPostHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV2NmReportGroupedHistoryPostProcedure:
			analyticsServiceApiV2NmReportGroupedHistoryPostHandler.ServeHTTP(w, r)
		case AnalyticsServiceApiV2NmReportGroupedPostProcedure:
			analyticsServiceApiV2NmReportGroupedPostHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedAnalyticsServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedAnalyticsServiceHandler struct{}

func (UnimplementedAnalyticsServiceHandler) ApiV1AnalyticsAcceptanceReportGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAcceptanceReportGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAcceptanceReportGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1AnalyticsAcceptanceReportGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV1AnalyticsAntifraudDetailsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAntifraudDetailsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAntifraudDetailsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1AnalyticsAntifraudDetailsGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV1AnalyticsExciseReportPost(context.Context, *connect.Request[v1.ApiV1AnalyticsExciseReportPostRequest]) (*connect.Response[v1.ExciseReportResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1AnalyticsExciseReportPost is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV1AnalyticsGoodsLabelingGet(context.Context, *connect.Request[v1.ApiV1AnalyticsGoodsLabelingGetRequest]) (*connect.Response[v1.ApiV1AnalyticsGoodsLabelingGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1AnalyticsGoodsLabelingGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV1AnalyticsIncorrectAttachmentsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1AnalyticsIncorrectAttachmentsGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV1AnalyticsStorageCoefficientGet(context.Context, *connect.Request[v1.ApiV1AnalyticsStorageCoefficientGetRequest]) (*connect.Response[v1.ApiV1AnalyticsStorageCoefficientGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1AnalyticsStorageCoefficientGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV1PaidStorageGet(context.Context, *connect.Request[v1.ApiV1PaidStorageGetRequest]) (*connect.Response[v1.CreateTaskResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1PaidStorageGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV1PaidStorageTasksTaskIdDownloadGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest]) (*connect.Response[v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1PaidStorageTasksTaskIdDownloadGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV1PaidStorageTasksTaskIdStatusGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest]) (*connect.Response[v1.GetTasksResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV1PaidStorageTasksTaskIdStatusGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV2NmReportDetailHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailHistoryPostRequest]) (*connect.Response[v1.NmReportDetailHistoryResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV2NmReportDetailHistoryPost is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV2NmReportDetailPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailPostRequest]) (*connect.Response[v1.NmReportDetailResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV2NmReportDetailPost is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV2NmReportDownloadsFileDownloadIdGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest]) (*connect.Response[v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV2NmReportDownloadsFileDownloadIdGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV2NmReportDownloadsGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsGetRequest]) (*connect.Response[v1.NmReportGetReportsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV2NmReportDownloadsGet is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV2NmReportDownloadsPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsPostRequest]) (*connect.Response[v1.NmReportCreateReportResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV2NmReportDownloadsPost is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV2NmReportDownloadsRetryPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsRetryPostRequest]) (*connect.Response[v1.NmReportRetryReportResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV2NmReportDownloadsRetryPost is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV2NmReportGroupedHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedHistoryPostRequest]) (*connect.Response[v1.NmReportGroupedHistoryResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV2NmReportGroupedHistoryPost is not implemented"))
}

func (UnimplementedAnalyticsServiceHandler) ApiV2NmReportGroupedPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedPostRequest]) (*connect.Response[v1.NmReportGroupedResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.AnalyticsService.ApiV2NmReportGroupedPost is not implemented"))
}
