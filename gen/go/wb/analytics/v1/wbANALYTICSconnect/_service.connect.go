//
//Описание API Аналитика
//
//Сервис предоставляет публичный API для получения аналитических данных. С помощью этих методов вы можете получать аналитические отчёты. [Часть методов](./#tag/Voronka-prodazh-(Dzhem)/) доступна только с [подпиской на расширенную аналитику Джем](https://seller.wildberries.ru/dynamic-product-categories/jam).
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: wb/analytics/v1/_service.proto

package wbANALYTICSconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/MarketAIO/market-proto/gen/go/pb/wb/analytics/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// DefaultServiceName is the fully-qualified name of the DefaultService service.
	DefaultServiceName = "wb.analytics.v1.DefaultService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// DefaultServiceApiV1AnalyticsAcceptanceReportGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV1AnalyticsAcceptanceReportGet RPC.
	DefaultServiceApiV1AnalyticsAcceptanceReportGetProcedure = "/wb.analytics.v1.DefaultService/ApiV1AnalyticsAcceptanceReportGet"
	// DefaultServiceApiV1AnalyticsAntifraudDetailsGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV1AnalyticsAntifraudDetailsGet RPC.
	DefaultServiceApiV1AnalyticsAntifraudDetailsGetProcedure = "/wb.analytics.v1.DefaultService/ApiV1AnalyticsAntifraudDetailsGet"
	// DefaultServiceApiV1AnalyticsExciseReportPostProcedure is the fully-qualified name of the
	// DefaultService's ApiV1AnalyticsExciseReportPost RPC.
	DefaultServiceApiV1AnalyticsExciseReportPostProcedure = "/wb.analytics.v1.DefaultService/ApiV1AnalyticsExciseReportPost"
	// DefaultServiceApiV1AnalyticsGoodsLabelingGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV1AnalyticsGoodsLabelingGet RPC.
	DefaultServiceApiV1AnalyticsGoodsLabelingGetProcedure = "/wb.analytics.v1.DefaultService/ApiV1AnalyticsGoodsLabelingGet"
	// DefaultServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV1AnalyticsIncorrectAttachmentsGet RPC.
	DefaultServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure = "/wb.analytics.v1.DefaultService/ApiV1AnalyticsIncorrectAttachmentsGet"
	// DefaultServiceApiV1AnalyticsStorageCoefficientGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV1AnalyticsStorageCoefficientGet RPC.
	DefaultServiceApiV1AnalyticsStorageCoefficientGetProcedure = "/wb.analytics.v1.DefaultService/ApiV1AnalyticsStorageCoefficientGet"
	// DefaultServiceApiV1PaidStorageGetProcedure is the fully-qualified name of the DefaultService's
	// ApiV1PaidStorageGet RPC.
	DefaultServiceApiV1PaidStorageGetProcedure = "/wb.analytics.v1.DefaultService/ApiV1PaidStorageGet"
	// DefaultServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV1PaidStorageTasksTaskIdDownloadGet RPC.
	DefaultServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure = "/wb.analytics.v1.DefaultService/ApiV1PaidStorageTasksTaskIdDownloadGet"
	// DefaultServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV1PaidStorageTasksTaskIdStatusGet RPC.
	DefaultServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure = "/wb.analytics.v1.DefaultService/ApiV1PaidStorageTasksTaskIdStatusGet"
	// DefaultServiceApiV2NmReportDetailHistoryPostProcedure is the fully-qualified name of the
	// DefaultService's ApiV2NmReportDetailHistoryPost RPC.
	DefaultServiceApiV2NmReportDetailHistoryPostProcedure = "/wb.analytics.v1.DefaultService/ApiV2NmReportDetailHistoryPost"
	// DefaultServiceApiV2NmReportDetailPostProcedure is the fully-qualified name of the
	// DefaultService's ApiV2NmReportDetailPost RPC.
	DefaultServiceApiV2NmReportDetailPostProcedure = "/wb.analytics.v1.DefaultService/ApiV2NmReportDetailPost"
	// DefaultServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV2NmReportDownloadsFileDownloadIdGet RPC.
	DefaultServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure = "/wb.analytics.v1.DefaultService/ApiV2NmReportDownloadsFileDownloadIdGet"
	// DefaultServiceApiV2NmReportDownloadsGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV2NmReportDownloadsGet RPC.
	DefaultServiceApiV2NmReportDownloadsGetProcedure = "/wb.analytics.v1.DefaultService/ApiV2NmReportDownloadsGet"
	// DefaultServiceApiV2NmReportDownloadsPostProcedure is the fully-qualified name of the
	// DefaultService's ApiV2NmReportDownloadsPost RPC.
	DefaultServiceApiV2NmReportDownloadsPostProcedure = "/wb.analytics.v1.DefaultService/ApiV2NmReportDownloadsPost"
	// DefaultServiceApiV2NmReportDownloadsRetryPostProcedure is the fully-qualified name of the
	// DefaultService's ApiV2NmReportDownloadsRetryPost RPC.
	DefaultServiceApiV2NmReportDownloadsRetryPostProcedure = "/wb.analytics.v1.DefaultService/ApiV2NmReportDownloadsRetryPost"
	// DefaultServiceApiV2NmReportGroupedHistoryPostProcedure is the fully-qualified name of the
	// DefaultService's ApiV2NmReportGroupedHistoryPost RPC.
	DefaultServiceApiV2NmReportGroupedHistoryPostProcedure = "/wb.analytics.v1.DefaultService/ApiV2NmReportGroupedHistoryPost"
	// DefaultServiceApiV2NmReportGroupedPostProcedure is the fully-qualified name of the
	// DefaultService's ApiV2NmReportGroupedPost RPC.
	DefaultServiceApiV2NmReportGroupedPostProcedure = "/wb.analytics.v1.DefaultService/ApiV2NmReportGroupedPost"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	defaultServiceServiceDescriptor                                       = v1.File_wb_analytics_v1__service_proto.Services().ByName("DefaultService")
	defaultServiceApiV1AnalyticsAcceptanceReportGetMethodDescriptor       = defaultServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsAcceptanceReportGet")
	defaultServiceApiV1AnalyticsAntifraudDetailsGetMethodDescriptor       = defaultServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsAntifraudDetailsGet")
	defaultServiceApiV1AnalyticsExciseReportPostMethodDescriptor          = defaultServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsExciseReportPost")
	defaultServiceApiV1AnalyticsGoodsLabelingGetMethodDescriptor          = defaultServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsGoodsLabelingGet")
	defaultServiceApiV1AnalyticsIncorrectAttachmentsGetMethodDescriptor   = defaultServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsIncorrectAttachmentsGet")
	defaultServiceApiV1AnalyticsStorageCoefficientGetMethodDescriptor     = defaultServiceServiceDescriptor.Methods().ByName("ApiV1AnalyticsStorageCoefficientGet")
	defaultServiceApiV1PaidStorageGetMethodDescriptor                     = defaultServiceServiceDescriptor.Methods().ByName("ApiV1PaidStorageGet")
	defaultServiceApiV1PaidStorageTasksTaskIdDownloadGetMethodDescriptor  = defaultServiceServiceDescriptor.Methods().ByName("ApiV1PaidStorageTasksTaskIdDownloadGet")
	defaultServiceApiV1PaidStorageTasksTaskIdStatusGetMethodDescriptor    = defaultServiceServiceDescriptor.Methods().ByName("ApiV1PaidStorageTasksTaskIdStatusGet")
	defaultServiceApiV2NmReportDetailHistoryPostMethodDescriptor          = defaultServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDetailHistoryPost")
	defaultServiceApiV2NmReportDetailPostMethodDescriptor                 = defaultServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDetailPost")
	defaultServiceApiV2NmReportDownloadsFileDownloadIdGetMethodDescriptor = defaultServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDownloadsFileDownloadIdGet")
	defaultServiceApiV2NmReportDownloadsGetMethodDescriptor               = defaultServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDownloadsGet")
	defaultServiceApiV2NmReportDownloadsPostMethodDescriptor              = defaultServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDownloadsPost")
	defaultServiceApiV2NmReportDownloadsRetryPostMethodDescriptor         = defaultServiceServiceDescriptor.Methods().ByName("ApiV2NmReportDownloadsRetryPost")
	defaultServiceApiV2NmReportGroupedHistoryPostMethodDescriptor         = defaultServiceServiceDescriptor.Methods().ByName("ApiV2NmReportGroupedHistoryPost")
	defaultServiceApiV2NmReportGroupedPostMethodDescriptor                = defaultServiceServiceDescriptor.Methods().ByName("ApiV2NmReportGroupedPost")
)

// DefaultServiceClient is a client for the wb.analytics.v1.DefaultService service.
type DefaultServiceClient interface {
	ApiV1AnalyticsAcceptanceReportGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAcceptanceReportGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAcceptanceReportGet200Response], error)
	ApiV1AnalyticsAntifraudDetailsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAntifraudDetailsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAntifraudDetailsGet200Response], error)
	ApiV1AnalyticsExciseReportPost(context.Context, *connect.Request[v1.ApiV1AnalyticsExciseReportPostRequest]) (*connect.Response[v1.ExciseReportResponse], error)
	ApiV1AnalyticsGoodsLabelingGet(context.Context, *connect.Request[v1.ApiV1AnalyticsGoodsLabelingGetRequest]) (*connect.Response[v1.ApiV1AnalyticsGoodsLabelingGet200Response], error)
	ApiV1AnalyticsIncorrectAttachmentsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response], error)
	ApiV1AnalyticsStorageCoefficientGet(context.Context, *connect.Request[v1.ApiV1AnalyticsStorageCoefficientGetRequest]) (*connect.Response[v1.ApiV1AnalyticsStorageCoefficientGet200Response], error)
	ApiV1PaidStorageGet(context.Context, *connect.Request[v1.ApiV1PaidStorageGetRequest]) (*connect.Response[v1.CreateTaskResponse], error)
	ApiV1PaidStorageTasksTaskIdDownloadGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest]) (*connect.Response[v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse], error)
	ApiV1PaidStorageTasksTaskIdStatusGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest]) (*connect.Response[v1.GetTasksResponse], error)
	ApiV2NmReportDetailHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailHistoryPostRequest]) (*connect.Response[v1.NmReportDetailHistoryResponse], error)
	ApiV2NmReportDetailPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailPostRequest]) (*connect.Response[v1.NmReportDetailResponse], error)
	ApiV2NmReportDownloadsFileDownloadIdGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest]) (*connect.Response[v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse], error)
	ApiV2NmReportDownloadsGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsGetRequest]) (*connect.Response[v1.NmReportGetReportsResponse], error)
	ApiV2NmReportDownloadsPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsPostRequest]) (*connect.Response[v1.NmReportCreateReportResponse], error)
	ApiV2NmReportDownloadsRetryPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsRetryPostRequest]) (*connect.Response[v1.NmReportRetryReportResponse], error)
	ApiV2NmReportGroupedHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedHistoryPostRequest]) (*connect.Response[v1.NmReportGroupedHistoryResponse], error)
	ApiV2NmReportGroupedPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedPostRequest]) (*connect.Response[v1.NmReportGroupedResponse], error)
}

// NewDefaultServiceClient constructs a client for the wb.analytics.v1.DefaultService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewDefaultServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) DefaultServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &defaultServiceClient{
		apiV1AnalyticsAcceptanceReportGet: connect.NewClient[v1.ApiV1AnalyticsAcceptanceReportGetRequest, v1.ApiV1AnalyticsAcceptanceReportGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV1AnalyticsAcceptanceReportGetProcedure,
			connect.WithSchema(defaultServiceApiV1AnalyticsAcceptanceReportGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsAntifraudDetailsGet: connect.NewClient[v1.ApiV1AnalyticsAntifraudDetailsGetRequest, v1.ApiV1AnalyticsAntifraudDetailsGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV1AnalyticsAntifraudDetailsGetProcedure,
			connect.WithSchema(defaultServiceApiV1AnalyticsAntifraudDetailsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsExciseReportPost: connect.NewClient[v1.ApiV1AnalyticsExciseReportPostRequest, v1.ExciseReportResponse](
			httpClient,
			baseURL+DefaultServiceApiV1AnalyticsExciseReportPostProcedure,
			connect.WithSchema(defaultServiceApiV1AnalyticsExciseReportPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsGoodsLabelingGet: connect.NewClient[v1.ApiV1AnalyticsGoodsLabelingGetRequest, v1.ApiV1AnalyticsGoodsLabelingGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV1AnalyticsGoodsLabelingGetProcedure,
			connect.WithSchema(defaultServiceApiV1AnalyticsGoodsLabelingGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsIncorrectAttachmentsGet: connect.NewClient[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest, v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure,
			connect.WithSchema(defaultServiceApiV1AnalyticsIncorrectAttachmentsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1AnalyticsStorageCoefficientGet: connect.NewClient[v1.ApiV1AnalyticsStorageCoefficientGetRequest, v1.ApiV1AnalyticsStorageCoefficientGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV1AnalyticsStorageCoefficientGetProcedure,
			connect.WithSchema(defaultServiceApiV1AnalyticsStorageCoefficientGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1PaidStorageGet: connect.NewClient[v1.ApiV1PaidStorageGetRequest, v1.CreateTaskResponse](
			httpClient,
			baseURL+DefaultServiceApiV1PaidStorageGetProcedure,
			connect.WithSchema(defaultServiceApiV1PaidStorageGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1PaidStorageTasksTaskIdDownloadGet: connect.NewClient[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest, v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse](
			httpClient,
			baseURL+DefaultServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure,
			connect.WithSchema(defaultServiceApiV1PaidStorageTasksTaskIdDownloadGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV1PaidStorageTasksTaskIdStatusGet: connect.NewClient[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest, v1.GetTasksResponse](
			httpClient,
			baseURL+DefaultServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure,
			connect.WithSchema(defaultServiceApiV1PaidStorageTasksTaskIdStatusGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDetailHistoryPost: connect.NewClient[v1.ApiV2NmReportDetailHistoryPostRequest, v1.NmReportDetailHistoryResponse](
			httpClient,
			baseURL+DefaultServiceApiV2NmReportDetailHistoryPostProcedure,
			connect.WithSchema(defaultServiceApiV2NmReportDetailHistoryPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDetailPost: connect.NewClient[v1.ApiV2NmReportDetailPostRequest, v1.NmReportDetailResponse](
			httpClient,
			baseURL+DefaultServiceApiV2NmReportDetailPostProcedure,
			connect.WithSchema(defaultServiceApiV2NmReportDetailPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDownloadsFileDownloadIdGet: connect.NewClient[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest, v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse](
			httpClient,
			baseURL+DefaultServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure,
			connect.WithSchema(defaultServiceApiV2NmReportDownloadsFileDownloadIdGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDownloadsGet: connect.NewClient[v1.ApiV2NmReportDownloadsGetRequest, v1.NmReportGetReportsResponse](
			httpClient,
			baseURL+DefaultServiceApiV2NmReportDownloadsGetProcedure,
			connect.WithSchema(defaultServiceApiV2NmReportDownloadsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDownloadsPost: connect.NewClient[v1.ApiV2NmReportDownloadsPostRequest, v1.NmReportCreateReportResponse](
			httpClient,
			baseURL+DefaultServiceApiV2NmReportDownloadsPostProcedure,
			connect.WithSchema(defaultServiceApiV2NmReportDownloadsPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportDownloadsRetryPost: connect.NewClient[v1.ApiV2NmReportDownloadsRetryPostRequest, v1.NmReportRetryReportResponse](
			httpClient,
			baseURL+DefaultServiceApiV2NmReportDownloadsRetryPostProcedure,
			connect.WithSchema(defaultServiceApiV2NmReportDownloadsRetryPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportGroupedHistoryPost: connect.NewClient[v1.ApiV2NmReportGroupedHistoryPostRequest, v1.NmReportGroupedHistoryResponse](
			httpClient,
			baseURL+DefaultServiceApiV2NmReportGroupedHistoryPostProcedure,
			connect.WithSchema(defaultServiceApiV2NmReportGroupedHistoryPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2NmReportGroupedPost: connect.NewClient[v1.ApiV2NmReportGroupedPostRequest, v1.NmReportGroupedResponse](
			httpClient,
			baseURL+DefaultServiceApiV2NmReportGroupedPostProcedure,
			connect.WithSchema(defaultServiceApiV2NmReportGroupedPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// defaultServiceClient implements DefaultServiceClient.
type defaultServiceClient struct {
	apiV1AnalyticsAcceptanceReportGet       *connect.Client[v1.ApiV1AnalyticsAcceptanceReportGetRequest, v1.ApiV1AnalyticsAcceptanceReportGet200Response]
	apiV1AnalyticsAntifraudDetailsGet       *connect.Client[v1.ApiV1AnalyticsAntifraudDetailsGetRequest, v1.ApiV1AnalyticsAntifraudDetailsGet200Response]
	apiV1AnalyticsExciseReportPost          *connect.Client[v1.ApiV1AnalyticsExciseReportPostRequest, v1.ExciseReportResponse]
	apiV1AnalyticsGoodsLabelingGet          *connect.Client[v1.ApiV1AnalyticsGoodsLabelingGetRequest, v1.ApiV1AnalyticsGoodsLabelingGet200Response]
	apiV1AnalyticsIncorrectAttachmentsGet   *connect.Client[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest, v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response]
	apiV1AnalyticsStorageCoefficientGet     *connect.Client[v1.ApiV1AnalyticsStorageCoefficientGetRequest, v1.ApiV1AnalyticsStorageCoefficientGet200Response]
	apiV1PaidStorageGet                     *connect.Client[v1.ApiV1PaidStorageGetRequest, v1.CreateTaskResponse]
	apiV1PaidStorageTasksTaskIdDownloadGet  *connect.Client[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest, v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse]
	apiV1PaidStorageTasksTaskIdStatusGet    *connect.Client[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest, v1.GetTasksResponse]
	apiV2NmReportDetailHistoryPost          *connect.Client[v1.ApiV2NmReportDetailHistoryPostRequest, v1.NmReportDetailHistoryResponse]
	apiV2NmReportDetailPost                 *connect.Client[v1.ApiV2NmReportDetailPostRequest, v1.NmReportDetailResponse]
	apiV2NmReportDownloadsFileDownloadIdGet *connect.Client[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest, v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse]
	apiV2NmReportDownloadsGet               *connect.Client[v1.ApiV2NmReportDownloadsGetRequest, v1.NmReportGetReportsResponse]
	apiV2NmReportDownloadsPost              *connect.Client[v1.ApiV2NmReportDownloadsPostRequest, v1.NmReportCreateReportResponse]
	apiV2NmReportDownloadsRetryPost         *connect.Client[v1.ApiV2NmReportDownloadsRetryPostRequest, v1.NmReportRetryReportResponse]
	apiV2NmReportGroupedHistoryPost         *connect.Client[v1.ApiV2NmReportGroupedHistoryPostRequest, v1.NmReportGroupedHistoryResponse]
	apiV2NmReportGroupedPost                *connect.Client[v1.ApiV2NmReportGroupedPostRequest, v1.NmReportGroupedResponse]
}

// ApiV1AnalyticsAcceptanceReportGet calls
// wb.analytics.v1.DefaultService.ApiV1AnalyticsAcceptanceReportGet.
func (c *defaultServiceClient) ApiV1AnalyticsAcceptanceReportGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsAcceptanceReportGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAcceptanceReportGet200Response], error) {
	return c.apiV1AnalyticsAcceptanceReportGet.CallUnary(ctx, req)
}

// ApiV1AnalyticsAntifraudDetailsGet calls
// wb.analytics.v1.DefaultService.ApiV1AnalyticsAntifraudDetailsGet.
func (c *defaultServiceClient) ApiV1AnalyticsAntifraudDetailsGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsAntifraudDetailsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAntifraudDetailsGet200Response], error) {
	return c.apiV1AnalyticsAntifraudDetailsGet.CallUnary(ctx, req)
}

// ApiV1AnalyticsExciseReportPost calls
// wb.analytics.v1.DefaultService.ApiV1AnalyticsExciseReportPost.
func (c *defaultServiceClient) ApiV1AnalyticsExciseReportPost(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsExciseReportPostRequest]) (*connect.Response[v1.ExciseReportResponse], error) {
	return c.apiV1AnalyticsExciseReportPost.CallUnary(ctx, req)
}

// ApiV1AnalyticsGoodsLabelingGet calls
// wb.analytics.v1.DefaultService.ApiV1AnalyticsGoodsLabelingGet.
func (c *defaultServiceClient) ApiV1AnalyticsGoodsLabelingGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsGoodsLabelingGetRequest]) (*connect.Response[v1.ApiV1AnalyticsGoodsLabelingGet200Response], error) {
	return c.apiV1AnalyticsGoodsLabelingGet.CallUnary(ctx, req)
}

// ApiV1AnalyticsIncorrectAttachmentsGet calls
// wb.analytics.v1.DefaultService.ApiV1AnalyticsIncorrectAttachmentsGet.
func (c *defaultServiceClient) ApiV1AnalyticsIncorrectAttachmentsGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response], error) {
	return c.apiV1AnalyticsIncorrectAttachmentsGet.CallUnary(ctx, req)
}

// ApiV1AnalyticsStorageCoefficientGet calls
// wb.analytics.v1.DefaultService.ApiV1AnalyticsStorageCoefficientGet.
func (c *defaultServiceClient) ApiV1AnalyticsStorageCoefficientGet(ctx context.Context, req *connect.Request[v1.ApiV1AnalyticsStorageCoefficientGetRequest]) (*connect.Response[v1.ApiV1AnalyticsStorageCoefficientGet200Response], error) {
	return c.apiV1AnalyticsStorageCoefficientGet.CallUnary(ctx, req)
}

// ApiV1PaidStorageGet calls wb.analytics.v1.DefaultService.ApiV1PaidStorageGet.
func (c *defaultServiceClient) ApiV1PaidStorageGet(ctx context.Context, req *connect.Request[v1.ApiV1PaidStorageGetRequest]) (*connect.Response[v1.CreateTaskResponse], error) {
	return c.apiV1PaidStorageGet.CallUnary(ctx, req)
}

// ApiV1PaidStorageTasksTaskIdDownloadGet calls
// wb.analytics.v1.DefaultService.ApiV1PaidStorageTasksTaskIdDownloadGet.
func (c *defaultServiceClient) ApiV1PaidStorageTasksTaskIdDownloadGet(ctx context.Context, req *connect.Request[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest]) (*connect.Response[v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse], error) {
	return c.apiV1PaidStorageTasksTaskIdDownloadGet.CallUnary(ctx, req)
}

// ApiV1PaidStorageTasksTaskIdStatusGet calls
// wb.analytics.v1.DefaultService.ApiV1PaidStorageTasksTaskIdStatusGet.
func (c *defaultServiceClient) ApiV1PaidStorageTasksTaskIdStatusGet(ctx context.Context, req *connect.Request[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest]) (*connect.Response[v1.GetTasksResponse], error) {
	return c.apiV1PaidStorageTasksTaskIdStatusGet.CallUnary(ctx, req)
}

// ApiV2NmReportDetailHistoryPost calls
// wb.analytics.v1.DefaultService.ApiV2NmReportDetailHistoryPost.
func (c *defaultServiceClient) ApiV2NmReportDetailHistoryPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDetailHistoryPostRequest]) (*connect.Response[v1.NmReportDetailHistoryResponse], error) {
	return c.apiV2NmReportDetailHistoryPost.CallUnary(ctx, req)
}

// ApiV2NmReportDetailPost calls wb.analytics.v1.DefaultService.ApiV2NmReportDetailPost.
func (c *defaultServiceClient) ApiV2NmReportDetailPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDetailPostRequest]) (*connect.Response[v1.NmReportDetailResponse], error) {
	return c.apiV2NmReportDetailPost.CallUnary(ctx, req)
}

// ApiV2NmReportDownloadsFileDownloadIdGet calls
// wb.analytics.v1.DefaultService.ApiV2NmReportDownloadsFileDownloadIdGet.
func (c *defaultServiceClient) ApiV2NmReportDownloadsFileDownloadIdGet(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest]) (*connect.Response[v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse], error) {
	return c.apiV2NmReportDownloadsFileDownloadIdGet.CallUnary(ctx, req)
}

// ApiV2NmReportDownloadsGet calls wb.analytics.v1.DefaultService.ApiV2NmReportDownloadsGet.
func (c *defaultServiceClient) ApiV2NmReportDownloadsGet(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDownloadsGetRequest]) (*connect.Response[v1.NmReportGetReportsResponse], error) {
	return c.apiV2NmReportDownloadsGet.CallUnary(ctx, req)
}

// ApiV2NmReportDownloadsPost calls wb.analytics.v1.DefaultService.ApiV2NmReportDownloadsPost.
func (c *defaultServiceClient) ApiV2NmReportDownloadsPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDownloadsPostRequest]) (*connect.Response[v1.NmReportCreateReportResponse], error) {
	return c.apiV2NmReportDownloadsPost.CallUnary(ctx, req)
}

// ApiV2NmReportDownloadsRetryPost calls
// wb.analytics.v1.DefaultService.ApiV2NmReportDownloadsRetryPost.
func (c *defaultServiceClient) ApiV2NmReportDownloadsRetryPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportDownloadsRetryPostRequest]) (*connect.Response[v1.NmReportRetryReportResponse], error) {
	return c.apiV2NmReportDownloadsRetryPost.CallUnary(ctx, req)
}

// ApiV2NmReportGroupedHistoryPost calls
// wb.analytics.v1.DefaultService.ApiV2NmReportGroupedHistoryPost.
func (c *defaultServiceClient) ApiV2NmReportGroupedHistoryPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportGroupedHistoryPostRequest]) (*connect.Response[v1.NmReportGroupedHistoryResponse], error) {
	return c.apiV2NmReportGroupedHistoryPost.CallUnary(ctx, req)
}

// ApiV2NmReportGroupedPost calls wb.analytics.v1.DefaultService.ApiV2NmReportGroupedPost.
func (c *defaultServiceClient) ApiV2NmReportGroupedPost(ctx context.Context, req *connect.Request[v1.ApiV2NmReportGroupedPostRequest]) (*connect.Response[v1.NmReportGroupedResponse], error) {
	return c.apiV2NmReportGroupedPost.CallUnary(ctx, req)
}

// DefaultServiceHandler is an implementation of the wb.analytics.v1.DefaultService service.
type DefaultServiceHandler interface {
	ApiV1AnalyticsAcceptanceReportGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAcceptanceReportGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAcceptanceReportGet200Response], error)
	ApiV1AnalyticsAntifraudDetailsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAntifraudDetailsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAntifraudDetailsGet200Response], error)
	ApiV1AnalyticsExciseReportPost(context.Context, *connect.Request[v1.ApiV1AnalyticsExciseReportPostRequest]) (*connect.Response[v1.ExciseReportResponse], error)
	ApiV1AnalyticsGoodsLabelingGet(context.Context, *connect.Request[v1.ApiV1AnalyticsGoodsLabelingGetRequest]) (*connect.Response[v1.ApiV1AnalyticsGoodsLabelingGet200Response], error)
	ApiV1AnalyticsIncorrectAttachmentsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response], error)
	ApiV1AnalyticsStorageCoefficientGet(context.Context, *connect.Request[v1.ApiV1AnalyticsStorageCoefficientGetRequest]) (*connect.Response[v1.ApiV1AnalyticsStorageCoefficientGet200Response], error)
	ApiV1PaidStorageGet(context.Context, *connect.Request[v1.ApiV1PaidStorageGetRequest]) (*connect.Response[v1.CreateTaskResponse], error)
	ApiV1PaidStorageTasksTaskIdDownloadGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest]) (*connect.Response[v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse], error)
	ApiV1PaidStorageTasksTaskIdStatusGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest]) (*connect.Response[v1.GetTasksResponse], error)
	ApiV2NmReportDetailHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailHistoryPostRequest]) (*connect.Response[v1.NmReportDetailHistoryResponse], error)
	ApiV2NmReportDetailPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailPostRequest]) (*connect.Response[v1.NmReportDetailResponse], error)
	ApiV2NmReportDownloadsFileDownloadIdGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest]) (*connect.Response[v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse], error)
	ApiV2NmReportDownloadsGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsGetRequest]) (*connect.Response[v1.NmReportGetReportsResponse], error)
	ApiV2NmReportDownloadsPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsPostRequest]) (*connect.Response[v1.NmReportCreateReportResponse], error)
	ApiV2NmReportDownloadsRetryPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsRetryPostRequest]) (*connect.Response[v1.NmReportRetryReportResponse], error)
	ApiV2NmReportGroupedHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedHistoryPostRequest]) (*connect.Response[v1.NmReportGroupedHistoryResponse], error)
	ApiV2NmReportGroupedPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedPostRequest]) (*connect.Response[v1.NmReportGroupedResponse], error)
}

// NewDefaultServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewDefaultServiceHandler(svc DefaultServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	defaultServiceApiV1AnalyticsAcceptanceReportGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1AnalyticsAcceptanceReportGetProcedure,
		svc.ApiV1AnalyticsAcceptanceReportGet,
		connect.WithSchema(defaultServiceApiV1AnalyticsAcceptanceReportGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1AnalyticsAntifraudDetailsGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1AnalyticsAntifraudDetailsGetProcedure,
		svc.ApiV1AnalyticsAntifraudDetailsGet,
		connect.WithSchema(defaultServiceApiV1AnalyticsAntifraudDetailsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1AnalyticsExciseReportPostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1AnalyticsExciseReportPostProcedure,
		svc.ApiV1AnalyticsExciseReportPost,
		connect.WithSchema(defaultServiceApiV1AnalyticsExciseReportPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1AnalyticsGoodsLabelingGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1AnalyticsGoodsLabelingGetProcedure,
		svc.ApiV1AnalyticsGoodsLabelingGet,
		connect.WithSchema(defaultServiceApiV1AnalyticsGoodsLabelingGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1AnalyticsIncorrectAttachmentsGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure,
		svc.ApiV1AnalyticsIncorrectAttachmentsGet,
		connect.WithSchema(defaultServiceApiV1AnalyticsIncorrectAttachmentsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1AnalyticsStorageCoefficientGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1AnalyticsStorageCoefficientGetProcedure,
		svc.ApiV1AnalyticsStorageCoefficientGet,
		connect.WithSchema(defaultServiceApiV1AnalyticsStorageCoefficientGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1PaidStorageGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1PaidStorageGetProcedure,
		svc.ApiV1PaidStorageGet,
		connect.WithSchema(defaultServiceApiV1PaidStorageGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1PaidStorageTasksTaskIdDownloadGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure,
		svc.ApiV1PaidStorageTasksTaskIdDownloadGet,
		connect.WithSchema(defaultServiceApiV1PaidStorageTasksTaskIdDownloadGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV1PaidStorageTasksTaskIdStatusGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure,
		svc.ApiV1PaidStorageTasksTaskIdStatusGet,
		connect.WithSchema(defaultServiceApiV1PaidStorageTasksTaskIdStatusGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2NmReportDetailHistoryPostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2NmReportDetailHistoryPostProcedure,
		svc.ApiV2NmReportDetailHistoryPost,
		connect.WithSchema(defaultServiceApiV2NmReportDetailHistoryPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2NmReportDetailPostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2NmReportDetailPostProcedure,
		svc.ApiV2NmReportDetailPost,
		connect.WithSchema(defaultServiceApiV2NmReportDetailPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2NmReportDownloadsFileDownloadIdGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure,
		svc.ApiV2NmReportDownloadsFileDownloadIdGet,
		connect.WithSchema(defaultServiceApiV2NmReportDownloadsFileDownloadIdGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2NmReportDownloadsGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2NmReportDownloadsGetProcedure,
		svc.ApiV2NmReportDownloadsGet,
		connect.WithSchema(defaultServiceApiV2NmReportDownloadsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2NmReportDownloadsPostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2NmReportDownloadsPostProcedure,
		svc.ApiV2NmReportDownloadsPost,
		connect.WithSchema(defaultServiceApiV2NmReportDownloadsPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2NmReportDownloadsRetryPostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2NmReportDownloadsRetryPostProcedure,
		svc.ApiV2NmReportDownloadsRetryPost,
		connect.WithSchema(defaultServiceApiV2NmReportDownloadsRetryPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2NmReportGroupedHistoryPostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2NmReportGroupedHistoryPostProcedure,
		svc.ApiV2NmReportGroupedHistoryPost,
		connect.WithSchema(defaultServiceApiV2NmReportGroupedHistoryPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2NmReportGroupedPostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2NmReportGroupedPostProcedure,
		svc.ApiV2NmReportGroupedPost,
		connect.WithSchema(defaultServiceApiV2NmReportGroupedPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/wb.analytics.v1.DefaultService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case DefaultServiceApiV1AnalyticsAcceptanceReportGetProcedure:
			defaultServiceApiV1AnalyticsAcceptanceReportGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1AnalyticsAntifraudDetailsGetProcedure:
			defaultServiceApiV1AnalyticsAntifraudDetailsGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1AnalyticsExciseReportPostProcedure:
			defaultServiceApiV1AnalyticsExciseReportPostHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1AnalyticsGoodsLabelingGetProcedure:
			defaultServiceApiV1AnalyticsGoodsLabelingGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1AnalyticsIncorrectAttachmentsGetProcedure:
			defaultServiceApiV1AnalyticsIncorrectAttachmentsGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1AnalyticsStorageCoefficientGetProcedure:
			defaultServiceApiV1AnalyticsStorageCoefficientGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1PaidStorageGetProcedure:
			defaultServiceApiV1PaidStorageGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1PaidStorageTasksTaskIdDownloadGetProcedure:
			defaultServiceApiV1PaidStorageTasksTaskIdDownloadGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV1PaidStorageTasksTaskIdStatusGetProcedure:
			defaultServiceApiV1PaidStorageTasksTaskIdStatusGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2NmReportDetailHistoryPostProcedure:
			defaultServiceApiV2NmReportDetailHistoryPostHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2NmReportDetailPostProcedure:
			defaultServiceApiV2NmReportDetailPostHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2NmReportDownloadsFileDownloadIdGetProcedure:
			defaultServiceApiV2NmReportDownloadsFileDownloadIdGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2NmReportDownloadsGetProcedure:
			defaultServiceApiV2NmReportDownloadsGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2NmReportDownloadsPostProcedure:
			defaultServiceApiV2NmReportDownloadsPostHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2NmReportDownloadsRetryPostProcedure:
			defaultServiceApiV2NmReportDownloadsRetryPostHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2NmReportGroupedHistoryPostProcedure:
			defaultServiceApiV2NmReportGroupedHistoryPostHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2NmReportGroupedPostProcedure:
			defaultServiceApiV2NmReportGroupedPostHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedDefaultServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedDefaultServiceHandler struct{}

func (UnimplementedDefaultServiceHandler) ApiV1AnalyticsAcceptanceReportGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAcceptanceReportGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAcceptanceReportGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1AnalyticsAcceptanceReportGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1AnalyticsAntifraudDetailsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsAntifraudDetailsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsAntifraudDetailsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1AnalyticsAntifraudDetailsGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1AnalyticsExciseReportPost(context.Context, *connect.Request[v1.ApiV1AnalyticsExciseReportPostRequest]) (*connect.Response[v1.ExciseReportResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1AnalyticsExciseReportPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1AnalyticsGoodsLabelingGet(context.Context, *connect.Request[v1.ApiV1AnalyticsGoodsLabelingGetRequest]) (*connect.Response[v1.ApiV1AnalyticsGoodsLabelingGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1AnalyticsGoodsLabelingGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1AnalyticsIncorrectAttachmentsGet(context.Context, *connect.Request[v1.ApiV1AnalyticsIncorrectAttachmentsGetRequest]) (*connect.Response[v1.ApiV1AnalyticsIncorrectAttachmentsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1AnalyticsIncorrectAttachmentsGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1AnalyticsStorageCoefficientGet(context.Context, *connect.Request[v1.ApiV1AnalyticsStorageCoefficientGetRequest]) (*connect.Response[v1.ApiV1AnalyticsStorageCoefficientGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1AnalyticsStorageCoefficientGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1PaidStorageGet(context.Context, *connect.Request[v1.ApiV1PaidStorageGetRequest]) (*connect.Response[v1.CreateTaskResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1PaidStorageGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1PaidStorageTasksTaskIdDownloadGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdDownloadGetRequest]) (*connect.Response[v1.ApiV1PaidStorageTasksTaskIdDownloadGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1PaidStorageTasksTaskIdDownloadGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV1PaidStorageTasksTaskIdStatusGet(context.Context, *connect.Request[v1.ApiV1PaidStorageTasksTaskIdStatusGetRequest]) (*connect.Response[v1.GetTasksResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV1PaidStorageTasksTaskIdStatusGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2NmReportDetailHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailHistoryPostRequest]) (*connect.Response[v1.NmReportDetailHistoryResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV2NmReportDetailHistoryPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2NmReportDetailPost(context.Context, *connect.Request[v1.ApiV2NmReportDetailPostRequest]) (*connect.Response[v1.NmReportDetailResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV2NmReportDetailPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2NmReportDownloadsFileDownloadIdGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsFileDownloadIdGetRequest]) (*connect.Response[v1.ApiV2NmReportDownloadsFileDownloadIdGetResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV2NmReportDownloadsFileDownloadIdGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2NmReportDownloadsGet(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsGetRequest]) (*connect.Response[v1.NmReportGetReportsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV2NmReportDownloadsGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2NmReportDownloadsPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsPostRequest]) (*connect.Response[v1.NmReportCreateReportResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV2NmReportDownloadsPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2NmReportDownloadsRetryPost(context.Context, *connect.Request[v1.ApiV2NmReportDownloadsRetryPostRequest]) (*connect.Response[v1.NmReportRetryReportResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV2NmReportDownloadsRetryPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2NmReportGroupedHistoryPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedHistoryPostRequest]) (*connect.Response[v1.NmReportGroupedHistoryResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV2NmReportGroupedHistoryPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2NmReportGroupedPost(context.Context, *connect.Request[v1.ApiV2NmReportGroupedPostRequest]) (*connect.Response[v1.NmReportGroupedResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.analytics.v1.DefaultService.ApiV2NmReportGroupedPost is not implemented"))
}
