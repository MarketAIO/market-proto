//
//Описание API Контента
//
//<dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code>
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: wb/content/v1/_service.proto

package wbCONTENTconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/MarketAIO/market-proto/gen/go/pb/wb/content/v1"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// DefaultServiceName is the fully-qualified name of the DefaultService service.
	DefaultServiceName = "wb.content.v1.DefaultService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// DefaultServiceContentV2BarcodesPostProcedure is the fully-qualified name of the DefaultService's
	// ContentV2BarcodesPost RPC.
	DefaultServiceContentV2BarcodesPostProcedure = "/wb.content.v1.DefaultService/ContentV2BarcodesPost"
	// DefaultServiceContentV2CardsDeleteTrashPostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2CardsDeleteTrashPost RPC.
	DefaultServiceContentV2CardsDeleteTrashPostProcedure = "/wb.content.v1.DefaultService/ContentV2CardsDeleteTrashPost"
	// DefaultServiceContentV2CardsErrorListGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2CardsErrorListGet RPC.
	DefaultServiceContentV2CardsErrorListGetProcedure = "/wb.content.v1.DefaultService/ContentV2CardsErrorListGet"
	// DefaultServiceContentV2CardsLimitsGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2CardsLimitsGet RPC.
	DefaultServiceContentV2CardsLimitsGetProcedure = "/wb.content.v1.DefaultService/ContentV2CardsLimitsGet"
	// DefaultServiceContentV2CardsMoveNmPostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2CardsMoveNmPost RPC.
	DefaultServiceContentV2CardsMoveNmPostProcedure = "/wb.content.v1.DefaultService/ContentV2CardsMoveNmPost"
	// DefaultServiceContentV2CardsRecoverPostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2CardsRecoverPost RPC.
	DefaultServiceContentV2CardsRecoverPostProcedure = "/wb.content.v1.DefaultService/ContentV2CardsRecoverPost"
	// DefaultServiceContentV2CardsUpdatePostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2CardsUpdatePost RPC.
	DefaultServiceContentV2CardsUpdatePostProcedure = "/wb.content.v1.DefaultService/ContentV2CardsUpdatePost"
	// DefaultServiceContentV2CardsUploadAddPostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2CardsUploadAddPost RPC.
	DefaultServiceContentV2CardsUploadAddPostProcedure = "/wb.content.v1.DefaultService/ContentV2CardsUploadAddPost"
	// DefaultServiceContentV2CardsUploadPostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2CardsUploadPost RPC.
	DefaultServiceContentV2CardsUploadPostProcedure = "/wb.content.v1.DefaultService/ContentV2CardsUploadPost"
	// DefaultServiceContentV2DirectoryColorsGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2DirectoryColorsGet RPC.
	DefaultServiceContentV2DirectoryColorsGetProcedure = "/wb.content.v1.DefaultService/ContentV2DirectoryColorsGet"
	// DefaultServiceContentV2DirectoryCountriesGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2DirectoryCountriesGet RPC.
	DefaultServiceContentV2DirectoryCountriesGetProcedure = "/wb.content.v1.DefaultService/ContentV2DirectoryCountriesGet"
	// DefaultServiceContentV2DirectoryKindsGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2DirectoryKindsGet RPC.
	DefaultServiceContentV2DirectoryKindsGetProcedure = "/wb.content.v1.DefaultService/ContentV2DirectoryKindsGet"
	// DefaultServiceContentV2DirectorySeasonsGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2DirectorySeasonsGet RPC.
	DefaultServiceContentV2DirectorySeasonsGetProcedure = "/wb.content.v1.DefaultService/ContentV2DirectorySeasonsGet"
	// DefaultServiceContentV2DirectoryTnvedGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2DirectoryTnvedGet RPC.
	DefaultServiceContentV2DirectoryTnvedGetProcedure = "/wb.content.v1.DefaultService/ContentV2DirectoryTnvedGet"
	// DefaultServiceContentV2DirectoryVatGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2DirectoryVatGet RPC.
	DefaultServiceContentV2DirectoryVatGetProcedure = "/wb.content.v1.DefaultService/ContentV2DirectoryVatGet"
	// DefaultServiceContentV2GetCardsListPostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2GetCardsListPost RPC.
	DefaultServiceContentV2GetCardsListPostProcedure = "/wb.content.v1.DefaultService/ContentV2GetCardsListPost"
	// DefaultServiceContentV2GetCardsTrashPostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2GetCardsTrashPost RPC.
	DefaultServiceContentV2GetCardsTrashPostProcedure = "/wb.content.v1.DefaultService/ContentV2GetCardsTrashPost"
	// DefaultServiceContentV2ObjectAllGetProcedure is the fully-qualified name of the DefaultService's
	// ContentV2ObjectAllGet RPC.
	DefaultServiceContentV2ObjectAllGetProcedure = "/wb.content.v1.DefaultService/ContentV2ObjectAllGet"
	// DefaultServiceContentV2ObjectCharcsSubjectIdGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2ObjectCharcsSubjectIdGet RPC.
	DefaultServiceContentV2ObjectCharcsSubjectIdGetProcedure = "/wb.content.v1.DefaultService/ContentV2ObjectCharcsSubjectIdGet"
	// DefaultServiceContentV2ObjectParentAllGetProcedure is the fully-qualified name of the
	// DefaultService's ContentV2ObjectParentAllGet RPC.
	DefaultServiceContentV2ObjectParentAllGetProcedure = "/wb.content.v1.DefaultService/ContentV2ObjectParentAllGet"
	// DefaultServiceContentV2TagIdDeleteProcedure is the fully-qualified name of the DefaultService's
	// ContentV2TagIdDelete RPC.
	DefaultServiceContentV2TagIdDeleteProcedure = "/wb.content.v1.DefaultService/ContentV2TagIdDelete"
	// DefaultServiceContentV2TagIdPatchProcedure is the fully-qualified name of the DefaultService's
	// ContentV2TagIdPatch RPC.
	DefaultServiceContentV2TagIdPatchProcedure = "/wb.content.v1.DefaultService/ContentV2TagIdPatch"
	// DefaultServiceContentV2TagNomenclatureLinkPostProcedure is the fully-qualified name of the
	// DefaultService's ContentV2TagNomenclatureLinkPost RPC.
	DefaultServiceContentV2TagNomenclatureLinkPostProcedure = "/wb.content.v1.DefaultService/ContentV2TagNomenclatureLinkPost"
	// DefaultServiceContentV2TagPostProcedure is the fully-qualified name of the DefaultService's
	// ContentV2TagPost RPC.
	DefaultServiceContentV2TagPostProcedure = "/wb.content.v1.DefaultService/ContentV2TagPost"
	// DefaultServiceContentV2TagsGetProcedure is the fully-qualified name of the DefaultService's
	// ContentV2TagsGet RPC.
	DefaultServiceContentV2TagsGetProcedure = "/wb.content.v1.DefaultService/ContentV2TagsGet"
	// DefaultServiceContentV3MediaFilePostProcedure is the fully-qualified name of the DefaultService's
	// ContentV3MediaFilePost RPC.
	DefaultServiceContentV3MediaFilePostProcedure = "/wb.content.v1.DefaultService/ContentV3MediaFilePost"
	// DefaultServiceContentV3MediaSavePostProcedure is the fully-qualified name of the DefaultService's
	// ContentV3MediaSavePost RPC.
	DefaultServiceContentV3MediaSavePostProcedure = "/wb.content.v1.DefaultService/ContentV3MediaSavePost"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	defaultServiceServiceDescriptor                                 = v1.File_wb_content_v1__service_proto.Services().ByName("DefaultService")
	defaultServiceContentV2BarcodesPostMethodDescriptor             = defaultServiceServiceDescriptor.Methods().ByName("ContentV2BarcodesPost")
	defaultServiceContentV2CardsDeleteTrashPostMethodDescriptor     = defaultServiceServiceDescriptor.Methods().ByName("ContentV2CardsDeleteTrashPost")
	defaultServiceContentV2CardsErrorListGetMethodDescriptor        = defaultServiceServiceDescriptor.Methods().ByName("ContentV2CardsErrorListGet")
	defaultServiceContentV2CardsLimitsGetMethodDescriptor           = defaultServiceServiceDescriptor.Methods().ByName("ContentV2CardsLimitsGet")
	defaultServiceContentV2CardsMoveNmPostMethodDescriptor          = defaultServiceServiceDescriptor.Methods().ByName("ContentV2CardsMoveNmPost")
	defaultServiceContentV2CardsRecoverPostMethodDescriptor         = defaultServiceServiceDescriptor.Methods().ByName("ContentV2CardsRecoverPost")
	defaultServiceContentV2CardsUpdatePostMethodDescriptor          = defaultServiceServiceDescriptor.Methods().ByName("ContentV2CardsUpdatePost")
	defaultServiceContentV2CardsUploadAddPostMethodDescriptor       = defaultServiceServiceDescriptor.Methods().ByName("ContentV2CardsUploadAddPost")
	defaultServiceContentV2CardsUploadPostMethodDescriptor          = defaultServiceServiceDescriptor.Methods().ByName("ContentV2CardsUploadPost")
	defaultServiceContentV2DirectoryColorsGetMethodDescriptor       = defaultServiceServiceDescriptor.Methods().ByName("ContentV2DirectoryColorsGet")
	defaultServiceContentV2DirectoryCountriesGetMethodDescriptor    = defaultServiceServiceDescriptor.Methods().ByName("ContentV2DirectoryCountriesGet")
	defaultServiceContentV2DirectoryKindsGetMethodDescriptor        = defaultServiceServiceDescriptor.Methods().ByName("ContentV2DirectoryKindsGet")
	defaultServiceContentV2DirectorySeasonsGetMethodDescriptor      = defaultServiceServiceDescriptor.Methods().ByName("ContentV2DirectorySeasonsGet")
	defaultServiceContentV2DirectoryTnvedGetMethodDescriptor        = defaultServiceServiceDescriptor.Methods().ByName("ContentV2DirectoryTnvedGet")
	defaultServiceContentV2DirectoryVatGetMethodDescriptor          = defaultServiceServiceDescriptor.Methods().ByName("ContentV2DirectoryVatGet")
	defaultServiceContentV2GetCardsListPostMethodDescriptor         = defaultServiceServiceDescriptor.Methods().ByName("ContentV2GetCardsListPost")
	defaultServiceContentV2GetCardsTrashPostMethodDescriptor        = defaultServiceServiceDescriptor.Methods().ByName("ContentV2GetCardsTrashPost")
	defaultServiceContentV2ObjectAllGetMethodDescriptor             = defaultServiceServiceDescriptor.Methods().ByName("ContentV2ObjectAllGet")
	defaultServiceContentV2ObjectCharcsSubjectIdGetMethodDescriptor = defaultServiceServiceDescriptor.Methods().ByName("ContentV2ObjectCharcsSubjectIdGet")
	defaultServiceContentV2ObjectParentAllGetMethodDescriptor       = defaultServiceServiceDescriptor.Methods().ByName("ContentV2ObjectParentAllGet")
	defaultServiceContentV2TagIdDeleteMethodDescriptor              = defaultServiceServiceDescriptor.Methods().ByName("ContentV2TagIdDelete")
	defaultServiceContentV2TagIdPatchMethodDescriptor               = defaultServiceServiceDescriptor.Methods().ByName("ContentV2TagIdPatch")
	defaultServiceContentV2TagNomenclatureLinkPostMethodDescriptor  = defaultServiceServiceDescriptor.Methods().ByName("ContentV2TagNomenclatureLinkPost")
	defaultServiceContentV2TagPostMethodDescriptor                  = defaultServiceServiceDescriptor.Methods().ByName("ContentV2TagPost")
	defaultServiceContentV2TagsGetMethodDescriptor                  = defaultServiceServiceDescriptor.Methods().ByName("ContentV2TagsGet")
	defaultServiceContentV3MediaFilePostMethodDescriptor            = defaultServiceServiceDescriptor.Methods().ByName("ContentV3MediaFilePost")
	defaultServiceContentV3MediaSavePostMethodDescriptor            = defaultServiceServiceDescriptor.Methods().ByName("ContentV3MediaSavePost")
)

// DefaultServiceClient is a client for the wb.content.v1.DefaultService service.
type DefaultServiceClient interface {
	ContentV2BarcodesPost(context.Context, *connect.Request[v1.ContentV2BarcodesPostRequest]) (*connect.Response[v1.ContentV2BarcodesPost200Response], error)
	ContentV2CardsDeleteTrashPost(context.Context, *connect.Request[v1.ContentV2CardsDeleteTrashPostRequest]) (*connect.Response[v1.ContentV2CardsDeleteTrashPost200Response], error)
	ContentV2CardsErrorListGet(context.Context, *connect.Request[v1.ContentV2CardsErrorListGetRequest]) (*connect.Response[v1.ContentV2CardsErrorListGet200Response], error)
	ContentV2CardsLimitsGet(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.ContentV2CardsLimitsGet200Response], error)
	ContentV2CardsMoveNmPost(context.Context, *connect.Request[v1.ContentV2CardsMoveNmPostRequest]) (*connect.Response[v1.ResponseCardCreate], error)
	ContentV2CardsRecoverPost(context.Context, *connect.Request[v1.ContentV2CardsRecoverPostRequest]) (*connect.Response[v1.ContentV2CardsDeleteTrashPost200Response], error)
	ContentV2CardsUpdatePost(context.Context, *connect.Request[v1.ContentV2CardsUpdatePostRequest]) (*connect.Response[v1.ResponseCardCreate], error)
	ContentV2CardsUploadAddPost(context.Context, *connect.Request[v1.ContentV2CardsUploadAddPostRequest]) (*connect.Response[v1.ResponseCardCreate], error)
	ContentV2CardsUploadPost(context.Context, *connect.Request[v1.ContentV2CardsUploadPostRequest]) (*connect.Response[v1.ResponseCardCreate], error)
	ContentV2DirectoryColorsGet(context.Context, *connect.Request[v1.ContentV2DirectoryColorsGetRequest]) (*connect.Response[v1.ContentV2DirectoryColorsGet200Response], error)
	ContentV2DirectoryCountriesGet(context.Context, *connect.Request[v1.ContentV2DirectoryCountriesGetRequest]) (*connect.Response[v1.ContentV2DirectoryCountriesGet200Response], error)
	ContentV2DirectoryKindsGet(context.Context, *connect.Request[v1.ContentV2DirectoryKindsGetRequest]) (*connect.Response[v1.ContentV2DirectoryKindsGet200Response], error)
	ContentV2DirectorySeasonsGet(context.Context, *connect.Request[v1.ContentV2DirectorySeasonsGetRequest]) (*connect.Response[v1.ContentV2DirectorySeasonsGet200Response], error)
	ContentV2DirectoryTnvedGet(context.Context, *connect.Request[v1.ContentV2DirectoryTnvedGetRequest]) (*connect.Response[v1.ContentV2DirectoryTnvedGet200Response], error)
	ContentV2DirectoryVatGet(context.Context, *connect.Request[v1.ContentV2DirectoryVatGetRequest]) (*connect.Response[v1.ContentV2DirectoryVatGet200Response], error)
	ContentV2GetCardsListPost(context.Context, *connect.Request[v1.ContentV2GetCardsListPostRequest]) (*connect.Response[v1.ContentV2GetCardsListPost200Response], error)
	ContentV2GetCardsTrashPost(context.Context, *connect.Request[v1.ContentV2GetCardsTrashPostRequest]) (*connect.Response[v1.ContentV2GetCardsTrashPost200Response], error)
	ContentV2ObjectAllGet(context.Context, *connect.Request[v1.ContentV2ObjectAllGetRequest]) (*connect.Response[v1.ContentV2ObjectAllGet200Response], error)
	ContentV2ObjectCharcsSubjectIdGet(context.Context, *connect.Request[v1.ContentV2ObjectCharcsSubjectIdGetRequest]) (*connect.Response[v1.ContentV2ObjectCharcsSubjectIdGet200Response], error)
	ContentV2ObjectParentAllGet(context.Context, *connect.Request[v1.ContentV2ObjectParentAllGetRequest]) (*connect.Response[v1.ContentV2ObjectParentAllGet200Response], error)
	ContentV2TagIdDelete(context.Context, *connect.Request[v1.ContentV2TagIdDeleteRequest]) (*connect.Response[v1.ContentV2TagIdDelete200Response], error)
	ContentV2TagIdPatch(context.Context, *connect.Request[v1.ContentV2TagIdPatchRequest]) (*connect.Response[v1.ContentV2TagIdPatch200Response], error)
	ContentV2TagNomenclatureLinkPost(context.Context, *connect.Request[v1.ContentV2TagNomenclatureLinkPostRequest]) (*connect.Response[v1.ResponseContentError6], error)
	ContentV2TagPost(context.Context, *connect.Request[v1.ContentV2TagPostRequest]) (*connect.Response[v1.ResponseContentError6], error)
	ContentV2TagsGet(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.ContentV2TagsGet200Response], error)
	ContentV3MediaFilePost(context.Context, *connect.Request[v1.ContentV3MediaFilePostRequest]) (*connect.Response[v1.ContentV3MediaSavePost200Response], error)
	ContentV3MediaSavePost(context.Context, *connect.Request[v1.ContentV3MediaSavePostRequest]) (*connect.Response[v1.ContentV3MediaSavePost200Response], error)
}

// NewDefaultServiceClient constructs a client for the wb.content.v1.DefaultService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewDefaultServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) DefaultServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &defaultServiceClient{
		contentV2BarcodesPost: connect.NewClient[v1.ContentV2BarcodesPostRequest, v1.ContentV2BarcodesPost200Response](
			httpClient,
			baseURL+DefaultServiceContentV2BarcodesPostProcedure,
			connect.WithSchema(defaultServiceContentV2BarcodesPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2CardsDeleteTrashPost: connect.NewClient[v1.ContentV2CardsDeleteTrashPostRequest, v1.ContentV2CardsDeleteTrashPost200Response](
			httpClient,
			baseURL+DefaultServiceContentV2CardsDeleteTrashPostProcedure,
			connect.WithSchema(defaultServiceContentV2CardsDeleteTrashPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2CardsErrorListGet: connect.NewClient[v1.ContentV2CardsErrorListGetRequest, v1.ContentV2CardsErrorListGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2CardsErrorListGetProcedure,
			connect.WithSchema(defaultServiceContentV2CardsErrorListGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2CardsLimitsGet: connect.NewClient[emptypb.Empty, v1.ContentV2CardsLimitsGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2CardsLimitsGetProcedure,
			connect.WithSchema(defaultServiceContentV2CardsLimitsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2CardsMoveNmPost: connect.NewClient[v1.ContentV2CardsMoveNmPostRequest, v1.ResponseCardCreate](
			httpClient,
			baseURL+DefaultServiceContentV2CardsMoveNmPostProcedure,
			connect.WithSchema(defaultServiceContentV2CardsMoveNmPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2CardsRecoverPost: connect.NewClient[v1.ContentV2CardsRecoverPostRequest, v1.ContentV2CardsDeleteTrashPost200Response](
			httpClient,
			baseURL+DefaultServiceContentV2CardsRecoverPostProcedure,
			connect.WithSchema(defaultServiceContentV2CardsRecoverPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2CardsUpdatePost: connect.NewClient[v1.ContentV2CardsUpdatePostRequest, v1.ResponseCardCreate](
			httpClient,
			baseURL+DefaultServiceContentV2CardsUpdatePostProcedure,
			connect.WithSchema(defaultServiceContentV2CardsUpdatePostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2CardsUploadAddPost: connect.NewClient[v1.ContentV2CardsUploadAddPostRequest, v1.ResponseCardCreate](
			httpClient,
			baseURL+DefaultServiceContentV2CardsUploadAddPostProcedure,
			connect.WithSchema(defaultServiceContentV2CardsUploadAddPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2CardsUploadPost: connect.NewClient[v1.ContentV2CardsUploadPostRequest, v1.ResponseCardCreate](
			httpClient,
			baseURL+DefaultServiceContentV2CardsUploadPostProcedure,
			connect.WithSchema(defaultServiceContentV2CardsUploadPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2DirectoryColorsGet: connect.NewClient[v1.ContentV2DirectoryColorsGetRequest, v1.ContentV2DirectoryColorsGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2DirectoryColorsGetProcedure,
			connect.WithSchema(defaultServiceContentV2DirectoryColorsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2DirectoryCountriesGet: connect.NewClient[v1.ContentV2DirectoryCountriesGetRequest, v1.ContentV2DirectoryCountriesGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2DirectoryCountriesGetProcedure,
			connect.WithSchema(defaultServiceContentV2DirectoryCountriesGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2DirectoryKindsGet: connect.NewClient[v1.ContentV2DirectoryKindsGetRequest, v1.ContentV2DirectoryKindsGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2DirectoryKindsGetProcedure,
			connect.WithSchema(defaultServiceContentV2DirectoryKindsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2DirectorySeasonsGet: connect.NewClient[v1.ContentV2DirectorySeasonsGetRequest, v1.ContentV2DirectorySeasonsGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2DirectorySeasonsGetProcedure,
			connect.WithSchema(defaultServiceContentV2DirectorySeasonsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2DirectoryTnvedGet: connect.NewClient[v1.ContentV2DirectoryTnvedGetRequest, v1.ContentV2DirectoryTnvedGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2DirectoryTnvedGetProcedure,
			connect.WithSchema(defaultServiceContentV2DirectoryTnvedGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2DirectoryVatGet: connect.NewClient[v1.ContentV2DirectoryVatGetRequest, v1.ContentV2DirectoryVatGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2DirectoryVatGetProcedure,
			connect.WithSchema(defaultServiceContentV2DirectoryVatGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2GetCardsListPost: connect.NewClient[v1.ContentV2GetCardsListPostRequest, v1.ContentV2GetCardsListPost200Response](
			httpClient,
			baseURL+DefaultServiceContentV2GetCardsListPostProcedure,
			connect.WithSchema(defaultServiceContentV2GetCardsListPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2GetCardsTrashPost: connect.NewClient[v1.ContentV2GetCardsTrashPostRequest, v1.ContentV2GetCardsTrashPost200Response](
			httpClient,
			baseURL+DefaultServiceContentV2GetCardsTrashPostProcedure,
			connect.WithSchema(defaultServiceContentV2GetCardsTrashPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2ObjectAllGet: connect.NewClient[v1.ContentV2ObjectAllGetRequest, v1.ContentV2ObjectAllGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2ObjectAllGetProcedure,
			connect.WithSchema(defaultServiceContentV2ObjectAllGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2ObjectCharcsSubjectIdGet: connect.NewClient[v1.ContentV2ObjectCharcsSubjectIdGetRequest, v1.ContentV2ObjectCharcsSubjectIdGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2ObjectCharcsSubjectIdGetProcedure,
			connect.WithSchema(defaultServiceContentV2ObjectCharcsSubjectIdGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2ObjectParentAllGet: connect.NewClient[v1.ContentV2ObjectParentAllGetRequest, v1.ContentV2ObjectParentAllGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2ObjectParentAllGetProcedure,
			connect.WithSchema(defaultServiceContentV2ObjectParentAllGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2TagIdDelete: connect.NewClient[v1.ContentV2TagIdDeleteRequest, v1.ContentV2TagIdDelete200Response](
			httpClient,
			baseURL+DefaultServiceContentV2TagIdDeleteProcedure,
			connect.WithSchema(defaultServiceContentV2TagIdDeleteMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2TagIdPatch: connect.NewClient[v1.ContentV2TagIdPatchRequest, v1.ContentV2TagIdPatch200Response](
			httpClient,
			baseURL+DefaultServiceContentV2TagIdPatchProcedure,
			connect.WithSchema(defaultServiceContentV2TagIdPatchMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2TagNomenclatureLinkPost: connect.NewClient[v1.ContentV2TagNomenclatureLinkPostRequest, v1.ResponseContentError6](
			httpClient,
			baseURL+DefaultServiceContentV2TagNomenclatureLinkPostProcedure,
			connect.WithSchema(defaultServiceContentV2TagNomenclatureLinkPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2TagPost: connect.NewClient[v1.ContentV2TagPostRequest, v1.ResponseContentError6](
			httpClient,
			baseURL+DefaultServiceContentV2TagPostProcedure,
			connect.WithSchema(defaultServiceContentV2TagPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV2TagsGet: connect.NewClient[emptypb.Empty, v1.ContentV2TagsGet200Response](
			httpClient,
			baseURL+DefaultServiceContentV2TagsGetProcedure,
			connect.WithSchema(defaultServiceContentV2TagsGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV3MediaFilePost: connect.NewClient[v1.ContentV3MediaFilePostRequest, v1.ContentV3MediaSavePost200Response](
			httpClient,
			baseURL+DefaultServiceContentV3MediaFilePostProcedure,
			connect.WithSchema(defaultServiceContentV3MediaFilePostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		contentV3MediaSavePost: connect.NewClient[v1.ContentV3MediaSavePostRequest, v1.ContentV3MediaSavePost200Response](
			httpClient,
			baseURL+DefaultServiceContentV3MediaSavePostProcedure,
			connect.WithSchema(defaultServiceContentV3MediaSavePostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// defaultServiceClient implements DefaultServiceClient.
type defaultServiceClient struct {
	contentV2BarcodesPost             *connect.Client[v1.ContentV2BarcodesPostRequest, v1.ContentV2BarcodesPost200Response]
	contentV2CardsDeleteTrashPost     *connect.Client[v1.ContentV2CardsDeleteTrashPostRequest, v1.ContentV2CardsDeleteTrashPost200Response]
	contentV2CardsErrorListGet        *connect.Client[v1.ContentV2CardsErrorListGetRequest, v1.ContentV2CardsErrorListGet200Response]
	contentV2CardsLimitsGet           *connect.Client[emptypb.Empty, v1.ContentV2CardsLimitsGet200Response]
	contentV2CardsMoveNmPost          *connect.Client[v1.ContentV2CardsMoveNmPostRequest, v1.ResponseCardCreate]
	contentV2CardsRecoverPost         *connect.Client[v1.ContentV2CardsRecoverPostRequest, v1.ContentV2CardsDeleteTrashPost200Response]
	contentV2CardsUpdatePost          *connect.Client[v1.ContentV2CardsUpdatePostRequest, v1.ResponseCardCreate]
	contentV2CardsUploadAddPost       *connect.Client[v1.ContentV2CardsUploadAddPostRequest, v1.ResponseCardCreate]
	contentV2CardsUploadPost          *connect.Client[v1.ContentV2CardsUploadPostRequest, v1.ResponseCardCreate]
	contentV2DirectoryColorsGet       *connect.Client[v1.ContentV2DirectoryColorsGetRequest, v1.ContentV2DirectoryColorsGet200Response]
	contentV2DirectoryCountriesGet    *connect.Client[v1.ContentV2DirectoryCountriesGetRequest, v1.ContentV2DirectoryCountriesGet200Response]
	contentV2DirectoryKindsGet        *connect.Client[v1.ContentV2DirectoryKindsGetRequest, v1.ContentV2DirectoryKindsGet200Response]
	contentV2DirectorySeasonsGet      *connect.Client[v1.ContentV2DirectorySeasonsGetRequest, v1.ContentV2DirectorySeasonsGet200Response]
	contentV2DirectoryTnvedGet        *connect.Client[v1.ContentV2DirectoryTnvedGetRequest, v1.ContentV2DirectoryTnvedGet200Response]
	contentV2DirectoryVatGet          *connect.Client[v1.ContentV2DirectoryVatGetRequest, v1.ContentV2DirectoryVatGet200Response]
	contentV2GetCardsListPost         *connect.Client[v1.ContentV2GetCardsListPostRequest, v1.ContentV2GetCardsListPost200Response]
	contentV2GetCardsTrashPost        *connect.Client[v1.ContentV2GetCardsTrashPostRequest, v1.ContentV2GetCardsTrashPost200Response]
	contentV2ObjectAllGet             *connect.Client[v1.ContentV2ObjectAllGetRequest, v1.ContentV2ObjectAllGet200Response]
	contentV2ObjectCharcsSubjectIdGet *connect.Client[v1.ContentV2ObjectCharcsSubjectIdGetRequest, v1.ContentV2ObjectCharcsSubjectIdGet200Response]
	contentV2ObjectParentAllGet       *connect.Client[v1.ContentV2ObjectParentAllGetRequest, v1.ContentV2ObjectParentAllGet200Response]
	contentV2TagIdDelete              *connect.Client[v1.ContentV2TagIdDeleteRequest, v1.ContentV2TagIdDelete200Response]
	contentV2TagIdPatch               *connect.Client[v1.ContentV2TagIdPatchRequest, v1.ContentV2TagIdPatch200Response]
	contentV2TagNomenclatureLinkPost  *connect.Client[v1.ContentV2TagNomenclatureLinkPostRequest, v1.ResponseContentError6]
	contentV2TagPost                  *connect.Client[v1.ContentV2TagPostRequest, v1.ResponseContentError6]
	contentV2TagsGet                  *connect.Client[emptypb.Empty, v1.ContentV2TagsGet200Response]
	contentV3MediaFilePost            *connect.Client[v1.ContentV3MediaFilePostRequest, v1.ContentV3MediaSavePost200Response]
	contentV3MediaSavePost            *connect.Client[v1.ContentV3MediaSavePostRequest, v1.ContentV3MediaSavePost200Response]
}

// ContentV2BarcodesPost calls wb.content.v1.DefaultService.ContentV2BarcodesPost.
func (c *defaultServiceClient) ContentV2BarcodesPost(ctx context.Context, req *connect.Request[v1.ContentV2BarcodesPostRequest]) (*connect.Response[v1.ContentV2BarcodesPost200Response], error) {
	return c.contentV2BarcodesPost.CallUnary(ctx, req)
}

// ContentV2CardsDeleteTrashPost calls wb.content.v1.DefaultService.ContentV2CardsDeleteTrashPost.
func (c *defaultServiceClient) ContentV2CardsDeleteTrashPost(ctx context.Context, req *connect.Request[v1.ContentV2CardsDeleteTrashPostRequest]) (*connect.Response[v1.ContentV2CardsDeleteTrashPost200Response], error) {
	return c.contentV2CardsDeleteTrashPost.CallUnary(ctx, req)
}

// ContentV2CardsErrorListGet calls wb.content.v1.DefaultService.ContentV2CardsErrorListGet.
func (c *defaultServiceClient) ContentV2CardsErrorListGet(ctx context.Context, req *connect.Request[v1.ContentV2CardsErrorListGetRequest]) (*connect.Response[v1.ContentV2CardsErrorListGet200Response], error) {
	return c.contentV2CardsErrorListGet.CallUnary(ctx, req)
}

// ContentV2CardsLimitsGet calls wb.content.v1.DefaultService.ContentV2CardsLimitsGet.
func (c *defaultServiceClient) ContentV2CardsLimitsGet(ctx context.Context, req *connect.Request[emptypb.Empty]) (*connect.Response[v1.ContentV2CardsLimitsGet200Response], error) {
	return c.contentV2CardsLimitsGet.CallUnary(ctx, req)
}

// ContentV2CardsMoveNmPost calls wb.content.v1.DefaultService.ContentV2CardsMoveNmPost.
func (c *defaultServiceClient) ContentV2CardsMoveNmPost(ctx context.Context, req *connect.Request[v1.ContentV2CardsMoveNmPostRequest]) (*connect.Response[v1.ResponseCardCreate], error) {
	return c.contentV2CardsMoveNmPost.CallUnary(ctx, req)
}

// ContentV2CardsRecoverPost calls wb.content.v1.DefaultService.ContentV2CardsRecoverPost.
func (c *defaultServiceClient) ContentV2CardsRecoverPost(ctx context.Context, req *connect.Request[v1.ContentV2CardsRecoverPostRequest]) (*connect.Response[v1.ContentV2CardsDeleteTrashPost200Response], error) {
	return c.contentV2CardsRecoverPost.CallUnary(ctx, req)
}

// ContentV2CardsUpdatePost calls wb.content.v1.DefaultService.ContentV2CardsUpdatePost.
func (c *defaultServiceClient) ContentV2CardsUpdatePost(ctx context.Context, req *connect.Request[v1.ContentV2CardsUpdatePostRequest]) (*connect.Response[v1.ResponseCardCreate], error) {
	return c.contentV2CardsUpdatePost.CallUnary(ctx, req)
}

// ContentV2CardsUploadAddPost calls wb.content.v1.DefaultService.ContentV2CardsUploadAddPost.
func (c *defaultServiceClient) ContentV2CardsUploadAddPost(ctx context.Context, req *connect.Request[v1.ContentV2CardsUploadAddPostRequest]) (*connect.Response[v1.ResponseCardCreate], error) {
	return c.contentV2CardsUploadAddPost.CallUnary(ctx, req)
}

// ContentV2CardsUploadPost calls wb.content.v1.DefaultService.ContentV2CardsUploadPost.
func (c *defaultServiceClient) ContentV2CardsUploadPost(ctx context.Context, req *connect.Request[v1.ContentV2CardsUploadPostRequest]) (*connect.Response[v1.ResponseCardCreate], error) {
	return c.contentV2CardsUploadPost.CallUnary(ctx, req)
}

// ContentV2DirectoryColorsGet calls wb.content.v1.DefaultService.ContentV2DirectoryColorsGet.
func (c *defaultServiceClient) ContentV2DirectoryColorsGet(ctx context.Context, req *connect.Request[v1.ContentV2DirectoryColorsGetRequest]) (*connect.Response[v1.ContentV2DirectoryColorsGet200Response], error) {
	return c.contentV2DirectoryColorsGet.CallUnary(ctx, req)
}

// ContentV2DirectoryCountriesGet calls wb.content.v1.DefaultService.ContentV2DirectoryCountriesGet.
func (c *defaultServiceClient) ContentV2DirectoryCountriesGet(ctx context.Context, req *connect.Request[v1.ContentV2DirectoryCountriesGetRequest]) (*connect.Response[v1.ContentV2DirectoryCountriesGet200Response], error) {
	return c.contentV2DirectoryCountriesGet.CallUnary(ctx, req)
}

// ContentV2DirectoryKindsGet calls wb.content.v1.DefaultService.ContentV2DirectoryKindsGet.
func (c *defaultServiceClient) ContentV2DirectoryKindsGet(ctx context.Context, req *connect.Request[v1.ContentV2DirectoryKindsGetRequest]) (*connect.Response[v1.ContentV2DirectoryKindsGet200Response], error) {
	return c.contentV2DirectoryKindsGet.CallUnary(ctx, req)
}

// ContentV2DirectorySeasonsGet calls wb.content.v1.DefaultService.ContentV2DirectorySeasonsGet.
func (c *defaultServiceClient) ContentV2DirectorySeasonsGet(ctx context.Context, req *connect.Request[v1.ContentV2DirectorySeasonsGetRequest]) (*connect.Response[v1.ContentV2DirectorySeasonsGet200Response], error) {
	return c.contentV2DirectorySeasonsGet.CallUnary(ctx, req)
}

// ContentV2DirectoryTnvedGet calls wb.content.v1.DefaultService.ContentV2DirectoryTnvedGet.
func (c *defaultServiceClient) ContentV2DirectoryTnvedGet(ctx context.Context, req *connect.Request[v1.ContentV2DirectoryTnvedGetRequest]) (*connect.Response[v1.ContentV2DirectoryTnvedGet200Response], error) {
	return c.contentV2DirectoryTnvedGet.CallUnary(ctx, req)
}

// ContentV2DirectoryVatGet calls wb.content.v1.DefaultService.ContentV2DirectoryVatGet.
func (c *defaultServiceClient) ContentV2DirectoryVatGet(ctx context.Context, req *connect.Request[v1.ContentV2DirectoryVatGetRequest]) (*connect.Response[v1.ContentV2DirectoryVatGet200Response], error) {
	return c.contentV2DirectoryVatGet.CallUnary(ctx, req)
}

// ContentV2GetCardsListPost calls wb.content.v1.DefaultService.ContentV2GetCardsListPost.
func (c *defaultServiceClient) ContentV2GetCardsListPost(ctx context.Context, req *connect.Request[v1.ContentV2GetCardsListPostRequest]) (*connect.Response[v1.ContentV2GetCardsListPost200Response], error) {
	return c.contentV2GetCardsListPost.CallUnary(ctx, req)
}

// ContentV2GetCardsTrashPost calls wb.content.v1.DefaultService.ContentV2GetCardsTrashPost.
func (c *defaultServiceClient) ContentV2GetCardsTrashPost(ctx context.Context, req *connect.Request[v1.ContentV2GetCardsTrashPostRequest]) (*connect.Response[v1.ContentV2GetCardsTrashPost200Response], error) {
	return c.contentV2GetCardsTrashPost.CallUnary(ctx, req)
}

// ContentV2ObjectAllGet calls wb.content.v1.DefaultService.ContentV2ObjectAllGet.
func (c *defaultServiceClient) ContentV2ObjectAllGet(ctx context.Context, req *connect.Request[v1.ContentV2ObjectAllGetRequest]) (*connect.Response[v1.ContentV2ObjectAllGet200Response], error) {
	return c.contentV2ObjectAllGet.CallUnary(ctx, req)
}

// ContentV2ObjectCharcsSubjectIdGet calls
// wb.content.v1.DefaultService.ContentV2ObjectCharcsSubjectIdGet.
func (c *defaultServiceClient) ContentV2ObjectCharcsSubjectIdGet(ctx context.Context, req *connect.Request[v1.ContentV2ObjectCharcsSubjectIdGetRequest]) (*connect.Response[v1.ContentV2ObjectCharcsSubjectIdGet200Response], error) {
	return c.contentV2ObjectCharcsSubjectIdGet.CallUnary(ctx, req)
}

// ContentV2ObjectParentAllGet calls wb.content.v1.DefaultService.ContentV2ObjectParentAllGet.
func (c *defaultServiceClient) ContentV2ObjectParentAllGet(ctx context.Context, req *connect.Request[v1.ContentV2ObjectParentAllGetRequest]) (*connect.Response[v1.ContentV2ObjectParentAllGet200Response], error) {
	return c.contentV2ObjectParentAllGet.CallUnary(ctx, req)
}

// ContentV2TagIdDelete calls wb.content.v1.DefaultService.ContentV2TagIdDelete.
func (c *defaultServiceClient) ContentV2TagIdDelete(ctx context.Context, req *connect.Request[v1.ContentV2TagIdDeleteRequest]) (*connect.Response[v1.ContentV2TagIdDelete200Response], error) {
	return c.contentV2TagIdDelete.CallUnary(ctx, req)
}

// ContentV2TagIdPatch calls wb.content.v1.DefaultService.ContentV2TagIdPatch.
func (c *defaultServiceClient) ContentV2TagIdPatch(ctx context.Context, req *connect.Request[v1.ContentV2TagIdPatchRequest]) (*connect.Response[v1.ContentV2TagIdPatch200Response], error) {
	return c.contentV2TagIdPatch.CallUnary(ctx, req)
}

// ContentV2TagNomenclatureLinkPost calls
// wb.content.v1.DefaultService.ContentV2TagNomenclatureLinkPost.
func (c *defaultServiceClient) ContentV2TagNomenclatureLinkPost(ctx context.Context, req *connect.Request[v1.ContentV2TagNomenclatureLinkPostRequest]) (*connect.Response[v1.ResponseContentError6], error) {
	return c.contentV2TagNomenclatureLinkPost.CallUnary(ctx, req)
}

// ContentV2TagPost calls wb.content.v1.DefaultService.ContentV2TagPost.
func (c *defaultServiceClient) ContentV2TagPost(ctx context.Context, req *connect.Request[v1.ContentV2TagPostRequest]) (*connect.Response[v1.ResponseContentError6], error) {
	return c.contentV2TagPost.CallUnary(ctx, req)
}

// ContentV2TagsGet calls wb.content.v1.DefaultService.ContentV2TagsGet.
func (c *defaultServiceClient) ContentV2TagsGet(ctx context.Context, req *connect.Request[emptypb.Empty]) (*connect.Response[v1.ContentV2TagsGet200Response], error) {
	return c.contentV2TagsGet.CallUnary(ctx, req)
}

// ContentV3MediaFilePost calls wb.content.v1.DefaultService.ContentV3MediaFilePost.
func (c *defaultServiceClient) ContentV3MediaFilePost(ctx context.Context, req *connect.Request[v1.ContentV3MediaFilePostRequest]) (*connect.Response[v1.ContentV3MediaSavePost200Response], error) {
	return c.contentV3MediaFilePost.CallUnary(ctx, req)
}

// ContentV3MediaSavePost calls wb.content.v1.DefaultService.ContentV3MediaSavePost.
func (c *defaultServiceClient) ContentV3MediaSavePost(ctx context.Context, req *connect.Request[v1.ContentV3MediaSavePostRequest]) (*connect.Response[v1.ContentV3MediaSavePost200Response], error) {
	return c.contentV3MediaSavePost.CallUnary(ctx, req)
}

// DefaultServiceHandler is an implementation of the wb.content.v1.DefaultService service.
type DefaultServiceHandler interface {
	ContentV2BarcodesPost(context.Context, *connect.Request[v1.ContentV2BarcodesPostRequest]) (*connect.Response[v1.ContentV2BarcodesPost200Response], error)
	ContentV2CardsDeleteTrashPost(context.Context, *connect.Request[v1.ContentV2CardsDeleteTrashPostRequest]) (*connect.Response[v1.ContentV2CardsDeleteTrashPost200Response], error)
	ContentV2CardsErrorListGet(context.Context, *connect.Request[v1.ContentV2CardsErrorListGetRequest]) (*connect.Response[v1.ContentV2CardsErrorListGet200Response], error)
	ContentV2CardsLimitsGet(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.ContentV2CardsLimitsGet200Response], error)
	ContentV2CardsMoveNmPost(context.Context, *connect.Request[v1.ContentV2CardsMoveNmPostRequest]) (*connect.Response[v1.ResponseCardCreate], error)
	ContentV2CardsRecoverPost(context.Context, *connect.Request[v1.ContentV2CardsRecoverPostRequest]) (*connect.Response[v1.ContentV2CardsDeleteTrashPost200Response], error)
	ContentV2CardsUpdatePost(context.Context, *connect.Request[v1.ContentV2CardsUpdatePostRequest]) (*connect.Response[v1.ResponseCardCreate], error)
	ContentV2CardsUploadAddPost(context.Context, *connect.Request[v1.ContentV2CardsUploadAddPostRequest]) (*connect.Response[v1.ResponseCardCreate], error)
	ContentV2CardsUploadPost(context.Context, *connect.Request[v1.ContentV2CardsUploadPostRequest]) (*connect.Response[v1.ResponseCardCreate], error)
	ContentV2DirectoryColorsGet(context.Context, *connect.Request[v1.ContentV2DirectoryColorsGetRequest]) (*connect.Response[v1.ContentV2DirectoryColorsGet200Response], error)
	ContentV2DirectoryCountriesGet(context.Context, *connect.Request[v1.ContentV2DirectoryCountriesGetRequest]) (*connect.Response[v1.ContentV2DirectoryCountriesGet200Response], error)
	ContentV2DirectoryKindsGet(context.Context, *connect.Request[v1.ContentV2DirectoryKindsGetRequest]) (*connect.Response[v1.ContentV2DirectoryKindsGet200Response], error)
	ContentV2DirectorySeasonsGet(context.Context, *connect.Request[v1.ContentV2DirectorySeasonsGetRequest]) (*connect.Response[v1.ContentV2DirectorySeasonsGet200Response], error)
	ContentV2DirectoryTnvedGet(context.Context, *connect.Request[v1.ContentV2DirectoryTnvedGetRequest]) (*connect.Response[v1.ContentV2DirectoryTnvedGet200Response], error)
	ContentV2DirectoryVatGet(context.Context, *connect.Request[v1.ContentV2DirectoryVatGetRequest]) (*connect.Response[v1.ContentV2DirectoryVatGet200Response], error)
	ContentV2GetCardsListPost(context.Context, *connect.Request[v1.ContentV2GetCardsListPostRequest]) (*connect.Response[v1.ContentV2GetCardsListPost200Response], error)
	ContentV2GetCardsTrashPost(context.Context, *connect.Request[v1.ContentV2GetCardsTrashPostRequest]) (*connect.Response[v1.ContentV2GetCardsTrashPost200Response], error)
	ContentV2ObjectAllGet(context.Context, *connect.Request[v1.ContentV2ObjectAllGetRequest]) (*connect.Response[v1.ContentV2ObjectAllGet200Response], error)
	ContentV2ObjectCharcsSubjectIdGet(context.Context, *connect.Request[v1.ContentV2ObjectCharcsSubjectIdGetRequest]) (*connect.Response[v1.ContentV2ObjectCharcsSubjectIdGet200Response], error)
	ContentV2ObjectParentAllGet(context.Context, *connect.Request[v1.ContentV2ObjectParentAllGetRequest]) (*connect.Response[v1.ContentV2ObjectParentAllGet200Response], error)
	ContentV2TagIdDelete(context.Context, *connect.Request[v1.ContentV2TagIdDeleteRequest]) (*connect.Response[v1.ContentV2TagIdDelete200Response], error)
	ContentV2TagIdPatch(context.Context, *connect.Request[v1.ContentV2TagIdPatchRequest]) (*connect.Response[v1.ContentV2TagIdPatch200Response], error)
	ContentV2TagNomenclatureLinkPost(context.Context, *connect.Request[v1.ContentV2TagNomenclatureLinkPostRequest]) (*connect.Response[v1.ResponseContentError6], error)
	ContentV2TagPost(context.Context, *connect.Request[v1.ContentV2TagPostRequest]) (*connect.Response[v1.ResponseContentError6], error)
	ContentV2TagsGet(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.ContentV2TagsGet200Response], error)
	ContentV3MediaFilePost(context.Context, *connect.Request[v1.ContentV3MediaFilePostRequest]) (*connect.Response[v1.ContentV3MediaSavePost200Response], error)
	ContentV3MediaSavePost(context.Context, *connect.Request[v1.ContentV3MediaSavePostRequest]) (*connect.Response[v1.ContentV3MediaSavePost200Response], error)
}

// NewDefaultServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewDefaultServiceHandler(svc DefaultServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	defaultServiceContentV2BarcodesPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2BarcodesPostProcedure,
		svc.ContentV2BarcodesPost,
		connect.WithSchema(defaultServiceContentV2BarcodesPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2CardsDeleteTrashPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2CardsDeleteTrashPostProcedure,
		svc.ContentV2CardsDeleteTrashPost,
		connect.WithSchema(defaultServiceContentV2CardsDeleteTrashPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2CardsErrorListGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2CardsErrorListGetProcedure,
		svc.ContentV2CardsErrorListGet,
		connect.WithSchema(defaultServiceContentV2CardsErrorListGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2CardsLimitsGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2CardsLimitsGetProcedure,
		svc.ContentV2CardsLimitsGet,
		connect.WithSchema(defaultServiceContentV2CardsLimitsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2CardsMoveNmPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2CardsMoveNmPostProcedure,
		svc.ContentV2CardsMoveNmPost,
		connect.WithSchema(defaultServiceContentV2CardsMoveNmPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2CardsRecoverPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2CardsRecoverPostProcedure,
		svc.ContentV2CardsRecoverPost,
		connect.WithSchema(defaultServiceContentV2CardsRecoverPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2CardsUpdatePostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2CardsUpdatePostProcedure,
		svc.ContentV2CardsUpdatePost,
		connect.WithSchema(defaultServiceContentV2CardsUpdatePostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2CardsUploadAddPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2CardsUploadAddPostProcedure,
		svc.ContentV2CardsUploadAddPost,
		connect.WithSchema(defaultServiceContentV2CardsUploadAddPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2CardsUploadPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2CardsUploadPostProcedure,
		svc.ContentV2CardsUploadPost,
		connect.WithSchema(defaultServiceContentV2CardsUploadPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2DirectoryColorsGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2DirectoryColorsGetProcedure,
		svc.ContentV2DirectoryColorsGet,
		connect.WithSchema(defaultServiceContentV2DirectoryColorsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2DirectoryCountriesGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2DirectoryCountriesGetProcedure,
		svc.ContentV2DirectoryCountriesGet,
		connect.WithSchema(defaultServiceContentV2DirectoryCountriesGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2DirectoryKindsGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2DirectoryKindsGetProcedure,
		svc.ContentV2DirectoryKindsGet,
		connect.WithSchema(defaultServiceContentV2DirectoryKindsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2DirectorySeasonsGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2DirectorySeasonsGetProcedure,
		svc.ContentV2DirectorySeasonsGet,
		connect.WithSchema(defaultServiceContentV2DirectorySeasonsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2DirectoryTnvedGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2DirectoryTnvedGetProcedure,
		svc.ContentV2DirectoryTnvedGet,
		connect.WithSchema(defaultServiceContentV2DirectoryTnvedGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2DirectoryVatGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2DirectoryVatGetProcedure,
		svc.ContentV2DirectoryVatGet,
		connect.WithSchema(defaultServiceContentV2DirectoryVatGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2GetCardsListPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2GetCardsListPostProcedure,
		svc.ContentV2GetCardsListPost,
		connect.WithSchema(defaultServiceContentV2GetCardsListPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2GetCardsTrashPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2GetCardsTrashPostProcedure,
		svc.ContentV2GetCardsTrashPost,
		connect.WithSchema(defaultServiceContentV2GetCardsTrashPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2ObjectAllGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2ObjectAllGetProcedure,
		svc.ContentV2ObjectAllGet,
		connect.WithSchema(defaultServiceContentV2ObjectAllGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2ObjectCharcsSubjectIdGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2ObjectCharcsSubjectIdGetProcedure,
		svc.ContentV2ObjectCharcsSubjectIdGet,
		connect.WithSchema(defaultServiceContentV2ObjectCharcsSubjectIdGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2ObjectParentAllGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2ObjectParentAllGetProcedure,
		svc.ContentV2ObjectParentAllGet,
		connect.WithSchema(defaultServiceContentV2ObjectParentAllGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2TagIdDeleteHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2TagIdDeleteProcedure,
		svc.ContentV2TagIdDelete,
		connect.WithSchema(defaultServiceContentV2TagIdDeleteMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2TagIdPatchHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2TagIdPatchProcedure,
		svc.ContentV2TagIdPatch,
		connect.WithSchema(defaultServiceContentV2TagIdPatchMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2TagNomenclatureLinkPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2TagNomenclatureLinkPostProcedure,
		svc.ContentV2TagNomenclatureLinkPost,
		connect.WithSchema(defaultServiceContentV2TagNomenclatureLinkPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2TagPostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2TagPostProcedure,
		svc.ContentV2TagPost,
		connect.WithSchema(defaultServiceContentV2TagPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV2TagsGetHandler := connect.NewUnaryHandler(
		DefaultServiceContentV2TagsGetProcedure,
		svc.ContentV2TagsGet,
		connect.WithSchema(defaultServiceContentV2TagsGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV3MediaFilePostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV3MediaFilePostProcedure,
		svc.ContentV3MediaFilePost,
		connect.WithSchema(defaultServiceContentV3MediaFilePostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceContentV3MediaSavePostHandler := connect.NewUnaryHandler(
		DefaultServiceContentV3MediaSavePostProcedure,
		svc.ContentV3MediaSavePost,
		connect.WithSchema(defaultServiceContentV3MediaSavePostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/wb.content.v1.DefaultService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case DefaultServiceContentV2BarcodesPostProcedure:
			defaultServiceContentV2BarcodesPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2CardsDeleteTrashPostProcedure:
			defaultServiceContentV2CardsDeleteTrashPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2CardsErrorListGetProcedure:
			defaultServiceContentV2CardsErrorListGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2CardsLimitsGetProcedure:
			defaultServiceContentV2CardsLimitsGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2CardsMoveNmPostProcedure:
			defaultServiceContentV2CardsMoveNmPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2CardsRecoverPostProcedure:
			defaultServiceContentV2CardsRecoverPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2CardsUpdatePostProcedure:
			defaultServiceContentV2CardsUpdatePostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2CardsUploadAddPostProcedure:
			defaultServiceContentV2CardsUploadAddPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2CardsUploadPostProcedure:
			defaultServiceContentV2CardsUploadPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2DirectoryColorsGetProcedure:
			defaultServiceContentV2DirectoryColorsGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2DirectoryCountriesGetProcedure:
			defaultServiceContentV2DirectoryCountriesGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2DirectoryKindsGetProcedure:
			defaultServiceContentV2DirectoryKindsGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2DirectorySeasonsGetProcedure:
			defaultServiceContentV2DirectorySeasonsGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2DirectoryTnvedGetProcedure:
			defaultServiceContentV2DirectoryTnvedGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2DirectoryVatGetProcedure:
			defaultServiceContentV2DirectoryVatGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2GetCardsListPostProcedure:
			defaultServiceContentV2GetCardsListPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2GetCardsTrashPostProcedure:
			defaultServiceContentV2GetCardsTrashPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2ObjectAllGetProcedure:
			defaultServiceContentV2ObjectAllGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2ObjectCharcsSubjectIdGetProcedure:
			defaultServiceContentV2ObjectCharcsSubjectIdGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2ObjectParentAllGetProcedure:
			defaultServiceContentV2ObjectParentAllGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2TagIdDeleteProcedure:
			defaultServiceContentV2TagIdDeleteHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2TagIdPatchProcedure:
			defaultServiceContentV2TagIdPatchHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2TagNomenclatureLinkPostProcedure:
			defaultServiceContentV2TagNomenclatureLinkPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2TagPostProcedure:
			defaultServiceContentV2TagPostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV2TagsGetProcedure:
			defaultServiceContentV2TagsGetHandler.ServeHTTP(w, r)
		case DefaultServiceContentV3MediaFilePostProcedure:
			defaultServiceContentV3MediaFilePostHandler.ServeHTTP(w, r)
		case DefaultServiceContentV3MediaSavePostProcedure:
			defaultServiceContentV3MediaSavePostHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedDefaultServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedDefaultServiceHandler struct{}

func (UnimplementedDefaultServiceHandler) ContentV2BarcodesPost(context.Context, *connect.Request[v1.ContentV2BarcodesPostRequest]) (*connect.Response[v1.ContentV2BarcodesPost200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2BarcodesPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2CardsDeleteTrashPost(context.Context, *connect.Request[v1.ContentV2CardsDeleteTrashPostRequest]) (*connect.Response[v1.ContentV2CardsDeleteTrashPost200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2CardsDeleteTrashPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2CardsErrorListGet(context.Context, *connect.Request[v1.ContentV2CardsErrorListGetRequest]) (*connect.Response[v1.ContentV2CardsErrorListGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2CardsErrorListGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2CardsLimitsGet(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.ContentV2CardsLimitsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2CardsLimitsGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2CardsMoveNmPost(context.Context, *connect.Request[v1.ContentV2CardsMoveNmPostRequest]) (*connect.Response[v1.ResponseCardCreate], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2CardsMoveNmPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2CardsRecoverPost(context.Context, *connect.Request[v1.ContentV2CardsRecoverPostRequest]) (*connect.Response[v1.ContentV2CardsDeleteTrashPost200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2CardsRecoverPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2CardsUpdatePost(context.Context, *connect.Request[v1.ContentV2CardsUpdatePostRequest]) (*connect.Response[v1.ResponseCardCreate], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2CardsUpdatePost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2CardsUploadAddPost(context.Context, *connect.Request[v1.ContentV2CardsUploadAddPostRequest]) (*connect.Response[v1.ResponseCardCreate], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2CardsUploadAddPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2CardsUploadPost(context.Context, *connect.Request[v1.ContentV2CardsUploadPostRequest]) (*connect.Response[v1.ResponseCardCreate], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2CardsUploadPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2DirectoryColorsGet(context.Context, *connect.Request[v1.ContentV2DirectoryColorsGetRequest]) (*connect.Response[v1.ContentV2DirectoryColorsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2DirectoryColorsGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2DirectoryCountriesGet(context.Context, *connect.Request[v1.ContentV2DirectoryCountriesGetRequest]) (*connect.Response[v1.ContentV2DirectoryCountriesGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2DirectoryCountriesGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2DirectoryKindsGet(context.Context, *connect.Request[v1.ContentV2DirectoryKindsGetRequest]) (*connect.Response[v1.ContentV2DirectoryKindsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2DirectoryKindsGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2DirectorySeasonsGet(context.Context, *connect.Request[v1.ContentV2DirectorySeasonsGetRequest]) (*connect.Response[v1.ContentV2DirectorySeasonsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2DirectorySeasonsGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2DirectoryTnvedGet(context.Context, *connect.Request[v1.ContentV2DirectoryTnvedGetRequest]) (*connect.Response[v1.ContentV2DirectoryTnvedGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2DirectoryTnvedGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2DirectoryVatGet(context.Context, *connect.Request[v1.ContentV2DirectoryVatGetRequest]) (*connect.Response[v1.ContentV2DirectoryVatGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2DirectoryVatGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2GetCardsListPost(context.Context, *connect.Request[v1.ContentV2GetCardsListPostRequest]) (*connect.Response[v1.ContentV2GetCardsListPost200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2GetCardsListPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2GetCardsTrashPost(context.Context, *connect.Request[v1.ContentV2GetCardsTrashPostRequest]) (*connect.Response[v1.ContentV2GetCardsTrashPost200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2GetCardsTrashPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2ObjectAllGet(context.Context, *connect.Request[v1.ContentV2ObjectAllGetRequest]) (*connect.Response[v1.ContentV2ObjectAllGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2ObjectAllGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2ObjectCharcsSubjectIdGet(context.Context, *connect.Request[v1.ContentV2ObjectCharcsSubjectIdGetRequest]) (*connect.Response[v1.ContentV2ObjectCharcsSubjectIdGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2ObjectCharcsSubjectIdGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2ObjectParentAllGet(context.Context, *connect.Request[v1.ContentV2ObjectParentAllGetRequest]) (*connect.Response[v1.ContentV2ObjectParentAllGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2ObjectParentAllGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2TagIdDelete(context.Context, *connect.Request[v1.ContentV2TagIdDeleteRequest]) (*connect.Response[v1.ContentV2TagIdDelete200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2TagIdDelete is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2TagIdPatch(context.Context, *connect.Request[v1.ContentV2TagIdPatchRequest]) (*connect.Response[v1.ContentV2TagIdPatch200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2TagIdPatch is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2TagNomenclatureLinkPost(context.Context, *connect.Request[v1.ContentV2TagNomenclatureLinkPostRequest]) (*connect.Response[v1.ResponseContentError6], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2TagNomenclatureLinkPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2TagPost(context.Context, *connect.Request[v1.ContentV2TagPostRequest]) (*connect.Response[v1.ResponseContentError6], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2TagPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV2TagsGet(context.Context, *connect.Request[emptypb.Empty]) (*connect.Response[v1.ContentV2TagsGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV2TagsGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV3MediaFilePost(context.Context, *connect.Request[v1.ContentV3MediaFilePostRequest]) (*connect.Response[v1.ContentV3MediaSavePost200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV3MediaFilePost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ContentV3MediaSavePost(context.Context, *connect.Request[v1.ContentV3MediaSavePostRequest]) (*connect.Response[v1.ContentV3MediaSavePost200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.content.v1.DefaultService.ContentV3MediaSavePost is not implemented"))
}
