//
//Описание API Контента
//
//<dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code>
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: wb/content/v1/service.proto

package wbContent

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ContentService_ContentV2BarcodesPost_FullMethodName             = "/wb.content.v1.ContentService/ContentV2BarcodesPost"
	ContentService_ContentV2CardsDeleteTrashPost_FullMethodName     = "/wb.content.v1.ContentService/ContentV2CardsDeleteTrashPost"
	ContentService_ContentV2CardsErrorListGet_FullMethodName        = "/wb.content.v1.ContentService/ContentV2CardsErrorListGet"
	ContentService_ContentV2CardsLimitsGet_FullMethodName           = "/wb.content.v1.ContentService/ContentV2CardsLimitsGet"
	ContentService_ContentV2CardsMoveNmPost_FullMethodName          = "/wb.content.v1.ContentService/ContentV2CardsMoveNmPost"
	ContentService_ContentV2CardsRecoverPost_FullMethodName         = "/wb.content.v1.ContentService/ContentV2CardsRecoverPost"
	ContentService_ContentV2CardsUpdatePost_FullMethodName          = "/wb.content.v1.ContentService/ContentV2CardsUpdatePost"
	ContentService_ContentV2CardsUploadAddPost_FullMethodName       = "/wb.content.v1.ContentService/ContentV2CardsUploadAddPost"
	ContentService_ContentV2CardsUploadPost_FullMethodName          = "/wb.content.v1.ContentService/ContentV2CardsUploadPost"
	ContentService_ContentV2DirectoryColorsGet_FullMethodName       = "/wb.content.v1.ContentService/ContentV2DirectoryColorsGet"
	ContentService_ContentV2DirectoryCountriesGet_FullMethodName    = "/wb.content.v1.ContentService/ContentV2DirectoryCountriesGet"
	ContentService_ContentV2DirectoryKindsGet_FullMethodName        = "/wb.content.v1.ContentService/ContentV2DirectoryKindsGet"
	ContentService_ContentV2DirectorySeasonsGet_FullMethodName      = "/wb.content.v1.ContentService/ContentV2DirectorySeasonsGet"
	ContentService_ContentV2DirectoryTnvedGet_FullMethodName        = "/wb.content.v1.ContentService/ContentV2DirectoryTnvedGet"
	ContentService_ContentV2DirectoryVatGet_FullMethodName          = "/wb.content.v1.ContentService/ContentV2DirectoryVatGet"
	ContentService_ContentV2GetCardsListPost_FullMethodName         = "/wb.content.v1.ContentService/ContentV2GetCardsListPost"
	ContentService_ContentV2GetCardsTrashPost_FullMethodName        = "/wb.content.v1.ContentService/ContentV2GetCardsTrashPost"
	ContentService_ContentV2ObjectAllGet_FullMethodName             = "/wb.content.v1.ContentService/ContentV2ObjectAllGet"
	ContentService_ContentV2ObjectCharcsSubjectIdGet_FullMethodName = "/wb.content.v1.ContentService/ContentV2ObjectCharcsSubjectIdGet"
	ContentService_ContentV2ObjectParentAllGet_FullMethodName       = "/wb.content.v1.ContentService/ContentV2ObjectParentAllGet"
	ContentService_ContentV2TagIdDelete_FullMethodName              = "/wb.content.v1.ContentService/ContentV2TagIdDelete"
	ContentService_ContentV2TagIdPatch_FullMethodName               = "/wb.content.v1.ContentService/ContentV2TagIdPatch"
	ContentService_ContentV2TagNomenclatureLinkPost_FullMethodName  = "/wb.content.v1.ContentService/ContentV2TagNomenclatureLinkPost"
	ContentService_ContentV2TagPost_FullMethodName                  = "/wb.content.v1.ContentService/ContentV2TagPost"
	ContentService_ContentV2TagsGet_FullMethodName                  = "/wb.content.v1.ContentService/ContentV2TagsGet"
	ContentService_ContentV3MediaFilePost_FullMethodName            = "/wb.content.v1.ContentService/ContentV3MediaFilePost"
	ContentService_ContentV3MediaSavePost_FullMethodName            = "/wb.content.v1.ContentService/ContentV3MediaSavePost"
)

// ContentServiceClient is the client API for ContentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ContentServiceClient interface {
	ContentV2BarcodesPost(ctx context.Context, in *ContentV2BarcodesPostRequest, opts ...grpc.CallOption) (*ContentV2BarcodesPost200Response, error)
	ContentV2CardsDeleteTrashPost(ctx context.Context, in *ContentV2CardsDeleteTrashPostRequest, opts ...grpc.CallOption) (*ContentV2CardsDeleteTrashPost200Response, error)
	ContentV2CardsErrorListGet(ctx context.Context, in *ContentV2CardsErrorListGetRequest, opts ...grpc.CallOption) (*ContentV2CardsErrorListGet200Response, error)
	ContentV2CardsLimitsGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ContentV2CardsLimitsGet200Response, error)
	ContentV2CardsMoveNmPost(ctx context.Context, in *ContentV2CardsMoveNmPostRequest, opts ...grpc.CallOption) (*ResponseCardCreate, error)
	ContentV2CardsRecoverPost(ctx context.Context, in *ContentV2CardsRecoverPostRequest, opts ...grpc.CallOption) (*ContentV2CardsDeleteTrashPost200Response, error)
	ContentV2CardsUpdatePost(ctx context.Context, in *ContentV2CardsUpdatePostRequest, opts ...grpc.CallOption) (*ResponseCardCreate, error)
	ContentV2CardsUploadAddPost(ctx context.Context, in *ContentV2CardsUploadAddPostRequest, opts ...grpc.CallOption) (*ResponseCardCreate, error)
	ContentV2CardsUploadPost(ctx context.Context, in *ContentV2CardsUploadPostRequest, opts ...grpc.CallOption) (*ResponseCardCreate, error)
	ContentV2DirectoryColorsGet(ctx context.Context, in *ContentV2DirectoryColorsGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryColorsGet200Response, error)
	ContentV2DirectoryCountriesGet(ctx context.Context, in *ContentV2DirectoryCountriesGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryCountriesGet200Response, error)
	ContentV2DirectoryKindsGet(ctx context.Context, in *ContentV2DirectoryKindsGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryKindsGet200Response, error)
	ContentV2DirectorySeasonsGet(ctx context.Context, in *ContentV2DirectorySeasonsGetRequest, opts ...grpc.CallOption) (*ContentV2DirectorySeasonsGet200Response, error)
	ContentV2DirectoryTnvedGet(ctx context.Context, in *ContentV2DirectoryTnvedGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryTnvedGet200Response, error)
	ContentV2DirectoryVatGet(ctx context.Context, in *ContentV2DirectoryVatGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryVatGet200Response, error)
	ContentV2GetCardsListPost(ctx context.Context, in *ContentV2GetCardsListPostRequest, opts ...grpc.CallOption) (*ContentV2GetCardsListPost200Response, error)
	ContentV2GetCardsTrashPost(ctx context.Context, in *ContentV2GetCardsTrashPostRequest, opts ...grpc.CallOption) (*ContentV2GetCardsTrashPost200Response, error)
	ContentV2ObjectAllGet(ctx context.Context, in *ContentV2ObjectAllGetRequest, opts ...grpc.CallOption) (*ContentV2ObjectAllGet200Response, error)
	ContentV2ObjectCharcsSubjectIdGet(ctx context.Context, in *ContentV2ObjectCharcsSubjectIdGetRequest, opts ...grpc.CallOption) (*ContentV2ObjectCharcsSubjectIdGet200Response, error)
	ContentV2ObjectParentAllGet(ctx context.Context, in *ContentV2ObjectParentAllGetRequest, opts ...grpc.CallOption) (*ContentV2ObjectParentAllGet200Response, error)
	ContentV2TagIdDelete(ctx context.Context, in *ContentV2TagIdDeleteRequest, opts ...grpc.CallOption) (*ContentV2TagIdDelete200Response, error)
	ContentV2TagIdPatch(ctx context.Context, in *ContentV2TagIdPatchRequest, opts ...grpc.CallOption) (*ContentV2TagIdPatch200Response, error)
	ContentV2TagNomenclatureLinkPost(ctx context.Context, in *ContentV2TagNomenclatureLinkPostRequest, opts ...grpc.CallOption) (*ResponseContentError6, error)
	ContentV2TagPost(ctx context.Context, in *ContentV2TagPostRequest, opts ...grpc.CallOption) (*ResponseContentError6, error)
	ContentV2TagsGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ContentV2TagsGet200Response, error)
	ContentV3MediaFilePost(ctx context.Context, in *ContentV3MediaFilePostRequest, opts ...grpc.CallOption) (*ContentV3MediaSavePost200Response, error)
	ContentV3MediaSavePost(ctx context.Context, in *ContentV3MediaSavePostRequest, opts ...grpc.CallOption) (*ContentV3MediaSavePost200Response, error)
}

type contentServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewContentServiceClient(cc grpc.ClientConnInterface) ContentServiceClient {
	return &contentServiceClient{cc}
}

func (c *contentServiceClient) ContentV2BarcodesPost(ctx context.Context, in *ContentV2BarcodesPostRequest, opts ...grpc.CallOption) (*ContentV2BarcodesPost200Response, error) {
	out := new(ContentV2BarcodesPost200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2BarcodesPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2CardsDeleteTrashPost(ctx context.Context, in *ContentV2CardsDeleteTrashPostRequest, opts ...grpc.CallOption) (*ContentV2CardsDeleteTrashPost200Response, error) {
	out := new(ContentV2CardsDeleteTrashPost200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2CardsDeleteTrashPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2CardsErrorListGet(ctx context.Context, in *ContentV2CardsErrorListGetRequest, opts ...grpc.CallOption) (*ContentV2CardsErrorListGet200Response, error) {
	out := new(ContentV2CardsErrorListGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2CardsErrorListGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2CardsLimitsGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ContentV2CardsLimitsGet200Response, error) {
	out := new(ContentV2CardsLimitsGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2CardsLimitsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2CardsMoveNmPost(ctx context.Context, in *ContentV2CardsMoveNmPostRequest, opts ...grpc.CallOption) (*ResponseCardCreate, error) {
	out := new(ResponseCardCreate)
	err := c.cc.Invoke(ctx, ContentService_ContentV2CardsMoveNmPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2CardsRecoverPost(ctx context.Context, in *ContentV2CardsRecoverPostRequest, opts ...grpc.CallOption) (*ContentV2CardsDeleteTrashPost200Response, error) {
	out := new(ContentV2CardsDeleteTrashPost200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2CardsRecoverPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2CardsUpdatePost(ctx context.Context, in *ContentV2CardsUpdatePostRequest, opts ...grpc.CallOption) (*ResponseCardCreate, error) {
	out := new(ResponseCardCreate)
	err := c.cc.Invoke(ctx, ContentService_ContentV2CardsUpdatePost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2CardsUploadAddPost(ctx context.Context, in *ContentV2CardsUploadAddPostRequest, opts ...grpc.CallOption) (*ResponseCardCreate, error) {
	out := new(ResponseCardCreate)
	err := c.cc.Invoke(ctx, ContentService_ContentV2CardsUploadAddPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2CardsUploadPost(ctx context.Context, in *ContentV2CardsUploadPostRequest, opts ...grpc.CallOption) (*ResponseCardCreate, error) {
	out := new(ResponseCardCreate)
	err := c.cc.Invoke(ctx, ContentService_ContentV2CardsUploadPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2DirectoryColorsGet(ctx context.Context, in *ContentV2DirectoryColorsGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryColorsGet200Response, error) {
	out := new(ContentV2DirectoryColorsGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2DirectoryColorsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2DirectoryCountriesGet(ctx context.Context, in *ContentV2DirectoryCountriesGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryCountriesGet200Response, error) {
	out := new(ContentV2DirectoryCountriesGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2DirectoryCountriesGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2DirectoryKindsGet(ctx context.Context, in *ContentV2DirectoryKindsGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryKindsGet200Response, error) {
	out := new(ContentV2DirectoryKindsGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2DirectoryKindsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2DirectorySeasonsGet(ctx context.Context, in *ContentV2DirectorySeasonsGetRequest, opts ...grpc.CallOption) (*ContentV2DirectorySeasonsGet200Response, error) {
	out := new(ContentV2DirectorySeasonsGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2DirectorySeasonsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2DirectoryTnvedGet(ctx context.Context, in *ContentV2DirectoryTnvedGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryTnvedGet200Response, error) {
	out := new(ContentV2DirectoryTnvedGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2DirectoryTnvedGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2DirectoryVatGet(ctx context.Context, in *ContentV2DirectoryVatGetRequest, opts ...grpc.CallOption) (*ContentV2DirectoryVatGet200Response, error) {
	out := new(ContentV2DirectoryVatGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2DirectoryVatGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2GetCardsListPost(ctx context.Context, in *ContentV2GetCardsListPostRequest, opts ...grpc.CallOption) (*ContentV2GetCardsListPost200Response, error) {
	out := new(ContentV2GetCardsListPost200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2GetCardsListPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2GetCardsTrashPost(ctx context.Context, in *ContentV2GetCardsTrashPostRequest, opts ...grpc.CallOption) (*ContentV2GetCardsTrashPost200Response, error) {
	out := new(ContentV2GetCardsTrashPost200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2GetCardsTrashPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2ObjectAllGet(ctx context.Context, in *ContentV2ObjectAllGetRequest, opts ...grpc.CallOption) (*ContentV2ObjectAllGet200Response, error) {
	out := new(ContentV2ObjectAllGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2ObjectAllGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2ObjectCharcsSubjectIdGet(ctx context.Context, in *ContentV2ObjectCharcsSubjectIdGetRequest, opts ...grpc.CallOption) (*ContentV2ObjectCharcsSubjectIdGet200Response, error) {
	out := new(ContentV2ObjectCharcsSubjectIdGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2ObjectCharcsSubjectIdGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2ObjectParentAllGet(ctx context.Context, in *ContentV2ObjectParentAllGetRequest, opts ...grpc.CallOption) (*ContentV2ObjectParentAllGet200Response, error) {
	out := new(ContentV2ObjectParentAllGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2ObjectParentAllGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2TagIdDelete(ctx context.Context, in *ContentV2TagIdDeleteRequest, opts ...grpc.CallOption) (*ContentV2TagIdDelete200Response, error) {
	out := new(ContentV2TagIdDelete200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2TagIdDelete_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2TagIdPatch(ctx context.Context, in *ContentV2TagIdPatchRequest, opts ...grpc.CallOption) (*ContentV2TagIdPatch200Response, error) {
	out := new(ContentV2TagIdPatch200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2TagIdPatch_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2TagNomenclatureLinkPost(ctx context.Context, in *ContentV2TagNomenclatureLinkPostRequest, opts ...grpc.CallOption) (*ResponseContentError6, error) {
	out := new(ResponseContentError6)
	err := c.cc.Invoke(ctx, ContentService_ContentV2TagNomenclatureLinkPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2TagPost(ctx context.Context, in *ContentV2TagPostRequest, opts ...grpc.CallOption) (*ResponseContentError6, error) {
	out := new(ResponseContentError6)
	err := c.cc.Invoke(ctx, ContentService_ContentV2TagPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV2TagsGet(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*ContentV2TagsGet200Response, error) {
	out := new(ContentV2TagsGet200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV2TagsGet_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV3MediaFilePost(ctx context.Context, in *ContentV3MediaFilePostRequest, opts ...grpc.CallOption) (*ContentV3MediaSavePost200Response, error) {
	out := new(ContentV3MediaSavePost200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV3MediaFilePost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentServiceClient) ContentV3MediaSavePost(ctx context.Context, in *ContentV3MediaSavePostRequest, opts ...grpc.CallOption) (*ContentV3MediaSavePost200Response, error) {
	out := new(ContentV3MediaSavePost200Response)
	err := c.cc.Invoke(ctx, ContentService_ContentV3MediaSavePost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContentServiceServer is the server API for ContentService service.
// All implementations must embed UnimplementedContentServiceServer
// for forward compatibility
type ContentServiceServer interface {
	ContentV2BarcodesPost(context.Context, *ContentV2BarcodesPostRequest) (*ContentV2BarcodesPost200Response, error)
	ContentV2CardsDeleteTrashPost(context.Context, *ContentV2CardsDeleteTrashPostRequest) (*ContentV2CardsDeleteTrashPost200Response, error)
	ContentV2CardsErrorListGet(context.Context, *ContentV2CardsErrorListGetRequest) (*ContentV2CardsErrorListGet200Response, error)
	ContentV2CardsLimitsGet(context.Context, *emptypb.Empty) (*ContentV2CardsLimitsGet200Response, error)
	ContentV2CardsMoveNmPost(context.Context, *ContentV2CardsMoveNmPostRequest) (*ResponseCardCreate, error)
	ContentV2CardsRecoverPost(context.Context, *ContentV2CardsRecoverPostRequest) (*ContentV2CardsDeleteTrashPost200Response, error)
	ContentV2CardsUpdatePost(context.Context, *ContentV2CardsUpdatePostRequest) (*ResponseCardCreate, error)
	ContentV2CardsUploadAddPost(context.Context, *ContentV2CardsUploadAddPostRequest) (*ResponseCardCreate, error)
	ContentV2CardsUploadPost(context.Context, *ContentV2CardsUploadPostRequest) (*ResponseCardCreate, error)
	ContentV2DirectoryColorsGet(context.Context, *ContentV2DirectoryColorsGetRequest) (*ContentV2DirectoryColorsGet200Response, error)
	ContentV2DirectoryCountriesGet(context.Context, *ContentV2DirectoryCountriesGetRequest) (*ContentV2DirectoryCountriesGet200Response, error)
	ContentV2DirectoryKindsGet(context.Context, *ContentV2DirectoryKindsGetRequest) (*ContentV2DirectoryKindsGet200Response, error)
	ContentV2DirectorySeasonsGet(context.Context, *ContentV2DirectorySeasonsGetRequest) (*ContentV2DirectorySeasonsGet200Response, error)
	ContentV2DirectoryTnvedGet(context.Context, *ContentV2DirectoryTnvedGetRequest) (*ContentV2DirectoryTnvedGet200Response, error)
	ContentV2DirectoryVatGet(context.Context, *ContentV2DirectoryVatGetRequest) (*ContentV2DirectoryVatGet200Response, error)
	ContentV2GetCardsListPost(context.Context, *ContentV2GetCardsListPostRequest) (*ContentV2GetCardsListPost200Response, error)
	ContentV2GetCardsTrashPost(context.Context, *ContentV2GetCardsTrashPostRequest) (*ContentV2GetCardsTrashPost200Response, error)
	ContentV2ObjectAllGet(context.Context, *ContentV2ObjectAllGetRequest) (*ContentV2ObjectAllGet200Response, error)
	ContentV2ObjectCharcsSubjectIdGet(context.Context, *ContentV2ObjectCharcsSubjectIdGetRequest) (*ContentV2ObjectCharcsSubjectIdGet200Response, error)
	ContentV2ObjectParentAllGet(context.Context, *ContentV2ObjectParentAllGetRequest) (*ContentV2ObjectParentAllGet200Response, error)
	ContentV2TagIdDelete(context.Context, *ContentV2TagIdDeleteRequest) (*ContentV2TagIdDelete200Response, error)
	ContentV2TagIdPatch(context.Context, *ContentV2TagIdPatchRequest) (*ContentV2TagIdPatch200Response, error)
	ContentV2TagNomenclatureLinkPost(context.Context, *ContentV2TagNomenclatureLinkPostRequest) (*ResponseContentError6, error)
	ContentV2TagPost(context.Context, *ContentV2TagPostRequest) (*ResponseContentError6, error)
	ContentV2TagsGet(context.Context, *emptypb.Empty) (*ContentV2TagsGet200Response, error)
	ContentV3MediaFilePost(context.Context, *ContentV3MediaFilePostRequest) (*ContentV3MediaSavePost200Response, error)
	ContentV3MediaSavePost(context.Context, *ContentV3MediaSavePostRequest) (*ContentV3MediaSavePost200Response, error)
	mustEmbedUnimplementedContentServiceServer()
}

// UnimplementedContentServiceServer must be embedded to have forward compatible implementations.
type UnimplementedContentServiceServer struct {
}

func (UnimplementedContentServiceServer) ContentV2BarcodesPost(context.Context, *ContentV2BarcodesPostRequest) (*ContentV2BarcodesPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2BarcodesPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2CardsDeleteTrashPost(context.Context, *ContentV2CardsDeleteTrashPostRequest) (*ContentV2CardsDeleteTrashPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2CardsDeleteTrashPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2CardsErrorListGet(context.Context, *ContentV2CardsErrorListGetRequest) (*ContentV2CardsErrorListGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2CardsErrorListGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2CardsLimitsGet(context.Context, *emptypb.Empty) (*ContentV2CardsLimitsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2CardsLimitsGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2CardsMoveNmPost(context.Context, *ContentV2CardsMoveNmPostRequest) (*ResponseCardCreate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2CardsMoveNmPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2CardsRecoverPost(context.Context, *ContentV2CardsRecoverPostRequest) (*ContentV2CardsDeleteTrashPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2CardsRecoverPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2CardsUpdatePost(context.Context, *ContentV2CardsUpdatePostRequest) (*ResponseCardCreate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2CardsUpdatePost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2CardsUploadAddPost(context.Context, *ContentV2CardsUploadAddPostRequest) (*ResponseCardCreate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2CardsUploadAddPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2CardsUploadPost(context.Context, *ContentV2CardsUploadPostRequest) (*ResponseCardCreate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2CardsUploadPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2DirectoryColorsGet(context.Context, *ContentV2DirectoryColorsGetRequest) (*ContentV2DirectoryColorsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2DirectoryColorsGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2DirectoryCountriesGet(context.Context, *ContentV2DirectoryCountriesGetRequest) (*ContentV2DirectoryCountriesGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2DirectoryCountriesGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2DirectoryKindsGet(context.Context, *ContentV2DirectoryKindsGetRequest) (*ContentV2DirectoryKindsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2DirectoryKindsGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2DirectorySeasonsGet(context.Context, *ContentV2DirectorySeasonsGetRequest) (*ContentV2DirectorySeasonsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2DirectorySeasonsGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2DirectoryTnvedGet(context.Context, *ContentV2DirectoryTnvedGetRequest) (*ContentV2DirectoryTnvedGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2DirectoryTnvedGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2DirectoryVatGet(context.Context, *ContentV2DirectoryVatGetRequest) (*ContentV2DirectoryVatGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2DirectoryVatGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2GetCardsListPost(context.Context, *ContentV2GetCardsListPostRequest) (*ContentV2GetCardsListPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2GetCardsListPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2GetCardsTrashPost(context.Context, *ContentV2GetCardsTrashPostRequest) (*ContentV2GetCardsTrashPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2GetCardsTrashPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2ObjectAllGet(context.Context, *ContentV2ObjectAllGetRequest) (*ContentV2ObjectAllGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2ObjectAllGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2ObjectCharcsSubjectIdGet(context.Context, *ContentV2ObjectCharcsSubjectIdGetRequest) (*ContentV2ObjectCharcsSubjectIdGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2ObjectCharcsSubjectIdGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2ObjectParentAllGet(context.Context, *ContentV2ObjectParentAllGetRequest) (*ContentV2ObjectParentAllGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2ObjectParentAllGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV2TagIdDelete(context.Context, *ContentV2TagIdDeleteRequest) (*ContentV2TagIdDelete200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2TagIdDelete not implemented")
}
func (UnimplementedContentServiceServer) ContentV2TagIdPatch(context.Context, *ContentV2TagIdPatchRequest) (*ContentV2TagIdPatch200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2TagIdPatch not implemented")
}
func (UnimplementedContentServiceServer) ContentV2TagNomenclatureLinkPost(context.Context, *ContentV2TagNomenclatureLinkPostRequest) (*ResponseContentError6, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2TagNomenclatureLinkPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2TagPost(context.Context, *ContentV2TagPostRequest) (*ResponseContentError6, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2TagPost not implemented")
}
func (UnimplementedContentServiceServer) ContentV2TagsGet(context.Context, *emptypb.Empty) (*ContentV2TagsGet200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV2TagsGet not implemented")
}
func (UnimplementedContentServiceServer) ContentV3MediaFilePost(context.Context, *ContentV3MediaFilePostRequest) (*ContentV3MediaSavePost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV3MediaFilePost not implemented")
}
func (UnimplementedContentServiceServer) ContentV3MediaSavePost(context.Context, *ContentV3MediaSavePostRequest) (*ContentV3MediaSavePost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ContentV3MediaSavePost not implemented")
}
func (UnimplementedContentServiceServer) mustEmbedUnimplementedContentServiceServer() {}

// UnsafeContentServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ContentServiceServer will
// result in compilation errors.
type UnsafeContentServiceServer interface {
	mustEmbedUnimplementedContentServiceServer()
}

func RegisterContentServiceServer(s grpc.ServiceRegistrar, srv ContentServiceServer) {
	s.RegisterService(&ContentService_ServiceDesc, srv)
}

func _ContentService_ContentV2BarcodesPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2BarcodesPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2BarcodesPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2BarcodesPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2BarcodesPost(ctx, req.(*ContentV2BarcodesPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2CardsDeleteTrashPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2CardsDeleteTrashPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2CardsDeleteTrashPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2CardsDeleteTrashPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2CardsDeleteTrashPost(ctx, req.(*ContentV2CardsDeleteTrashPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2CardsErrorListGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2CardsErrorListGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2CardsErrorListGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2CardsErrorListGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2CardsErrorListGet(ctx, req.(*ContentV2CardsErrorListGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2CardsLimitsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2CardsLimitsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2CardsLimitsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2CardsLimitsGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2CardsMoveNmPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2CardsMoveNmPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2CardsMoveNmPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2CardsMoveNmPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2CardsMoveNmPost(ctx, req.(*ContentV2CardsMoveNmPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2CardsRecoverPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2CardsRecoverPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2CardsRecoverPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2CardsRecoverPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2CardsRecoverPost(ctx, req.(*ContentV2CardsRecoverPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2CardsUpdatePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2CardsUpdatePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2CardsUpdatePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2CardsUpdatePost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2CardsUpdatePost(ctx, req.(*ContentV2CardsUpdatePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2CardsUploadAddPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2CardsUploadAddPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2CardsUploadAddPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2CardsUploadAddPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2CardsUploadAddPost(ctx, req.(*ContentV2CardsUploadAddPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2CardsUploadPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2CardsUploadPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2CardsUploadPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2CardsUploadPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2CardsUploadPost(ctx, req.(*ContentV2CardsUploadPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2DirectoryColorsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2DirectoryColorsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2DirectoryColorsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2DirectoryColorsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2DirectoryColorsGet(ctx, req.(*ContentV2DirectoryColorsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2DirectoryCountriesGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2DirectoryCountriesGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2DirectoryCountriesGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2DirectoryCountriesGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2DirectoryCountriesGet(ctx, req.(*ContentV2DirectoryCountriesGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2DirectoryKindsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2DirectoryKindsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2DirectoryKindsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2DirectoryKindsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2DirectoryKindsGet(ctx, req.(*ContentV2DirectoryKindsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2DirectorySeasonsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2DirectorySeasonsGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2DirectorySeasonsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2DirectorySeasonsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2DirectorySeasonsGet(ctx, req.(*ContentV2DirectorySeasonsGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2DirectoryTnvedGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2DirectoryTnvedGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2DirectoryTnvedGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2DirectoryTnvedGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2DirectoryTnvedGet(ctx, req.(*ContentV2DirectoryTnvedGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2DirectoryVatGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2DirectoryVatGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2DirectoryVatGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2DirectoryVatGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2DirectoryVatGet(ctx, req.(*ContentV2DirectoryVatGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2GetCardsListPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2GetCardsListPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2GetCardsListPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2GetCardsListPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2GetCardsListPost(ctx, req.(*ContentV2GetCardsListPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2GetCardsTrashPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2GetCardsTrashPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2GetCardsTrashPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2GetCardsTrashPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2GetCardsTrashPost(ctx, req.(*ContentV2GetCardsTrashPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2ObjectAllGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2ObjectAllGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2ObjectAllGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2ObjectAllGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2ObjectAllGet(ctx, req.(*ContentV2ObjectAllGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2ObjectCharcsSubjectIdGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2ObjectCharcsSubjectIdGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2ObjectCharcsSubjectIdGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2ObjectCharcsSubjectIdGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2ObjectCharcsSubjectIdGet(ctx, req.(*ContentV2ObjectCharcsSubjectIdGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2ObjectParentAllGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2ObjectParentAllGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2ObjectParentAllGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2ObjectParentAllGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2ObjectParentAllGet(ctx, req.(*ContentV2ObjectParentAllGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2TagIdDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2TagIdDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2TagIdDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2TagIdDelete_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2TagIdDelete(ctx, req.(*ContentV2TagIdDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2TagIdPatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2TagIdPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2TagIdPatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2TagIdPatch_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2TagIdPatch(ctx, req.(*ContentV2TagIdPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2TagNomenclatureLinkPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2TagNomenclatureLinkPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2TagNomenclatureLinkPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2TagNomenclatureLinkPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2TagNomenclatureLinkPost(ctx, req.(*ContentV2TagNomenclatureLinkPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2TagPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV2TagPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2TagPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2TagPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2TagPost(ctx, req.(*ContentV2TagPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV2TagsGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV2TagsGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV2TagsGet_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV2TagsGet(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV3MediaFilePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV3MediaFilePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV3MediaFilePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV3MediaFilePost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV3MediaFilePost(ctx, req.(*ContentV3MediaFilePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentService_ContentV3MediaSavePost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentV3MediaSavePostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentServiceServer).ContentV3MediaSavePost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ContentService_ContentV3MediaSavePost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentServiceServer).ContentV3MediaSavePost(ctx, req.(*ContentV3MediaSavePostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ContentService_ServiceDesc is the grpc.ServiceDesc for ContentService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ContentService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "wb.content.v1.ContentService",
	HandlerType: (*ContentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ContentV2BarcodesPost",
			Handler:    _ContentService_ContentV2BarcodesPost_Handler,
		},
		{
			MethodName: "ContentV2CardsDeleteTrashPost",
			Handler:    _ContentService_ContentV2CardsDeleteTrashPost_Handler,
		},
		{
			MethodName: "ContentV2CardsErrorListGet",
			Handler:    _ContentService_ContentV2CardsErrorListGet_Handler,
		},
		{
			MethodName: "ContentV2CardsLimitsGet",
			Handler:    _ContentService_ContentV2CardsLimitsGet_Handler,
		},
		{
			MethodName: "ContentV2CardsMoveNmPost",
			Handler:    _ContentService_ContentV2CardsMoveNmPost_Handler,
		},
		{
			MethodName: "ContentV2CardsRecoverPost",
			Handler:    _ContentService_ContentV2CardsRecoverPost_Handler,
		},
		{
			MethodName: "ContentV2CardsUpdatePost",
			Handler:    _ContentService_ContentV2CardsUpdatePost_Handler,
		},
		{
			MethodName: "ContentV2CardsUploadAddPost",
			Handler:    _ContentService_ContentV2CardsUploadAddPost_Handler,
		},
		{
			MethodName: "ContentV2CardsUploadPost",
			Handler:    _ContentService_ContentV2CardsUploadPost_Handler,
		},
		{
			MethodName: "ContentV2DirectoryColorsGet",
			Handler:    _ContentService_ContentV2DirectoryColorsGet_Handler,
		},
		{
			MethodName: "ContentV2DirectoryCountriesGet",
			Handler:    _ContentService_ContentV2DirectoryCountriesGet_Handler,
		},
		{
			MethodName: "ContentV2DirectoryKindsGet",
			Handler:    _ContentService_ContentV2DirectoryKindsGet_Handler,
		},
		{
			MethodName: "ContentV2DirectorySeasonsGet",
			Handler:    _ContentService_ContentV2DirectorySeasonsGet_Handler,
		},
		{
			MethodName: "ContentV2DirectoryTnvedGet",
			Handler:    _ContentService_ContentV2DirectoryTnvedGet_Handler,
		},
		{
			MethodName: "ContentV2DirectoryVatGet",
			Handler:    _ContentService_ContentV2DirectoryVatGet_Handler,
		},
		{
			MethodName: "ContentV2GetCardsListPost",
			Handler:    _ContentService_ContentV2GetCardsListPost_Handler,
		},
		{
			MethodName: "ContentV2GetCardsTrashPost",
			Handler:    _ContentService_ContentV2GetCardsTrashPost_Handler,
		},
		{
			MethodName: "ContentV2ObjectAllGet",
			Handler:    _ContentService_ContentV2ObjectAllGet_Handler,
		},
		{
			MethodName: "ContentV2ObjectCharcsSubjectIdGet",
			Handler:    _ContentService_ContentV2ObjectCharcsSubjectIdGet_Handler,
		},
		{
			MethodName: "ContentV2ObjectParentAllGet",
			Handler:    _ContentService_ContentV2ObjectParentAllGet_Handler,
		},
		{
			MethodName: "ContentV2TagIdDelete",
			Handler:    _ContentService_ContentV2TagIdDelete_Handler,
		},
		{
			MethodName: "ContentV2TagIdPatch",
			Handler:    _ContentService_ContentV2TagIdPatch_Handler,
		},
		{
			MethodName: "ContentV2TagNomenclatureLinkPost",
			Handler:    _ContentService_ContentV2TagNomenclatureLinkPost_Handler,
		},
		{
			MethodName: "ContentV2TagPost",
			Handler:    _ContentService_ContentV2TagPost_Handler,
		},
		{
			MethodName: "ContentV2TagsGet",
			Handler:    _ContentService_ContentV2TagsGet_Handler,
		},
		{
			MethodName: "ContentV3MediaFilePost",
			Handler:    _ContentService_ContentV3MediaFilePost_Handler,
		},
		{
			MethodName: "ContentV3MediaSavePost",
			Handler:    _ContentService_ContentV3MediaSavePost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wb/content/v1/service.proto",
}
