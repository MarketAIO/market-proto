//
//Описание API Рекомендаций
//
//No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: wb/recommendations/v1/_service.proto

package wbRECOMMENDATIONS

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DefaultService_ApiV1DelPost_FullMethodName  = "/wb.recommendations.v1.DefaultService/ApiV1DelPost"
	DefaultService_ApiV1InsPost_FullMethodName  = "/wb.recommendations.v1.DefaultService/ApiV1InsPost"
	DefaultService_ApiV1ListPost_FullMethodName = "/wb.recommendations.v1.DefaultService/ApiV1ListPost"
	DefaultService_ApiV1SetPost_FullMethodName  = "/wb.recommendations.v1.DefaultService/ApiV1SetPost"
)

// DefaultServiceClient is the client API for DefaultService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DefaultServiceClient interface {
	ApiV1DelPost(ctx context.Context, in *ApiV1DelPostRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV1InsPost(ctx context.Context, in *ApiV1InsPostRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ApiV1ListPost(ctx context.Context, in *ApiV1ListPostRequest, opts ...grpc.CallOption) (*ApiV1ListPost200Response, error)
	ApiV1SetPost(ctx context.Context, in *ApiV1SetPostRequest, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type defaultServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDefaultServiceClient(cc grpc.ClientConnInterface) DefaultServiceClient {
	return &defaultServiceClient{cc}
}

func (c *defaultServiceClient) ApiV1DelPost(ctx context.Context, in *ApiV1DelPostRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1DelPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1InsPost(ctx context.Context, in *ApiV1InsPostRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1InsPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1ListPost(ctx context.Context, in *ApiV1ListPostRequest, opts ...grpc.CallOption) (*ApiV1ListPost200Response, error) {
	out := new(ApiV1ListPost200Response)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1ListPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *defaultServiceClient) ApiV1SetPost(ctx context.Context, in *ApiV1SetPostRequest, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, DefaultService_ApiV1SetPost_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DefaultServiceServer is the server API for DefaultService service.
// All implementations must embed UnimplementedDefaultServiceServer
// for forward compatibility
type DefaultServiceServer interface {
	ApiV1DelPost(context.Context, *ApiV1DelPostRequest) (*emptypb.Empty, error)
	ApiV1InsPost(context.Context, *ApiV1InsPostRequest) (*emptypb.Empty, error)
	ApiV1ListPost(context.Context, *ApiV1ListPostRequest) (*ApiV1ListPost200Response, error)
	ApiV1SetPost(context.Context, *ApiV1SetPostRequest) (*emptypb.Empty, error)
	mustEmbedUnimplementedDefaultServiceServer()
}

// UnimplementedDefaultServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDefaultServiceServer struct {
}

func (UnimplementedDefaultServiceServer) ApiV1DelPost(context.Context, *ApiV1DelPostRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1DelPost not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1InsPost(context.Context, *ApiV1InsPostRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1InsPost not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1ListPost(context.Context, *ApiV1ListPostRequest) (*ApiV1ListPost200Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1ListPost not implemented")
}
func (UnimplementedDefaultServiceServer) ApiV1SetPost(context.Context, *ApiV1SetPostRequest) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApiV1SetPost not implemented")
}
func (UnimplementedDefaultServiceServer) mustEmbedUnimplementedDefaultServiceServer() {}

// UnsafeDefaultServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DefaultServiceServer will
// result in compilation errors.
type UnsafeDefaultServiceServer interface {
	mustEmbedUnimplementedDefaultServiceServer()
}

func RegisterDefaultServiceServer(s grpc.ServiceRegistrar, srv DefaultServiceServer) {
	s.RegisterService(&DefaultService_ServiceDesc, srv)
}

func _DefaultService_ApiV1DelPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1DelPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1DelPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1DelPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1DelPost(ctx, req.(*ApiV1DelPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1InsPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1InsPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1InsPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1InsPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1InsPost(ctx, req.(*ApiV1InsPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1ListPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1ListPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1ListPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1ListPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1ListPost(ctx, req.(*ApiV1ListPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefaultService_ApiV1SetPost_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApiV1SetPostRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefaultServiceServer).ApiV1SetPost(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DefaultService_ApiV1SetPost_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefaultServiceServer).ApiV1SetPost(ctx, req.(*ApiV1SetPostRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DefaultService_ServiceDesc is the grpc.ServiceDesc for DefaultService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DefaultService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "wb.recommendations.v1.DefaultService",
	HandlerType: (*DefaultServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApiV1DelPost",
			Handler:    _DefaultService_ApiV1DelPost_Handler,
		},
		{
			MethodName: "ApiV1InsPost",
			Handler:    _DefaultService_ApiV1InsPost_Handler,
		},
		{
			MethodName: "ApiV1ListPost",
			Handler:    _DefaultService_ApiV1ListPost_Handler,
		},
		{
			MethodName: "ApiV1SetPost",
			Handler:    _DefaultService_ApiV1SetPost_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wb/recommendations/v1/_service.proto",
}
