//
//API цен и скидок
//
//С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов.
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: wb/prices/v1/service.proto

package wbPricesconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/MarketAIO/market-proto/gen/go/wb/prices/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// PricesServiceName is the fully-qualified name of the PricesService service.
	PricesServiceName = "wb.prices.v1.PricesService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// PricesServiceApiV2BufferGoodsTaskGetProcedure is the fully-qualified name of the PricesService's
	// ApiV2BufferGoodsTaskGet RPC.
	PricesServiceApiV2BufferGoodsTaskGetProcedure = "/wb.prices.v1.PricesService/ApiV2BufferGoodsTaskGet"
	// PricesServiceApiV2BufferTasksGetProcedure is the fully-qualified name of the PricesService's
	// ApiV2BufferTasksGet RPC.
	PricesServiceApiV2BufferTasksGetProcedure = "/wb.prices.v1.PricesService/ApiV2BufferTasksGet"
	// PricesServiceApiV2HistoryGoodsTaskGetProcedure is the fully-qualified name of the PricesService's
	// ApiV2HistoryGoodsTaskGet RPC.
	PricesServiceApiV2HistoryGoodsTaskGetProcedure = "/wb.prices.v1.PricesService/ApiV2HistoryGoodsTaskGet"
	// PricesServiceApiV2HistoryTasksGetProcedure is the fully-qualified name of the PricesService's
	// ApiV2HistoryTasksGet RPC.
	PricesServiceApiV2HistoryTasksGetProcedure = "/wb.prices.v1.PricesService/ApiV2HistoryTasksGet"
	// PricesServiceApiV2ListGoodsFilterGetProcedure is the fully-qualified name of the PricesService's
	// ApiV2ListGoodsFilterGet RPC.
	PricesServiceApiV2ListGoodsFilterGetProcedure = "/wb.prices.v1.PricesService/ApiV2ListGoodsFilterGet"
	// PricesServiceApiV2ListGoodsSizeNmGetProcedure is the fully-qualified name of the PricesService's
	// ApiV2ListGoodsSizeNmGet RPC.
	PricesServiceApiV2ListGoodsSizeNmGetProcedure = "/wb.prices.v1.PricesService/ApiV2ListGoodsSizeNmGet"
	// PricesServiceApiV2UploadTaskPostProcedure is the fully-qualified name of the PricesService's
	// ApiV2UploadTaskPost RPC.
	PricesServiceApiV2UploadTaskPostProcedure = "/wb.prices.v1.PricesService/ApiV2UploadTaskPost"
	// PricesServiceApiV2UploadTaskSizePostProcedure is the fully-qualified name of the PricesService's
	// ApiV2UploadTaskSizePost RPC.
	PricesServiceApiV2UploadTaskSizePostProcedure = "/wb.prices.v1.PricesService/ApiV2UploadTaskSizePost"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	pricesServiceServiceDescriptor                        = v1.File_wb_prices_v1_service_proto.Services().ByName("PricesService")
	pricesServiceApiV2BufferGoodsTaskGetMethodDescriptor  = pricesServiceServiceDescriptor.Methods().ByName("ApiV2BufferGoodsTaskGet")
	pricesServiceApiV2BufferTasksGetMethodDescriptor      = pricesServiceServiceDescriptor.Methods().ByName("ApiV2BufferTasksGet")
	pricesServiceApiV2HistoryGoodsTaskGetMethodDescriptor = pricesServiceServiceDescriptor.Methods().ByName("ApiV2HistoryGoodsTaskGet")
	pricesServiceApiV2HistoryTasksGetMethodDescriptor     = pricesServiceServiceDescriptor.Methods().ByName("ApiV2HistoryTasksGet")
	pricesServiceApiV2ListGoodsFilterGetMethodDescriptor  = pricesServiceServiceDescriptor.Methods().ByName("ApiV2ListGoodsFilterGet")
	pricesServiceApiV2ListGoodsSizeNmGetMethodDescriptor  = pricesServiceServiceDescriptor.Methods().ByName("ApiV2ListGoodsSizeNmGet")
	pricesServiceApiV2UploadTaskPostMethodDescriptor      = pricesServiceServiceDescriptor.Methods().ByName("ApiV2UploadTaskPost")
	pricesServiceApiV2UploadTaskSizePostMethodDescriptor  = pricesServiceServiceDescriptor.Methods().ByName("ApiV2UploadTaskSizePost")
)

// PricesServiceClient is a client for the wb.prices.v1.PricesService service.
type PricesServiceClient interface {
	ApiV2BufferGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2BufferGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2BufferGoodsTaskGet200Response], error)
	ApiV2BufferTasksGet(context.Context, *connect.Request[v1.ApiV2BufferTasksGetRequest]) (*connect.Response[v1.ApiV2BufferTasksGet200Response], error)
	ApiV2HistoryGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2HistoryGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2HistoryGoodsTaskGet200Response], error)
	ApiV2HistoryTasksGet(context.Context, *connect.Request[v1.ApiV2HistoryTasksGetRequest]) (*connect.Response[v1.ApiV2HistoryTasksGet200Response], error)
	ApiV2ListGoodsFilterGet(context.Context, *connect.Request[v1.ApiV2ListGoodsFilterGetRequest]) (*connect.Response[v1.ApiV2ListGoodsFilterGet200Response], error)
	ApiV2ListGoodsSizeNmGet(context.Context, *connect.Request[v1.ApiV2ListGoodsSizeNmGetRequest]) (*connect.Response[v1.ApiV2ListGoodsSizeNmGet200Response], error)
	ApiV2UploadTaskPost(context.Context, *connect.Request[v1.ApiV2UploadTaskPostRequest]) (*connect.Response[v1.TaskCreated], error)
	ApiV2UploadTaskSizePost(context.Context, *connect.Request[v1.ApiV2UploadTaskSizePostRequest]) (*connect.Response[v1.TaskCreated], error)
}

// NewPricesServiceClient constructs a client for the wb.prices.v1.PricesService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewPricesServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) PricesServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &pricesServiceClient{
		apiV2BufferGoodsTaskGet: connect.NewClient[v1.ApiV2BufferGoodsTaskGetRequest, v1.ApiV2BufferGoodsTaskGet200Response](
			httpClient,
			baseURL+PricesServiceApiV2BufferGoodsTaskGetProcedure,
			connect.WithSchema(pricesServiceApiV2BufferGoodsTaskGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2BufferTasksGet: connect.NewClient[v1.ApiV2BufferTasksGetRequest, v1.ApiV2BufferTasksGet200Response](
			httpClient,
			baseURL+PricesServiceApiV2BufferTasksGetProcedure,
			connect.WithSchema(pricesServiceApiV2BufferTasksGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2HistoryGoodsTaskGet: connect.NewClient[v1.ApiV2HistoryGoodsTaskGetRequest, v1.ApiV2HistoryGoodsTaskGet200Response](
			httpClient,
			baseURL+PricesServiceApiV2HistoryGoodsTaskGetProcedure,
			connect.WithSchema(pricesServiceApiV2HistoryGoodsTaskGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2HistoryTasksGet: connect.NewClient[v1.ApiV2HistoryTasksGetRequest, v1.ApiV2HistoryTasksGet200Response](
			httpClient,
			baseURL+PricesServiceApiV2HistoryTasksGetProcedure,
			connect.WithSchema(pricesServiceApiV2HistoryTasksGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2ListGoodsFilterGet: connect.NewClient[v1.ApiV2ListGoodsFilterGetRequest, v1.ApiV2ListGoodsFilterGet200Response](
			httpClient,
			baseURL+PricesServiceApiV2ListGoodsFilterGetProcedure,
			connect.WithSchema(pricesServiceApiV2ListGoodsFilterGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2ListGoodsSizeNmGet: connect.NewClient[v1.ApiV2ListGoodsSizeNmGetRequest, v1.ApiV2ListGoodsSizeNmGet200Response](
			httpClient,
			baseURL+PricesServiceApiV2ListGoodsSizeNmGetProcedure,
			connect.WithSchema(pricesServiceApiV2ListGoodsSizeNmGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2UploadTaskPost: connect.NewClient[v1.ApiV2UploadTaskPostRequest, v1.TaskCreated](
			httpClient,
			baseURL+PricesServiceApiV2UploadTaskPostProcedure,
			connect.WithSchema(pricesServiceApiV2UploadTaskPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2UploadTaskSizePost: connect.NewClient[v1.ApiV2UploadTaskSizePostRequest, v1.TaskCreated](
			httpClient,
			baseURL+PricesServiceApiV2UploadTaskSizePostProcedure,
			connect.WithSchema(pricesServiceApiV2UploadTaskSizePostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// pricesServiceClient implements PricesServiceClient.
type pricesServiceClient struct {
	apiV2BufferGoodsTaskGet  *connect.Client[v1.ApiV2BufferGoodsTaskGetRequest, v1.ApiV2BufferGoodsTaskGet200Response]
	apiV2BufferTasksGet      *connect.Client[v1.ApiV2BufferTasksGetRequest, v1.ApiV2BufferTasksGet200Response]
	apiV2HistoryGoodsTaskGet *connect.Client[v1.ApiV2HistoryGoodsTaskGetRequest, v1.ApiV2HistoryGoodsTaskGet200Response]
	apiV2HistoryTasksGet     *connect.Client[v1.ApiV2HistoryTasksGetRequest, v1.ApiV2HistoryTasksGet200Response]
	apiV2ListGoodsFilterGet  *connect.Client[v1.ApiV2ListGoodsFilterGetRequest, v1.ApiV2ListGoodsFilterGet200Response]
	apiV2ListGoodsSizeNmGet  *connect.Client[v1.ApiV2ListGoodsSizeNmGetRequest, v1.ApiV2ListGoodsSizeNmGet200Response]
	apiV2UploadTaskPost      *connect.Client[v1.ApiV2UploadTaskPostRequest, v1.TaskCreated]
	apiV2UploadTaskSizePost  *connect.Client[v1.ApiV2UploadTaskSizePostRequest, v1.TaskCreated]
}

// ApiV2BufferGoodsTaskGet calls wb.prices.v1.PricesService.ApiV2BufferGoodsTaskGet.
func (c *pricesServiceClient) ApiV2BufferGoodsTaskGet(ctx context.Context, req *connect.Request[v1.ApiV2BufferGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2BufferGoodsTaskGet200Response], error) {
	return c.apiV2BufferGoodsTaskGet.CallUnary(ctx, req)
}

// ApiV2BufferTasksGet calls wb.prices.v1.PricesService.ApiV2BufferTasksGet.
func (c *pricesServiceClient) ApiV2BufferTasksGet(ctx context.Context, req *connect.Request[v1.ApiV2BufferTasksGetRequest]) (*connect.Response[v1.ApiV2BufferTasksGet200Response], error) {
	return c.apiV2BufferTasksGet.CallUnary(ctx, req)
}

// ApiV2HistoryGoodsTaskGet calls wb.prices.v1.PricesService.ApiV2HistoryGoodsTaskGet.
func (c *pricesServiceClient) ApiV2HistoryGoodsTaskGet(ctx context.Context, req *connect.Request[v1.ApiV2HistoryGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2HistoryGoodsTaskGet200Response], error) {
	return c.apiV2HistoryGoodsTaskGet.CallUnary(ctx, req)
}

// ApiV2HistoryTasksGet calls wb.prices.v1.PricesService.ApiV2HistoryTasksGet.
func (c *pricesServiceClient) ApiV2HistoryTasksGet(ctx context.Context, req *connect.Request[v1.ApiV2HistoryTasksGetRequest]) (*connect.Response[v1.ApiV2HistoryTasksGet200Response], error) {
	return c.apiV2HistoryTasksGet.CallUnary(ctx, req)
}

// ApiV2ListGoodsFilterGet calls wb.prices.v1.PricesService.ApiV2ListGoodsFilterGet.
func (c *pricesServiceClient) ApiV2ListGoodsFilterGet(ctx context.Context, req *connect.Request[v1.ApiV2ListGoodsFilterGetRequest]) (*connect.Response[v1.ApiV2ListGoodsFilterGet200Response], error) {
	return c.apiV2ListGoodsFilterGet.CallUnary(ctx, req)
}

// ApiV2ListGoodsSizeNmGet calls wb.prices.v1.PricesService.ApiV2ListGoodsSizeNmGet.
func (c *pricesServiceClient) ApiV2ListGoodsSizeNmGet(ctx context.Context, req *connect.Request[v1.ApiV2ListGoodsSizeNmGetRequest]) (*connect.Response[v1.ApiV2ListGoodsSizeNmGet200Response], error) {
	return c.apiV2ListGoodsSizeNmGet.CallUnary(ctx, req)
}

// ApiV2UploadTaskPost calls wb.prices.v1.PricesService.ApiV2UploadTaskPost.
func (c *pricesServiceClient) ApiV2UploadTaskPost(ctx context.Context, req *connect.Request[v1.ApiV2UploadTaskPostRequest]) (*connect.Response[v1.TaskCreated], error) {
	return c.apiV2UploadTaskPost.CallUnary(ctx, req)
}

// ApiV2UploadTaskSizePost calls wb.prices.v1.PricesService.ApiV2UploadTaskSizePost.
func (c *pricesServiceClient) ApiV2UploadTaskSizePost(ctx context.Context, req *connect.Request[v1.ApiV2UploadTaskSizePostRequest]) (*connect.Response[v1.TaskCreated], error) {
	return c.apiV2UploadTaskSizePost.CallUnary(ctx, req)
}

// PricesServiceHandler is an implementation of the wb.prices.v1.PricesService service.
type PricesServiceHandler interface {
	ApiV2BufferGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2BufferGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2BufferGoodsTaskGet200Response], error)
	ApiV2BufferTasksGet(context.Context, *connect.Request[v1.ApiV2BufferTasksGetRequest]) (*connect.Response[v1.ApiV2BufferTasksGet200Response], error)
	ApiV2HistoryGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2HistoryGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2HistoryGoodsTaskGet200Response], error)
	ApiV2HistoryTasksGet(context.Context, *connect.Request[v1.ApiV2HistoryTasksGetRequest]) (*connect.Response[v1.ApiV2HistoryTasksGet200Response], error)
	ApiV2ListGoodsFilterGet(context.Context, *connect.Request[v1.ApiV2ListGoodsFilterGetRequest]) (*connect.Response[v1.ApiV2ListGoodsFilterGet200Response], error)
	ApiV2ListGoodsSizeNmGet(context.Context, *connect.Request[v1.ApiV2ListGoodsSizeNmGetRequest]) (*connect.Response[v1.ApiV2ListGoodsSizeNmGet200Response], error)
	ApiV2UploadTaskPost(context.Context, *connect.Request[v1.ApiV2UploadTaskPostRequest]) (*connect.Response[v1.TaskCreated], error)
	ApiV2UploadTaskSizePost(context.Context, *connect.Request[v1.ApiV2UploadTaskSizePostRequest]) (*connect.Response[v1.TaskCreated], error)
}

// NewPricesServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewPricesServiceHandler(svc PricesServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	pricesServiceApiV2BufferGoodsTaskGetHandler := connect.NewUnaryHandler(
		PricesServiceApiV2BufferGoodsTaskGetProcedure,
		svc.ApiV2BufferGoodsTaskGet,
		connect.WithSchema(pricesServiceApiV2BufferGoodsTaskGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	pricesServiceApiV2BufferTasksGetHandler := connect.NewUnaryHandler(
		PricesServiceApiV2BufferTasksGetProcedure,
		svc.ApiV2BufferTasksGet,
		connect.WithSchema(pricesServiceApiV2BufferTasksGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	pricesServiceApiV2HistoryGoodsTaskGetHandler := connect.NewUnaryHandler(
		PricesServiceApiV2HistoryGoodsTaskGetProcedure,
		svc.ApiV2HistoryGoodsTaskGet,
		connect.WithSchema(pricesServiceApiV2HistoryGoodsTaskGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	pricesServiceApiV2HistoryTasksGetHandler := connect.NewUnaryHandler(
		PricesServiceApiV2HistoryTasksGetProcedure,
		svc.ApiV2HistoryTasksGet,
		connect.WithSchema(pricesServiceApiV2HistoryTasksGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	pricesServiceApiV2ListGoodsFilterGetHandler := connect.NewUnaryHandler(
		PricesServiceApiV2ListGoodsFilterGetProcedure,
		svc.ApiV2ListGoodsFilterGet,
		connect.WithSchema(pricesServiceApiV2ListGoodsFilterGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	pricesServiceApiV2ListGoodsSizeNmGetHandler := connect.NewUnaryHandler(
		PricesServiceApiV2ListGoodsSizeNmGetProcedure,
		svc.ApiV2ListGoodsSizeNmGet,
		connect.WithSchema(pricesServiceApiV2ListGoodsSizeNmGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	pricesServiceApiV2UploadTaskPostHandler := connect.NewUnaryHandler(
		PricesServiceApiV2UploadTaskPostProcedure,
		svc.ApiV2UploadTaskPost,
		connect.WithSchema(pricesServiceApiV2UploadTaskPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	pricesServiceApiV2UploadTaskSizePostHandler := connect.NewUnaryHandler(
		PricesServiceApiV2UploadTaskSizePostProcedure,
		svc.ApiV2UploadTaskSizePost,
		connect.WithSchema(pricesServiceApiV2UploadTaskSizePostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/wb.prices.v1.PricesService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case PricesServiceApiV2BufferGoodsTaskGetProcedure:
			pricesServiceApiV2BufferGoodsTaskGetHandler.ServeHTTP(w, r)
		case PricesServiceApiV2BufferTasksGetProcedure:
			pricesServiceApiV2BufferTasksGetHandler.ServeHTTP(w, r)
		case PricesServiceApiV2HistoryGoodsTaskGetProcedure:
			pricesServiceApiV2HistoryGoodsTaskGetHandler.ServeHTTP(w, r)
		case PricesServiceApiV2HistoryTasksGetProcedure:
			pricesServiceApiV2HistoryTasksGetHandler.ServeHTTP(w, r)
		case PricesServiceApiV2ListGoodsFilterGetProcedure:
			pricesServiceApiV2ListGoodsFilterGetHandler.ServeHTTP(w, r)
		case PricesServiceApiV2ListGoodsSizeNmGetProcedure:
			pricesServiceApiV2ListGoodsSizeNmGetHandler.ServeHTTP(w, r)
		case PricesServiceApiV2UploadTaskPostProcedure:
			pricesServiceApiV2UploadTaskPostHandler.ServeHTTP(w, r)
		case PricesServiceApiV2UploadTaskSizePostProcedure:
			pricesServiceApiV2UploadTaskSizePostHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedPricesServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedPricesServiceHandler struct{}

func (UnimplementedPricesServiceHandler) ApiV2BufferGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2BufferGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2BufferGoodsTaskGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.PricesService.ApiV2BufferGoodsTaskGet is not implemented"))
}

func (UnimplementedPricesServiceHandler) ApiV2BufferTasksGet(context.Context, *connect.Request[v1.ApiV2BufferTasksGetRequest]) (*connect.Response[v1.ApiV2BufferTasksGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.PricesService.ApiV2BufferTasksGet is not implemented"))
}

func (UnimplementedPricesServiceHandler) ApiV2HistoryGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2HistoryGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2HistoryGoodsTaskGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.PricesService.ApiV2HistoryGoodsTaskGet is not implemented"))
}

func (UnimplementedPricesServiceHandler) ApiV2HistoryTasksGet(context.Context, *connect.Request[v1.ApiV2HistoryTasksGetRequest]) (*connect.Response[v1.ApiV2HistoryTasksGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.PricesService.ApiV2HistoryTasksGet is not implemented"))
}

func (UnimplementedPricesServiceHandler) ApiV2ListGoodsFilterGet(context.Context, *connect.Request[v1.ApiV2ListGoodsFilterGetRequest]) (*connect.Response[v1.ApiV2ListGoodsFilterGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.PricesService.ApiV2ListGoodsFilterGet is not implemented"))
}

func (UnimplementedPricesServiceHandler) ApiV2ListGoodsSizeNmGet(context.Context, *connect.Request[v1.ApiV2ListGoodsSizeNmGetRequest]) (*connect.Response[v1.ApiV2ListGoodsSizeNmGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.PricesService.ApiV2ListGoodsSizeNmGet is not implemented"))
}

func (UnimplementedPricesServiceHandler) ApiV2UploadTaskPost(context.Context, *connect.Request[v1.ApiV2UploadTaskPostRequest]) (*connect.Response[v1.TaskCreated], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.PricesService.ApiV2UploadTaskPost is not implemented"))
}

func (UnimplementedPricesServiceHandler) ApiV2UploadTaskSizePost(context.Context, *connect.Request[v1.ApiV2UploadTaskSizePostRequest]) (*connect.Response[v1.TaskCreated], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.PricesService.ApiV2UploadTaskSizePost is not implemented"))
}
