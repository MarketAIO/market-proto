//
//API цен и скидок
//
//С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов.
//
//The version of the OpenAPI document:
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: wb/prices/v1/_service.proto

package wbPRICESconnect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/MarketAIO/market-proto/gen/go/pb/wb/prices/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// DefaultServiceName is the fully-qualified name of the DefaultService service.
	DefaultServiceName = "wb.prices.v1.DefaultService"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// DefaultServiceApiV2BufferGoodsTaskGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV2BufferGoodsTaskGet RPC.
	DefaultServiceApiV2BufferGoodsTaskGetProcedure = "/wb.prices.v1.DefaultService/ApiV2BufferGoodsTaskGet"
	// DefaultServiceApiV2BufferTasksGetProcedure is the fully-qualified name of the DefaultService's
	// ApiV2BufferTasksGet RPC.
	DefaultServiceApiV2BufferTasksGetProcedure = "/wb.prices.v1.DefaultService/ApiV2BufferTasksGet"
	// DefaultServiceApiV2HistoryGoodsTaskGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV2HistoryGoodsTaskGet RPC.
	DefaultServiceApiV2HistoryGoodsTaskGetProcedure = "/wb.prices.v1.DefaultService/ApiV2HistoryGoodsTaskGet"
	// DefaultServiceApiV2HistoryTasksGetProcedure is the fully-qualified name of the DefaultService's
	// ApiV2HistoryTasksGet RPC.
	DefaultServiceApiV2HistoryTasksGetProcedure = "/wb.prices.v1.DefaultService/ApiV2HistoryTasksGet"
	// DefaultServiceApiV2ListGoodsFilterGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV2ListGoodsFilterGet RPC.
	DefaultServiceApiV2ListGoodsFilterGetProcedure = "/wb.prices.v1.DefaultService/ApiV2ListGoodsFilterGet"
	// DefaultServiceApiV2ListGoodsSizeNmGetProcedure is the fully-qualified name of the
	// DefaultService's ApiV2ListGoodsSizeNmGet RPC.
	DefaultServiceApiV2ListGoodsSizeNmGetProcedure = "/wb.prices.v1.DefaultService/ApiV2ListGoodsSizeNmGet"
	// DefaultServiceApiV2UploadTaskPostProcedure is the fully-qualified name of the DefaultService's
	// ApiV2UploadTaskPost RPC.
	DefaultServiceApiV2UploadTaskPostProcedure = "/wb.prices.v1.DefaultService/ApiV2UploadTaskPost"
	// DefaultServiceApiV2UploadTaskSizePostProcedure is the fully-qualified name of the
	// DefaultService's ApiV2UploadTaskSizePost RPC.
	DefaultServiceApiV2UploadTaskSizePostProcedure = "/wb.prices.v1.DefaultService/ApiV2UploadTaskSizePost"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	defaultServiceServiceDescriptor                        = v1.File_wb_prices_v1__service_proto.Services().ByName("DefaultService")
	defaultServiceApiV2BufferGoodsTaskGetMethodDescriptor  = defaultServiceServiceDescriptor.Methods().ByName("ApiV2BufferGoodsTaskGet")
	defaultServiceApiV2BufferTasksGetMethodDescriptor      = defaultServiceServiceDescriptor.Methods().ByName("ApiV2BufferTasksGet")
	defaultServiceApiV2HistoryGoodsTaskGetMethodDescriptor = defaultServiceServiceDescriptor.Methods().ByName("ApiV2HistoryGoodsTaskGet")
	defaultServiceApiV2HistoryTasksGetMethodDescriptor     = defaultServiceServiceDescriptor.Methods().ByName("ApiV2HistoryTasksGet")
	defaultServiceApiV2ListGoodsFilterGetMethodDescriptor  = defaultServiceServiceDescriptor.Methods().ByName("ApiV2ListGoodsFilterGet")
	defaultServiceApiV2ListGoodsSizeNmGetMethodDescriptor  = defaultServiceServiceDescriptor.Methods().ByName("ApiV2ListGoodsSizeNmGet")
	defaultServiceApiV2UploadTaskPostMethodDescriptor      = defaultServiceServiceDescriptor.Methods().ByName("ApiV2UploadTaskPost")
	defaultServiceApiV2UploadTaskSizePostMethodDescriptor  = defaultServiceServiceDescriptor.Methods().ByName("ApiV2UploadTaskSizePost")
)

// DefaultServiceClient is a client for the wb.prices.v1.DefaultService service.
type DefaultServiceClient interface {
	ApiV2BufferGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2BufferGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2BufferGoodsTaskGet200Response], error)
	ApiV2BufferTasksGet(context.Context, *connect.Request[v1.ApiV2BufferTasksGetRequest]) (*connect.Response[v1.ApiV2BufferTasksGet200Response], error)
	ApiV2HistoryGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2HistoryGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2HistoryGoodsTaskGet200Response], error)
	ApiV2HistoryTasksGet(context.Context, *connect.Request[v1.ApiV2HistoryTasksGetRequest]) (*connect.Response[v1.ApiV2HistoryTasksGet200Response], error)
	ApiV2ListGoodsFilterGet(context.Context, *connect.Request[v1.ApiV2ListGoodsFilterGetRequest]) (*connect.Response[v1.ApiV2ListGoodsFilterGet200Response], error)
	ApiV2ListGoodsSizeNmGet(context.Context, *connect.Request[v1.ApiV2ListGoodsSizeNmGetRequest]) (*connect.Response[v1.ApiV2ListGoodsSizeNmGet200Response], error)
	ApiV2UploadTaskPost(context.Context, *connect.Request[v1.ApiV2UploadTaskPostRequest]) (*connect.Response[v1.TaskCreated], error)
	ApiV2UploadTaskSizePost(context.Context, *connect.Request[v1.ApiV2UploadTaskSizePostRequest]) (*connect.Response[v1.TaskCreated], error)
}

// NewDefaultServiceClient constructs a client for the wb.prices.v1.DefaultService service. By
// default, it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses,
// and sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the
// connect.WithGRPC() or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewDefaultServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) DefaultServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &defaultServiceClient{
		apiV2BufferGoodsTaskGet: connect.NewClient[v1.ApiV2BufferGoodsTaskGetRequest, v1.ApiV2BufferGoodsTaskGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV2BufferGoodsTaskGetProcedure,
			connect.WithSchema(defaultServiceApiV2BufferGoodsTaskGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2BufferTasksGet: connect.NewClient[v1.ApiV2BufferTasksGetRequest, v1.ApiV2BufferTasksGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV2BufferTasksGetProcedure,
			connect.WithSchema(defaultServiceApiV2BufferTasksGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2HistoryGoodsTaskGet: connect.NewClient[v1.ApiV2HistoryGoodsTaskGetRequest, v1.ApiV2HistoryGoodsTaskGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV2HistoryGoodsTaskGetProcedure,
			connect.WithSchema(defaultServiceApiV2HistoryGoodsTaskGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2HistoryTasksGet: connect.NewClient[v1.ApiV2HistoryTasksGetRequest, v1.ApiV2HistoryTasksGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV2HistoryTasksGetProcedure,
			connect.WithSchema(defaultServiceApiV2HistoryTasksGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2ListGoodsFilterGet: connect.NewClient[v1.ApiV2ListGoodsFilterGetRequest, v1.ApiV2ListGoodsFilterGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV2ListGoodsFilterGetProcedure,
			connect.WithSchema(defaultServiceApiV2ListGoodsFilterGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2ListGoodsSizeNmGet: connect.NewClient[v1.ApiV2ListGoodsSizeNmGetRequest, v1.ApiV2ListGoodsSizeNmGet200Response](
			httpClient,
			baseURL+DefaultServiceApiV2ListGoodsSizeNmGetProcedure,
			connect.WithSchema(defaultServiceApiV2ListGoodsSizeNmGetMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2UploadTaskPost: connect.NewClient[v1.ApiV2UploadTaskPostRequest, v1.TaskCreated](
			httpClient,
			baseURL+DefaultServiceApiV2UploadTaskPostProcedure,
			connect.WithSchema(defaultServiceApiV2UploadTaskPostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		apiV2UploadTaskSizePost: connect.NewClient[v1.ApiV2UploadTaskSizePostRequest, v1.TaskCreated](
			httpClient,
			baseURL+DefaultServiceApiV2UploadTaskSizePostProcedure,
			connect.WithSchema(defaultServiceApiV2UploadTaskSizePostMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// defaultServiceClient implements DefaultServiceClient.
type defaultServiceClient struct {
	apiV2BufferGoodsTaskGet  *connect.Client[v1.ApiV2BufferGoodsTaskGetRequest, v1.ApiV2BufferGoodsTaskGet200Response]
	apiV2BufferTasksGet      *connect.Client[v1.ApiV2BufferTasksGetRequest, v1.ApiV2BufferTasksGet200Response]
	apiV2HistoryGoodsTaskGet *connect.Client[v1.ApiV2HistoryGoodsTaskGetRequest, v1.ApiV2HistoryGoodsTaskGet200Response]
	apiV2HistoryTasksGet     *connect.Client[v1.ApiV2HistoryTasksGetRequest, v1.ApiV2HistoryTasksGet200Response]
	apiV2ListGoodsFilterGet  *connect.Client[v1.ApiV2ListGoodsFilterGetRequest, v1.ApiV2ListGoodsFilterGet200Response]
	apiV2ListGoodsSizeNmGet  *connect.Client[v1.ApiV2ListGoodsSizeNmGetRequest, v1.ApiV2ListGoodsSizeNmGet200Response]
	apiV2UploadTaskPost      *connect.Client[v1.ApiV2UploadTaskPostRequest, v1.TaskCreated]
	apiV2UploadTaskSizePost  *connect.Client[v1.ApiV2UploadTaskSizePostRequest, v1.TaskCreated]
}

// ApiV2BufferGoodsTaskGet calls wb.prices.v1.DefaultService.ApiV2BufferGoodsTaskGet.
func (c *defaultServiceClient) ApiV2BufferGoodsTaskGet(ctx context.Context, req *connect.Request[v1.ApiV2BufferGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2BufferGoodsTaskGet200Response], error) {
	return c.apiV2BufferGoodsTaskGet.CallUnary(ctx, req)
}

// ApiV2BufferTasksGet calls wb.prices.v1.DefaultService.ApiV2BufferTasksGet.
func (c *defaultServiceClient) ApiV2BufferTasksGet(ctx context.Context, req *connect.Request[v1.ApiV2BufferTasksGetRequest]) (*connect.Response[v1.ApiV2BufferTasksGet200Response], error) {
	return c.apiV2BufferTasksGet.CallUnary(ctx, req)
}

// ApiV2HistoryGoodsTaskGet calls wb.prices.v1.DefaultService.ApiV2HistoryGoodsTaskGet.
func (c *defaultServiceClient) ApiV2HistoryGoodsTaskGet(ctx context.Context, req *connect.Request[v1.ApiV2HistoryGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2HistoryGoodsTaskGet200Response], error) {
	return c.apiV2HistoryGoodsTaskGet.CallUnary(ctx, req)
}

// ApiV2HistoryTasksGet calls wb.prices.v1.DefaultService.ApiV2HistoryTasksGet.
func (c *defaultServiceClient) ApiV2HistoryTasksGet(ctx context.Context, req *connect.Request[v1.ApiV2HistoryTasksGetRequest]) (*connect.Response[v1.ApiV2HistoryTasksGet200Response], error) {
	return c.apiV2HistoryTasksGet.CallUnary(ctx, req)
}

// ApiV2ListGoodsFilterGet calls wb.prices.v1.DefaultService.ApiV2ListGoodsFilterGet.
func (c *defaultServiceClient) ApiV2ListGoodsFilterGet(ctx context.Context, req *connect.Request[v1.ApiV2ListGoodsFilterGetRequest]) (*connect.Response[v1.ApiV2ListGoodsFilterGet200Response], error) {
	return c.apiV2ListGoodsFilterGet.CallUnary(ctx, req)
}

// ApiV2ListGoodsSizeNmGet calls wb.prices.v1.DefaultService.ApiV2ListGoodsSizeNmGet.
func (c *defaultServiceClient) ApiV2ListGoodsSizeNmGet(ctx context.Context, req *connect.Request[v1.ApiV2ListGoodsSizeNmGetRequest]) (*connect.Response[v1.ApiV2ListGoodsSizeNmGet200Response], error) {
	return c.apiV2ListGoodsSizeNmGet.CallUnary(ctx, req)
}

// ApiV2UploadTaskPost calls wb.prices.v1.DefaultService.ApiV2UploadTaskPost.
func (c *defaultServiceClient) ApiV2UploadTaskPost(ctx context.Context, req *connect.Request[v1.ApiV2UploadTaskPostRequest]) (*connect.Response[v1.TaskCreated], error) {
	return c.apiV2UploadTaskPost.CallUnary(ctx, req)
}

// ApiV2UploadTaskSizePost calls wb.prices.v1.DefaultService.ApiV2UploadTaskSizePost.
func (c *defaultServiceClient) ApiV2UploadTaskSizePost(ctx context.Context, req *connect.Request[v1.ApiV2UploadTaskSizePostRequest]) (*connect.Response[v1.TaskCreated], error) {
	return c.apiV2UploadTaskSizePost.CallUnary(ctx, req)
}

// DefaultServiceHandler is an implementation of the wb.prices.v1.DefaultService service.
type DefaultServiceHandler interface {
	ApiV2BufferGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2BufferGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2BufferGoodsTaskGet200Response], error)
	ApiV2BufferTasksGet(context.Context, *connect.Request[v1.ApiV2BufferTasksGetRequest]) (*connect.Response[v1.ApiV2BufferTasksGet200Response], error)
	ApiV2HistoryGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2HistoryGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2HistoryGoodsTaskGet200Response], error)
	ApiV2HistoryTasksGet(context.Context, *connect.Request[v1.ApiV2HistoryTasksGetRequest]) (*connect.Response[v1.ApiV2HistoryTasksGet200Response], error)
	ApiV2ListGoodsFilterGet(context.Context, *connect.Request[v1.ApiV2ListGoodsFilterGetRequest]) (*connect.Response[v1.ApiV2ListGoodsFilterGet200Response], error)
	ApiV2ListGoodsSizeNmGet(context.Context, *connect.Request[v1.ApiV2ListGoodsSizeNmGetRequest]) (*connect.Response[v1.ApiV2ListGoodsSizeNmGet200Response], error)
	ApiV2UploadTaskPost(context.Context, *connect.Request[v1.ApiV2UploadTaskPostRequest]) (*connect.Response[v1.TaskCreated], error)
	ApiV2UploadTaskSizePost(context.Context, *connect.Request[v1.ApiV2UploadTaskSizePostRequest]) (*connect.Response[v1.TaskCreated], error)
}

// NewDefaultServiceHandler builds an HTTP handler from the service implementation. It returns the
// path on which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewDefaultServiceHandler(svc DefaultServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	defaultServiceApiV2BufferGoodsTaskGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2BufferGoodsTaskGetProcedure,
		svc.ApiV2BufferGoodsTaskGet,
		connect.WithSchema(defaultServiceApiV2BufferGoodsTaskGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2BufferTasksGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2BufferTasksGetProcedure,
		svc.ApiV2BufferTasksGet,
		connect.WithSchema(defaultServiceApiV2BufferTasksGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2HistoryGoodsTaskGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2HistoryGoodsTaskGetProcedure,
		svc.ApiV2HistoryGoodsTaskGet,
		connect.WithSchema(defaultServiceApiV2HistoryGoodsTaskGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2HistoryTasksGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2HistoryTasksGetProcedure,
		svc.ApiV2HistoryTasksGet,
		connect.WithSchema(defaultServiceApiV2HistoryTasksGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2ListGoodsFilterGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2ListGoodsFilterGetProcedure,
		svc.ApiV2ListGoodsFilterGet,
		connect.WithSchema(defaultServiceApiV2ListGoodsFilterGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2ListGoodsSizeNmGetHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2ListGoodsSizeNmGetProcedure,
		svc.ApiV2ListGoodsSizeNmGet,
		connect.WithSchema(defaultServiceApiV2ListGoodsSizeNmGetMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2UploadTaskPostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2UploadTaskPostProcedure,
		svc.ApiV2UploadTaskPost,
		connect.WithSchema(defaultServiceApiV2UploadTaskPostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	defaultServiceApiV2UploadTaskSizePostHandler := connect.NewUnaryHandler(
		DefaultServiceApiV2UploadTaskSizePostProcedure,
		svc.ApiV2UploadTaskSizePost,
		connect.WithSchema(defaultServiceApiV2UploadTaskSizePostMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/wb.prices.v1.DefaultService/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case DefaultServiceApiV2BufferGoodsTaskGetProcedure:
			defaultServiceApiV2BufferGoodsTaskGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2BufferTasksGetProcedure:
			defaultServiceApiV2BufferTasksGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2HistoryGoodsTaskGetProcedure:
			defaultServiceApiV2HistoryGoodsTaskGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2HistoryTasksGetProcedure:
			defaultServiceApiV2HistoryTasksGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2ListGoodsFilterGetProcedure:
			defaultServiceApiV2ListGoodsFilterGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2ListGoodsSizeNmGetProcedure:
			defaultServiceApiV2ListGoodsSizeNmGetHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2UploadTaskPostProcedure:
			defaultServiceApiV2UploadTaskPostHandler.ServeHTTP(w, r)
		case DefaultServiceApiV2UploadTaskSizePostProcedure:
			defaultServiceApiV2UploadTaskSizePostHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedDefaultServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedDefaultServiceHandler struct{}

func (UnimplementedDefaultServiceHandler) ApiV2BufferGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2BufferGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2BufferGoodsTaskGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.DefaultService.ApiV2BufferGoodsTaskGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2BufferTasksGet(context.Context, *connect.Request[v1.ApiV2BufferTasksGetRequest]) (*connect.Response[v1.ApiV2BufferTasksGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.DefaultService.ApiV2BufferTasksGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2HistoryGoodsTaskGet(context.Context, *connect.Request[v1.ApiV2HistoryGoodsTaskGetRequest]) (*connect.Response[v1.ApiV2HistoryGoodsTaskGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.DefaultService.ApiV2HistoryGoodsTaskGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2HistoryTasksGet(context.Context, *connect.Request[v1.ApiV2HistoryTasksGetRequest]) (*connect.Response[v1.ApiV2HistoryTasksGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.DefaultService.ApiV2HistoryTasksGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2ListGoodsFilterGet(context.Context, *connect.Request[v1.ApiV2ListGoodsFilterGetRequest]) (*connect.Response[v1.ApiV2ListGoodsFilterGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.DefaultService.ApiV2ListGoodsFilterGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2ListGoodsSizeNmGet(context.Context, *connect.Request[v1.ApiV2ListGoodsSizeNmGetRequest]) (*connect.Response[v1.ApiV2ListGoodsSizeNmGet200Response], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.DefaultService.ApiV2ListGoodsSizeNmGet is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2UploadTaskPost(context.Context, *connect.Request[v1.ApiV2UploadTaskPostRequest]) (*connect.Response[v1.TaskCreated], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.DefaultService.ApiV2UploadTaskPost is not implemented"))
}

func (UnimplementedDefaultServiceHandler) ApiV2UploadTaskSizePost(context.Context, *connect.Request[v1.ApiV2UploadTaskSizePostRequest]) (*connect.Response[v1.TaskCreated], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("wb.prices.v1.DefaultService.ApiV2UploadTaskSizePost is not implemented"))
}
