//
//Описание API Аналитика
//
//Сервис предоставляет публичный API для получения аналитических данных. С помощью этих методов вы можете получать аналитические отчёты. [Часть методов](./#tag/Voronka-prodazh-(Dzhem)/) доступна только с [подпиской на расширенную аналитику Джем](https://seller.wildberries.ru/dynamic-product-categories/jam). 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/analytics/v1/nm_report_grouped_history_response_data_inner_history_inner.proto (package wb.analytics.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.analytics.v1.NmReportGroupedHistoryResponseDataInnerHistoryInner
 */
export class NmReportGroupedHistoryResponseDataInnerHistoryInner extends Message<NmReportGroupedHistoryResponseDataInnerHistoryInner> {
  /**
   * @generated from field: string dt = 1;
   */
  dt = "";

  /**
   * Количество переходов в карточку товара
   *
   * @generated from field: int32 openCardCount = 2;
   */
  openCardCount = 0;

  /**
   * Положили в корзину, штук
   *
   * @generated from field: int32 addToCartCount = 3;
   */
  addToCartCount = 0;

  /**
   * Заказали товаров, шт
   *
   * @generated from field: int32 ordersCount = 4;
   */
  ordersCount = 0;

  /**
   * Заказали на сумму, руб.
   *
   * @generated from field: int32 ordersSumRub = 5;
   */
  ordersSumRub = 0;

  /**
   * Выкупили товаров, шт.
   *
   * @generated from field: int32 buyoutsCount = 6;
   */
  buyoutsCount = 0;

  /**
   * Выкупили на сумму, руб.
   *
   * @generated from field: int32 buyoutsSumRub = 7;
   */
  buyoutsSumRub = 0;

  /**
   * Процент выкупа, % (Какой процент посетителей, заказавших товар, его выкупили. Без учёта товаров, которые еще доставляются покупателю.)
   *
   * @generated from field: int32 buyoutPercent = 8;
   */
  buyoutPercent = 0;

  /**
   * Конверсия в корзину, % (Какой процент посетителей, открывших карточку товара, добавили товар в корзину)
   *
   * @generated from field: int32 addToCartConversion = 9;
   */
  addToCartConversion = 0;

  /**
   * Конверсия в заказ, % (Какой процент посетителей, добавивших товар в корзину, сделали заказ)
   *
   * @generated from field: int32 cartToOrderConversion = 10;
   */
  cartToOrderConversion = 0;

  constructor(data?: PartialMessage<NmReportGroupedHistoryResponseDataInnerHistoryInner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.analytics.v1.NmReportGroupedHistoryResponseDataInnerHistoryInner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "dt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "openCardCount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "addToCartCount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "ordersCount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "ordersSumRub", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "buyoutsCount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "buyoutsSumRub", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "buyoutPercent", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "addToCartConversion", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "cartToOrderConversion", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NmReportGroupedHistoryResponseDataInnerHistoryInner {
    return new NmReportGroupedHistoryResponseDataInnerHistoryInner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NmReportGroupedHistoryResponseDataInnerHistoryInner {
    return new NmReportGroupedHistoryResponseDataInnerHistoryInner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NmReportGroupedHistoryResponseDataInnerHistoryInner {
    return new NmReportGroupedHistoryResponseDataInnerHistoryInner().fromJsonString(jsonString, options);
  }

  static equals(a: NmReportGroupedHistoryResponseDataInnerHistoryInner | PlainMessage<NmReportGroupedHistoryResponseDataInnerHistoryInner> | undefined, b: NmReportGroupedHistoryResponseDataInnerHistoryInner | PlainMessage<NmReportGroupedHistoryResponseDataInnerHistoryInner> | undefined): boolean {
    return proto3.util.equals(NmReportGroupedHistoryResponseDataInnerHistoryInner, a, b);
  }
}

