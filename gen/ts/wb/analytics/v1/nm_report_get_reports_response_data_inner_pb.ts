//
//Описание API Аналитика
//
//Сервис предоставляет публичный API для получения аналитических данных. С помощью этих методов вы можете получать аналитические отчёты. [Часть методов](./#tag/Voronka-prodazh-(Dzhem)/) доступна только с [подпиской на расширенную аналитику Джем](https://seller.wildberries.ru/dynamic-product-categories/jam). 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/analytics/v1/nm_report_get_reports_response_data_inner.proto (package wb.analytics.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.analytics.v1.NmReportGetReportsResponseDataInner
 */
export class NmReportGetReportsResponseDataInner extends Message<NmReportGetReportsResponseDataInner> {
  /**
   * Идентификатор отчёта
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * Дата и время завершения генерации
   *
   * @generated from field: string createdAt = 2;
   */
  createdAt = "";

  /**
   * Статус отчёта:  * `WAITING` — в очереди на обработку * `PROCESSING` — генерируется * `SUCCESS —` готов * `RETRY` — ожидает повторной обработки * `FAILED` — не получилось сгенерировать, сгенерируйте повторно 
   *
   * @generated from field: string status = 3;
   */
  status = "";

  /**
   * Название отчёта
   *
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * Размер отчёта, Б
   *
   * @generated from field: int32 size = 5;
   */
  size = 0;

  /**
   * Начало периода
   *
   * @generated from field: string startDate = 6;
   */
  startDate = "";

  /**
   * Конец периода
   *
   * @generated from field: string endDate = 7;
   */
  endDate = "";

  constructor(data?: PartialMessage<NmReportGetReportsResponseDataInner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.analytics.v1.NmReportGetReportsResponseDataInner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "createdAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "startDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "endDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NmReportGetReportsResponseDataInner {
    return new NmReportGetReportsResponseDataInner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NmReportGetReportsResponseDataInner {
    return new NmReportGetReportsResponseDataInner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NmReportGetReportsResponseDataInner {
    return new NmReportGetReportsResponseDataInner().fromJsonString(jsonString, options);
  }

  static equals(a: NmReportGetReportsResponseDataInner | PlainMessage<NmReportGetReportsResponseDataInner> | undefined, b: NmReportGetReportsResponseDataInner | PlainMessage<NmReportGetReportsResponseDataInner> | undefined): boolean {
    return proto3.util.equals(NmReportGetReportsResponseDataInner, a, b);
  }
}

