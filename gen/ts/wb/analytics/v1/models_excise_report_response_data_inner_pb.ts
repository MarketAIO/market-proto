//
//Описание API Аналитика
//
//Сервис предоставляет публичный API для получения аналитических данных. С помощью этих методов вы можете получать аналитические отчёты. [Часть методов](./#tag/Voronka-prodazh-(Dzhem)/) доступна только с [подпиской на расширенную аналитику Джем](https://seller.wildberries.ru/dynamic-product-categories/jam). 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/analytics/v1/models_excise_report_response_data_inner.proto (package wb.analytics.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.analytics.v1.ModelsExciseReportResponseDataInner
 */
export class ModelsExciseReportResponseDataInner extends Message<ModelsExciseReportResponseDataInner> {
  /**
   * Страна покупателя
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Цена товара, с НДС
   *
   * @generated from field: float price = 2;
   */
  price = 0;

  /**
   * Валюта
   *
   * @generated from field: string currency_name_short = 3;
   */
  currencyNameShort = "";

  /**
   * Код маркировки
   *
   * @generated from field: string excise_short = 4;
   */
  exciseShort = "";

  /**
   * Баркод
   *
   * @generated from field: string barcode = 5;
   */
  barcode = "";

  /**
   * Артикул Wildberries
   *
   * @generated from field: int32 nm_id = 6;
   */
  nmId = 0;

  /**
   * Тип операции, если есть:    * `1` — вывод из оборота   * `2` — возврат в оборот 
   *
   * @generated from field: int32 operation_type_id = 7;
   */
  operationTypeId = 0;

  /**
   * Номер фискального документа (чека полного расчёта), если есть
   *
   * @generated from field: int32 fiscal_doc_number = 8;
   */
  fiscalDocNumber = 0;

  /**
   * Дата фискализации (дата в чеке), если есть, `ГГГГ-ММ-ДД`
   *
   * @generated from field: string fiscal_dt = 9;
   */
  fiscalDt = "";

  /**
   * Номер фискального накопителя, если есть
   *
   * @generated from field: string fiscal_drive_number = 10;
   */
  fiscalDriveNumber = "";

  /**
   * `Rid` 
   *
   * @generated from field: int32 rid = 11;
   */
  rid = 0;

  /**
   * `Srid`  
   *
   * @generated from field: string srid = 12;
   */
  srid = "";

  constructor(data?: PartialMessage<ModelsExciseReportResponseDataInner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.analytics.v1.ModelsExciseReportResponseDataInner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "price", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "currency_name_short", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "excise_short", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "barcode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "nm_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "operation_type_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "fiscal_doc_number", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "fiscal_dt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "fiscal_drive_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "rid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "srid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ModelsExciseReportResponseDataInner {
    return new ModelsExciseReportResponseDataInner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ModelsExciseReportResponseDataInner {
    return new ModelsExciseReportResponseDataInner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ModelsExciseReportResponseDataInner {
    return new ModelsExciseReportResponseDataInner().fromJsonString(jsonString, options);
  }

  static equals(a: ModelsExciseReportResponseDataInner | PlainMessage<ModelsExciseReportResponseDataInner> | undefined, b: ModelsExciseReportResponseDataInner | PlainMessage<ModelsExciseReportResponseDataInner> | undefined): boolean {
    return proto3.util.equals(ModelsExciseReportResponseDataInner, a, b);
  }
}

