//
//Описание API Аналитика
//
//Сервис предоставляет публичный API для получения аналитических данных. С помощью этих методов вы можете получать аналитические отчёты. [Часть методов](./#tag/Voronka-prodazh-(Dzhem)/) доступна только с [подпиской на расширенную аналитику Джем](https://seller.wildberries.ru/dynamic-product-categories/jam). 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/analytics/v1/nm_report_detail_response_data_cards_inner_stocks.proto (package wb.analytics.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.analytics.v1.NmReportDetailResponseDataCardsInnerStocks
 */
export class NmReportDetailResponseDataCardsInnerStocks extends Message<NmReportDetailResponseDataCardsInnerStocks> {
  /**
   * Остатки МП, шт. (Общее количество остатков на складе продавца)
   *
   * @generated from field: int32 stocksMp = 1;
   */
  stocksMp = 0;

  /**
   * Остатки на складах Wildberries (Общее количество остатков на складах Wildberries)
   *
   * @generated from field: int32 stocksWb = 2;
   */
  stocksWb = 0;

  constructor(data?: PartialMessage<NmReportDetailResponseDataCardsInnerStocks>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.analytics.v1.NmReportDetailResponseDataCardsInnerStocks";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stocksMp", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "stocksWb", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NmReportDetailResponseDataCardsInnerStocks {
    return new NmReportDetailResponseDataCardsInnerStocks().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NmReportDetailResponseDataCardsInnerStocks {
    return new NmReportDetailResponseDataCardsInnerStocks().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NmReportDetailResponseDataCardsInnerStocks {
    return new NmReportDetailResponseDataCardsInnerStocks().fromJsonString(jsonString, options);
  }

  static equals(a: NmReportDetailResponseDataCardsInnerStocks | PlainMessage<NmReportDetailResponseDataCardsInnerStocks> | undefined, b: NmReportDetailResponseDataCardsInnerStocks | PlainMessage<NmReportDetailResponseDataCardsInnerStocks> | undefined): boolean {
    return proto3.util.equals(NmReportDetailResponseDataCardsInnerStocks, a, b);
  }
}

