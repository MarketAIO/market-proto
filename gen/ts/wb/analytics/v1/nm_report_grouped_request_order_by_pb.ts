//
//Описание API Аналитика
//
//Сервис предоставляет публичный API для получения аналитических данных. С помощью этих методов вы можете получать аналитические отчёты. [Часть методов](./#tag/Voronka-prodazh-(Dzhem)/) доступна только с [подпиской на расширенную аналитику Джем](https://seller.wildberries.ru/dynamic-product-categories/jam). 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/analytics/v1/nm_report_grouped_request_order_by.proto (package wb.analytics.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.analytics.v1.NmReportGroupedReqOrderBy
 */
export class NmReportGroupedReqOrderBy extends Message<NmReportGroupedReqOrderBy> {
  /**
   * Вид сортировки
   *
   * @generated from field: string field = 1;
   */
  field = "";

  /**
   * `asc` — по возрастанию, `desc` — по убыванию 
   *
   * @generated from field: string mode = 2;
   */
  mode = "";

  constructor(data?: PartialMessage<NmReportGroupedReqOrderBy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.analytics.v1.NmReportGroupedReqOrderBy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "field", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "mode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NmReportGroupedReqOrderBy {
    return new NmReportGroupedReqOrderBy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NmReportGroupedReqOrderBy {
    return new NmReportGroupedReqOrderBy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NmReportGroupedReqOrderBy {
    return new NmReportGroupedReqOrderBy().fromJsonString(jsonString, options);
  }

  static equals(a: NmReportGroupedReqOrderBy | PlainMessage<NmReportGroupedReqOrderBy> | undefined, b: NmReportGroupedReqOrderBy | PlainMessage<NmReportGroupedReqOrderBy> | undefined): boolean {
    return proto3.util.equals(NmReportGroupedReqOrderBy, a, b);
  }
}

