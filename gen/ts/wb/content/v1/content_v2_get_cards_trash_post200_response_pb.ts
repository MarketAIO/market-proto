//
//Описание API Контента
//
//<dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/content/v1/content_v2_get_cards_trash_post200_response.proto (package wb.content.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ContentV2GetCardsTrashPost200ResponseCardsInner } from "./content_v2_get_cards_trash_post200_response_cards_inner_pb.js";
import { ContentV2GetCardsTrashPost200ResponseCursor } from "./content_v2_get_cards_trash_post200_response_cursor_pb.js";

/**
 * @generated from message wb.content.v1.ContentV2GetCardsTrashPost200Response
 */
export class ContentV2GetCardsTrashPost200Response extends Message<ContentV2GetCardsTrashPost200Response> {
  /**
   * Массив карточек товаров
   *
   * @generated from field: repeated wb.content.v1.ContentV2GetCardsTrashPost200ResponseCardsInner cards = 1;
   */
  cards: ContentV2GetCardsTrashPost200ResponseCardsInner[] = [];

  /**
   * @generated from field: wb.content.v1.ContentV2GetCardsTrashPost200ResponseCursor cursor = 2;
   */
  cursor?: ContentV2GetCardsTrashPost200ResponseCursor;

  constructor(data?: PartialMessage<ContentV2GetCardsTrashPost200Response>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2GetCardsTrashPost200Response";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "cards", kind: "message", T: ContentV2GetCardsTrashPost200ResponseCardsInner, repeated: true },
    { no: 2, name: "cursor", kind: "message", T: ContentV2GetCardsTrashPost200ResponseCursor },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2GetCardsTrashPost200Response {
    return new ContentV2GetCardsTrashPost200Response().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2GetCardsTrashPost200Response {
    return new ContentV2GetCardsTrashPost200Response().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2GetCardsTrashPost200Response {
    return new ContentV2GetCardsTrashPost200Response().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2GetCardsTrashPost200Response | PlainMessage<ContentV2GetCardsTrashPost200Response> | undefined, b: ContentV2GetCardsTrashPost200Response | PlainMessage<ContentV2GetCardsTrashPost200Response> | undefined): boolean {
    return proto3.util.equals(ContentV2GetCardsTrashPost200Response, a, b);
  }
}

