//
//Описание API Контента
//
//<dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/content/v1/content_v2_get_cards_list_post200_response_cards_inner.proto (package wb.content.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner } from "./content_v2_get_cards_list_post200_response_cards_inner_photos_inner_pb.js";
import { ContentV2GetCardsListPost200ResponseCardsInnerDimensions } from "./content_v2_get_cards_list_post200_response_cards_inner_dimensions_pb.js";
import { ContentV2GetCardsListPost200ResponseCardsInnerCharacteristicsInner } from "./content_v2_get_cards_list_post200_response_cards_inner_characteristics_inner_pb.js";
import { ContentV2GetCardsListPost200ResponseCardsInnerSizesInner } from "./content_v2_get_cards_list_post200_response_cards_inner_sizes_inner_pb.js";
import { ContentV2GetCardsListPost200ResponseCardsInnerTagsInner } from "./content_v2_get_cards_list_post200_response_cards_inner_tags_inner_pb.js";

/**
 * @generated from message wb.content.v1.ContentV2GetCardsListPost200ResponseCardsInner
 */
export class ContentV2GetCardsListPost200ResponseCardsInner extends Message<ContentV2GetCardsListPost200ResponseCardsInner> {
  /**
   * Артикул WB
   *
   * @generated from field: int32 nmID = 1;
   */
  nmID = 0;

  /**
   * Идентификатор КТ. <br> Артикулы WB из одной КТ будут иметь одинаковый imtID
   *
   * @generated from field: int32 imtID = 2;
   */
  imtID = 0;

  /**
   * Внутренний технический идентификатор товара
   *
   * @generated from field: string nmUUID = 3;
   */
  nmUUID = "";

  /**
   * Идентификатор предмета
   *
   * @generated from field: int32 subjectID = 4;
   */
  subjectID = 0;

  /**
   * Артикул продавца
   *
   * @generated from field: string vendorCode = 5;
   */
  vendorCode = "";

  /**
   * Название предмета
   *
   * @generated from field: string subjectName = 6;
   */
  subjectName = "";

  /**
   * Бренд
   *
   * @generated from field: string brand = 7;
   */
  brand = "";

  /**
   * Наименование товара
   *
   * @generated from field: string title = 8;
   */
  title = "";

  /**
   * Массив фото
   *
   * @generated from field: repeated wb.content.v1.ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner photos = 9;
   */
  photos: ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner[] = [];

  /**
   * URL видео
   *
   * @generated from field: string video = 10;
   */
  video = "";

  /**
   * @generated from field: wb.content.v1.ContentV2GetCardsListPost200ResponseCardsInnerDimensions dimensions = 11;
   */
  dimensions?: ContentV2GetCardsListPost200ResponseCardsInnerDimensions;

  /**
   * Характеристики
   *
   * @generated from field: repeated wb.content.v1.ContentV2GetCardsListPost200ResponseCardsInnerCharacteristicsInner characteristics = 12;
   */
  characteristics: ContentV2GetCardsListPost200ResponseCardsInnerCharacteristicsInner[] = [];

  /**
   * Размеры товара
   *
   * @generated from field: repeated wb.content.v1.ContentV2GetCardsListPost200ResponseCardsInnerSizesInner sizes = 13;
   */
  sizes: ContentV2GetCardsListPost200ResponseCardsInnerSizesInner[] = [];

  /**
   * Теги
   *
   * @generated from field: repeated wb.content.v1.ContentV2GetCardsListPost200ResponseCardsInnerTagsInner tags = 14;
   */
  tags: ContentV2GetCardsListPost200ResponseCardsInnerTagsInner[] = [];

  /**
   * Дата создания
   *
   * @generated from field: string createdAt = 15;
   */
  createdAt = "";

  /**
   * Дата изменения
   *
   * @generated from field: string updatedAt = 16;
   */
  updatedAt = "";

  constructor(data?: PartialMessage<ContentV2GetCardsListPost200ResponseCardsInner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2GetCardsListPost200ResponseCardsInner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "nmID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "imtID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "nmUUID", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "subjectID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "vendorCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "subjectName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "brand", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "title", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "photos", kind: "message", T: ContentV2GetCardsListPost200ResponseCardsInnerPhotosInner, repeated: true },
    { no: 10, name: "video", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "dimensions", kind: "message", T: ContentV2GetCardsListPost200ResponseCardsInnerDimensions },
    { no: 12, name: "characteristics", kind: "message", T: ContentV2GetCardsListPost200ResponseCardsInnerCharacteristicsInner, repeated: true },
    { no: 13, name: "sizes", kind: "message", T: ContentV2GetCardsListPost200ResponseCardsInnerSizesInner, repeated: true },
    { no: 14, name: "tags", kind: "message", T: ContentV2GetCardsListPost200ResponseCardsInnerTagsInner, repeated: true },
    { no: 15, name: "createdAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "updatedAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2GetCardsListPost200ResponseCardsInner {
    return new ContentV2GetCardsListPost200ResponseCardsInner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2GetCardsListPost200ResponseCardsInner {
    return new ContentV2GetCardsListPost200ResponseCardsInner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2GetCardsListPost200ResponseCardsInner {
    return new ContentV2GetCardsListPost200ResponseCardsInner().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2GetCardsListPost200ResponseCardsInner | PlainMessage<ContentV2GetCardsListPost200ResponseCardsInner> | undefined, b: ContentV2GetCardsListPost200ResponseCardsInner | PlainMessage<ContentV2GetCardsListPost200ResponseCardsInner> | undefined): boolean {
    return proto3.util.equals(ContentV2GetCardsListPost200ResponseCardsInner, a, b);
  }
}

