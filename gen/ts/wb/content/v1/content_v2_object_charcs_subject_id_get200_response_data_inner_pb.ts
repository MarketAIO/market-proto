//
//Описание API Контента
//
//<dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/content/v1/content_v2_object_charcs_subject_id_get200_response_data_inner.proto (package wb.content.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.content.v1.ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner
 */
export class ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner extends Message<ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner> {
  /**
   * Идентификатор характеристики
   *
   * @generated from field: int32 charcID = 1;
   */
  charcID = 0;

  /**
   * Название предмета
   *
   * @generated from field: string subjectName = 2;
   */
  subjectName = "";

  /**
   * Идентификатор предмета
   *
   * @generated from field: int32 subjectID = 3;
   */
  subjectID = 0;

  /**
   * Название характеристики
   *
   * @generated from field: string name = 4;
   */
  name = "";

  /**
   * true - характеристику необходимо обязательно указать в КТ. false - характеристику не обязательно указывать
   *
   * @generated from field: bool required = 5;
   */
  required = false;

  /**
   * Единица измерения
   *
   * @generated from field: string unitName = 6;
   */
  unitName = "";

  /**
   * Максимальное кол-во значений, которое можно присвоить данной характеристике. Если 0, то нет ограничения. 
   *
   * @generated from field: int32 maxCount = 7;
   */
  maxCount = 0;

  /**
   * Характеристика популярна у пользователей (true - да, false - нет)
   *
   * @generated from field: bool popular = 8;
   */
  popular = false;

  /**
   * Тип характеристики (1 и 0 - строка или массив строк; 4 - число или массив чисел)
   *
   * @generated from field: int32 charcType = 9;
   */
  charcType = 0;

  constructor(data?: PartialMessage<ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "charcID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "subjectName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "subjectID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "required", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "unitName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "maxCount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "popular", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 9, name: "charcType", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner {
    return new ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner {
    return new ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner {
    return new ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner | PlainMessage<ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner> | undefined, b: ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner | PlainMessage<ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner> | undefined): boolean {
    return proto3.util.equals(ContentV2ObjectCharcsSubjectIdGet200ResponseDataInner, a, b);
  }
}

