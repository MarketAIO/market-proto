//
//Описание API Контента
//
//<dl> <dt>Словарь сокращений:</dt> <dd>КТ — карточка товара</dd> <dd>НМ — номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>  <br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> <code>Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен.</code> 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/content/v1/_service.proto (package wb.content.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
    BinaryReadOptions,
    FieldList,
    JsonReadOptions,
    JsonValue,
    PartialMessage,
    PlainMessage
} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import {ContentV2BarcodesPostReq} from "./content_v2_barcodes_post_request_pb.js";
import {ContentV2CardsDeleteTrashPostReqInner} from "./content_v2_cards_delete_trash_post_request_inner_pb.js";
import {ContentV2CardsMoveNmPostReq} from "./content_v2_cards_move_nm_post_request_pb.js";
import {ContentV2CardsRecoverPostReqInner} from "./content_v2_cards_recover_post_request_inner_pb.js";
import {ContentV2CardsUpdatePostReqInner} from "./content_v2_cards_update_post_request_inner_pb.js";
import {ContentV2CardsUploadAddPostReq} from "./content_v2_cards_upload_add_post_request_pb.js";
import {ContentV2CardsUploadPostReqInner} from "./content_v2_cards_upload_post_request_inner_pb.js";
import {ContentV2GetCardsListPostReq} from "./content_v2_get_cards_list_post_request_pb.js";
import {ContentV2GetCardsTrashPostReq} from "./content_v2_get_cards_trash_post_request_pb.js";
import {ContentV2TagIdPatchReq} from "./content_v2_tag_id_patch_request_pb.js";
import {ContentV2TagNomenclatureLinkPostReq} from "./content_v2_tag_nomenclature_link_post_request_pb.js";
import {ContentV2TagPostReq} from "./content_v2_tag_post_request_pb.js";
import {ContentV3MediaSavePostReq} from "./content_v3_media_save_post_request_pb.js";

/**
 * @generated from message wb.content.v1.ContentV2BarcodesPostRequest
 */
export class ContentV2BarcodesPostRequest extends Message<ContentV2BarcodesPostRequest> {
  /**
   * @generated from field: wb.content.v1.ContentV2BarcodesPostReq contentV2BarcodesPostReq = 1;
   */
  contentV2BarcodesPostReq?: ContentV2BarcodesPostReq;

  constructor(data?: PartialMessage<ContentV2BarcodesPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2BarcodesPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2BarcodesPostReq", kind: "message", T: ContentV2BarcodesPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2BarcodesPostRequest {
    return new ContentV2BarcodesPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2BarcodesPostRequest {
    return new ContentV2BarcodesPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2BarcodesPostRequest {
    return new ContentV2BarcodesPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2BarcodesPostRequest | PlainMessage<ContentV2BarcodesPostRequest> | undefined, b: ContentV2BarcodesPostRequest | PlainMessage<ContentV2BarcodesPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2BarcodesPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2CardsDeleteTrashPostRequest
 */
export class ContentV2CardsDeleteTrashPostRequest extends Message<ContentV2CardsDeleteTrashPostRequest> {
  /**
   * @generated from field: repeated wb.content.v1.ContentV2CardsDeleteTrashPostReqInner contentV2CardsDeleteTrashPostReqInner = 1;
   */
  contentV2CardsDeleteTrashPostReqInner: ContentV2CardsDeleteTrashPostReqInner[] = [];

  constructor(data?: PartialMessage<ContentV2CardsDeleteTrashPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2CardsDeleteTrashPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2CardsDeleteTrashPostReqInner", kind: "message", T: ContentV2CardsDeleteTrashPostReqInner, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2CardsDeleteTrashPostRequest {
    return new ContentV2CardsDeleteTrashPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2CardsDeleteTrashPostRequest {
    return new ContentV2CardsDeleteTrashPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2CardsDeleteTrashPostRequest {
    return new ContentV2CardsDeleteTrashPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2CardsDeleteTrashPostRequest | PlainMessage<ContentV2CardsDeleteTrashPostRequest> | undefined, b: ContentV2CardsDeleteTrashPostRequest | PlainMessage<ContentV2CardsDeleteTrashPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2CardsDeleteTrashPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2CardsErrorListGetRequest
 */
export class ContentV2CardsErrorListGetRequest extends Message<ContentV2CardsErrorListGetRequest> {
  /**
   *  Параметр выбора языка значений полей ответа (для которых предусмотрена мультиязычность). <span class=\"new\">new</span>  Не используется в песочнице. 
   *
   * @generated from field: string locale = 1;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2CardsErrorListGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2CardsErrorListGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2CardsErrorListGetRequest {
    return new ContentV2CardsErrorListGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2CardsErrorListGetRequest {
    return new ContentV2CardsErrorListGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2CardsErrorListGetRequest {
    return new ContentV2CardsErrorListGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2CardsErrorListGetRequest | PlainMessage<ContentV2CardsErrorListGetRequest> | undefined, b: ContentV2CardsErrorListGetRequest | PlainMessage<ContentV2CardsErrorListGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2CardsErrorListGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2CardsMoveNmPostRequest
 */
export class ContentV2CardsMoveNmPostRequest extends Message<ContentV2CardsMoveNmPostRequest> {
  /**
   * @generated from field: wb.content.v1.ContentV2CardsMoveNmPostReq contentV2CardsMoveNmPostReq = 1;
   */
  contentV2CardsMoveNmPostReq?: ContentV2CardsMoveNmPostReq;

  constructor(data?: PartialMessage<ContentV2CardsMoveNmPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2CardsMoveNmPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2CardsMoveNmPostReq", kind: "message", T: ContentV2CardsMoveNmPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2CardsMoveNmPostRequest {
    return new ContentV2CardsMoveNmPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2CardsMoveNmPostRequest {
    return new ContentV2CardsMoveNmPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2CardsMoveNmPostRequest {
    return new ContentV2CardsMoveNmPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2CardsMoveNmPostRequest | PlainMessage<ContentV2CardsMoveNmPostRequest> | undefined, b: ContentV2CardsMoveNmPostRequest | PlainMessage<ContentV2CardsMoveNmPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2CardsMoveNmPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2CardsRecoverPostRequest
 */
export class ContentV2CardsRecoverPostRequest extends Message<ContentV2CardsRecoverPostRequest> {
  /**
   * @generated from field: repeated wb.content.v1.ContentV2CardsRecoverPostReqInner contentV2CardsRecoverPostReqInner = 1;
   */
  contentV2CardsRecoverPostReqInner: ContentV2CardsRecoverPostReqInner[] = [];

  constructor(data?: PartialMessage<ContentV2CardsRecoverPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2CardsRecoverPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2CardsRecoverPostReqInner", kind: "message", T: ContentV2CardsRecoverPostReqInner, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2CardsRecoverPostRequest {
    return new ContentV2CardsRecoverPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2CardsRecoverPostRequest {
    return new ContentV2CardsRecoverPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2CardsRecoverPostRequest {
    return new ContentV2CardsRecoverPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2CardsRecoverPostRequest | PlainMessage<ContentV2CardsRecoverPostRequest> | undefined, b: ContentV2CardsRecoverPostRequest | PlainMessage<ContentV2CardsRecoverPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2CardsRecoverPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2CardsUpdatePostRequest
 */
export class ContentV2CardsUpdatePostRequest extends Message<ContentV2CardsUpdatePostRequest> {
  /**
   * @generated from field: repeated wb.content.v1.ContentV2CardsUpdatePostReqInner contentV2CardsUpdatePostReqInner = 1;
   */
  contentV2CardsUpdatePostReqInner: ContentV2CardsUpdatePostReqInner[] = [];

  constructor(data?: PartialMessage<ContentV2CardsUpdatePostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2CardsUpdatePostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2CardsUpdatePostReqInner", kind: "message", T: ContentV2CardsUpdatePostReqInner, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2CardsUpdatePostRequest {
    return new ContentV2CardsUpdatePostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2CardsUpdatePostRequest {
    return new ContentV2CardsUpdatePostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2CardsUpdatePostRequest {
    return new ContentV2CardsUpdatePostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2CardsUpdatePostRequest | PlainMessage<ContentV2CardsUpdatePostRequest> | undefined, b: ContentV2CardsUpdatePostRequest | PlainMessage<ContentV2CardsUpdatePostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2CardsUpdatePostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2CardsUploadAddPostRequest
 */
export class ContentV2CardsUploadAddPostRequest extends Message<ContentV2CardsUploadAddPostRequest> {
  /**
   * @generated from field: wb.content.v1.ContentV2CardsUploadAddPostReq contentV2CardsUploadAddPostReq = 1;
   */
  contentV2CardsUploadAddPostReq?: ContentV2CardsUploadAddPostReq;

  constructor(data?: PartialMessage<ContentV2CardsUploadAddPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2CardsUploadAddPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2CardsUploadAddPostReq", kind: "message", T: ContentV2CardsUploadAddPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2CardsUploadAddPostRequest {
    return new ContentV2CardsUploadAddPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2CardsUploadAddPostRequest {
    return new ContentV2CardsUploadAddPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2CardsUploadAddPostRequest {
    return new ContentV2CardsUploadAddPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2CardsUploadAddPostRequest | PlainMessage<ContentV2CardsUploadAddPostRequest> | undefined, b: ContentV2CardsUploadAddPostRequest | PlainMessage<ContentV2CardsUploadAddPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2CardsUploadAddPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2CardsUploadPostRequest
 */
export class ContentV2CardsUploadPostRequest extends Message<ContentV2CardsUploadPostRequest> {
  /**
   * @generated from field: repeated wb.content.v1.ContentV2CardsUploadPostReqInner contentV2CardsUploadPostReqInner = 1;
   */
  contentV2CardsUploadPostReqInner: ContentV2CardsUploadPostReqInner[] = [];

  constructor(data?: PartialMessage<ContentV2CardsUploadPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2CardsUploadPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2CardsUploadPostReqInner", kind: "message", T: ContentV2CardsUploadPostReqInner, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2CardsUploadPostRequest {
    return new ContentV2CardsUploadPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2CardsUploadPostRequest {
    return new ContentV2CardsUploadPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2CardsUploadPostRequest {
    return new ContentV2CardsUploadPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2CardsUploadPostRequest | PlainMessage<ContentV2CardsUploadPostRequest> | undefined, b: ContentV2CardsUploadPostRequest | PlainMessage<ContentV2CardsUploadPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2CardsUploadPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2DirectoryColorsGetRequest
 */
export class ContentV2DirectoryColorsGetRequest extends Message<ContentV2DirectoryColorsGetRequest> {
  /**
   * Параметр выбора языка (ru, en, zh) значений полей `subjectName`, `name`. Не используется в песочнице
   *
   * @generated from field: string locale = 1;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2DirectoryColorsGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2DirectoryColorsGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2DirectoryColorsGetRequest {
    return new ContentV2DirectoryColorsGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2DirectoryColorsGetRequest {
    return new ContentV2DirectoryColorsGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2DirectoryColorsGetRequest {
    return new ContentV2DirectoryColorsGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2DirectoryColorsGetRequest | PlainMessage<ContentV2DirectoryColorsGetRequest> | undefined, b: ContentV2DirectoryColorsGetRequest | PlainMessage<ContentV2DirectoryColorsGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2DirectoryColorsGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2DirectoryCountriesGetRequest
 */
export class ContentV2DirectoryCountriesGetRequest extends Message<ContentV2DirectoryCountriesGetRequest> {
  /**
   * Параметр выбора языка (ru, en, zh) значений полей `subjectName`, `name`. Не используется в песочнице
   *
   * @generated from field: string locale = 1;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2DirectoryCountriesGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2DirectoryCountriesGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2DirectoryCountriesGetRequest {
    return new ContentV2DirectoryCountriesGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2DirectoryCountriesGetRequest {
    return new ContentV2DirectoryCountriesGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2DirectoryCountriesGetRequest {
    return new ContentV2DirectoryCountriesGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2DirectoryCountriesGetRequest | PlainMessage<ContentV2DirectoryCountriesGetRequest> | undefined, b: ContentV2DirectoryCountriesGetRequest | PlainMessage<ContentV2DirectoryCountriesGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2DirectoryCountriesGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2DirectoryKindsGetRequest
 */
export class ContentV2DirectoryKindsGetRequest extends Message<ContentV2DirectoryKindsGetRequest> {
  /**
   * Параметр выбора языка (ru, en, zh) значений полей `subjectName`, `name`. Не используется в песочнице
   *
   * @generated from field: string locale = 1;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2DirectoryKindsGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2DirectoryKindsGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2DirectoryKindsGetRequest {
    return new ContentV2DirectoryKindsGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2DirectoryKindsGetRequest {
    return new ContentV2DirectoryKindsGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2DirectoryKindsGetRequest {
    return new ContentV2DirectoryKindsGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2DirectoryKindsGetRequest | PlainMessage<ContentV2DirectoryKindsGetRequest> | undefined, b: ContentV2DirectoryKindsGetRequest | PlainMessage<ContentV2DirectoryKindsGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2DirectoryKindsGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2DirectorySeasonsGetRequest
 */
export class ContentV2DirectorySeasonsGetRequest extends Message<ContentV2DirectorySeasonsGetRequest> {
  /**
   * Параметр выбора языка (ru, en, zh) значений полей `subjectName`, `name`. Не используется в песочнице
   *
   * @generated from field: string locale = 1;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2DirectorySeasonsGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2DirectorySeasonsGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2DirectorySeasonsGetRequest {
    return new ContentV2DirectorySeasonsGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2DirectorySeasonsGetRequest {
    return new ContentV2DirectorySeasonsGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2DirectorySeasonsGetRequest {
    return new ContentV2DirectorySeasonsGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2DirectorySeasonsGetRequest | PlainMessage<ContentV2DirectorySeasonsGetRequest> | undefined, b: ContentV2DirectorySeasonsGetRequest | PlainMessage<ContentV2DirectorySeasonsGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2DirectorySeasonsGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2DirectoryTnvedGetRequest
 */
export class ContentV2DirectoryTnvedGetRequest extends Message<ContentV2DirectoryTnvedGetRequest> {
  /**
   * Идентификатор предмета
   *
   * @generated from field: int32 subjectID = 1;
   */
  subjectID = 0;

  /**
   * Поиск по ТНВЭД-коду. Работает только в паре с subjectID
   *
   * @generated from field: int32 search = 2;
   */
  search = 0;

  /**
   * Параметр выбора языка (ru, en, zh) значений полей `subjectName`, `name`. Не используется в песочнице
   *
   * @generated from field: string locale = 3;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2DirectoryTnvedGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2DirectoryTnvedGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subjectID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "search", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2DirectoryTnvedGetRequest {
    return new ContentV2DirectoryTnvedGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2DirectoryTnvedGetRequest {
    return new ContentV2DirectoryTnvedGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2DirectoryTnvedGetRequest {
    return new ContentV2DirectoryTnvedGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2DirectoryTnvedGetRequest | PlainMessage<ContentV2DirectoryTnvedGetRequest> | undefined, b: ContentV2DirectoryTnvedGetRequest | PlainMessage<ContentV2DirectoryTnvedGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2DirectoryTnvedGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2DirectoryVatGetRequest
 */
export class ContentV2DirectoryVatGetRequest extends Message<ContentV2DirectoryVatGetRequest> {
  /**
   * Язык значения элементов `data` (`ru`, `en`, `zh`). Не используется в песочнице
   *
   * @generated from field: string locale = 1;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2DirectoryVatGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2DirectoryVatGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2DirectoryVatGetRequest {
    return new ContentV2DirectoryVatGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2DirectoryVatGetRequest {
    return new ContentV2DirectoryVatGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2DirectoryVatGetRequest {
    return new ContentV2DirectoryVatGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2DirectoryVatGetRequest | PlainMessage<ContentV2DirectoryVatGetRequest> | undefined, b: ContentV2DirectoryVatGetRequest | PlainMessage<ContentV2DirectoryVatGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2DirectoryVatGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2GetCardsListPostRequest
 */
export class ContentV2GetCardsListPostRequest extends Message<ContentV2GetCardsListPostRequest> {
  /**
   * @generated from field: wb.content.v1.ContentV2GetCardsListPostReq contentV2GetCardsListPostReq = 1;
   */
  contentV2GetCardsListPostReq?: ContentV2GetCardsListPostReq;

  /**
   * Язык для перевода полей ответа `name`, `value` и `object`:  `ru` - русский, `en` - английский, `zh` - китайский.  Не используется в песочнице.   
   *
   * @generated from field: string locale = 2;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2GetCardsListPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2GetCardsListPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2GetCardsListPostReq", kind: "message", T: ContentV2GetCardsListPostReq },
    { no: 2, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2GetCardsListPostRequest {
    return new ContentV2GetCardsListPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2GetCardsListPostRequest {
    return new ContentV2GetCardsListPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2GetCardsListPostRequest {
    return new ContentV2GetCardsListPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2GetCardsListPostRequest | PlainMessage<ContentV2GetCardsListPostRequest> | undefined, b: ContentV2GetCardsListPostRequest | PlainMessage<ContentV2GetCardsListPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2GetCardsListPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2GetCardsTrashPostRequest
 */
export class ContentV2GetCardsTrashPostRequest extends Message<ContentV2GetCardsTrashPostRequest> {
  /**
   * @generated from field: wb.content.v1.ContentV2GetCardsTrashPostReq contentV2GetCardsTrashPostReq = 1;
   */
  contentV2GetCardsTrashPostReq?: ContentV2GetCardsTrashPostReq;

  /**
   * Язык полей ответа `name`, `value` и `object`: `ru`, `en`, `zh`.  Не используется в песочнице 
   *
   * @generated from field: string locale = 2;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2GetCardsTrashPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2GetCardsTrashPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2GetCardsTrashPostReq", kind: "message", T: ContentV2GetCardsTrashPostReq },
    { no: 2, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2GetCardsTrashPostRequest {
    return new ContentV2GetCardsTrashPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2GetCardsTrashPostRequest {
    return new ContentV2GetCardsTrashPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2GetCardsTrashPostRequest {
    return new ContentV2GetCardsTrashPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2GetCardsTrashPostRequest | PlainMessage<ContentV2GetCardsTrashPostRequest> | undefined, b: ContentV2GetCardsTrashPostRequest | PlainMessage<ContentV2GetCardsTrashPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2GetCardsTrashPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2ObjectAllGetRequest
 */
export class ContentV2ObjectAllGetRequest extends Message<ContentV2ObjectAllGetRequest> {
  /**
   * Поиск по наименованию предмета (Носки), поиск работает по подстроке, искать можно на любом из поддерживаемых языков.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * Количество подкатегорий (предметов), максимум 1 000
   *
   * @generated from field: int32 limit = 2;
   */
  limit = 0;

  /**
   * Язык полей ответа (ru, en, zh). Не используется в песочнице
   *
   * @generated from field: string locale = 3;
   */
  locale = "";

  /**
   * Номер позиции, с которой необходимо получить ответ
   *
   * @generated from field: int32 offset = 4;
   */
  offset = 0;

  /**
   * Идентификатор родительской категории предмета
   *
   * @generated from field: int32 parentID = 5;
   */
  parentID = 0;

  constructor(data?: PartialMessage<ContentV2ObjectAllGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2ObjectAllGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "parentID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2ObjectAllGetRequest {
    return new ContentV2ObjectAllGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2ObjectAllGetRequest {
    return new ContentV2ObjectAllGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2ObjectAllGetRequest {
    return new ContentV2ObjectAllGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2ObjectAllGetRequest | PlainMessage<ContentV2ObjectAllGetRequest> | undefined, b: ContentV2ObjectAllGetRequest | PlainMessage<ContentV2ObjectAllGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2ObjectAllGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2ObjectCharcsSubjectIdGetRequest
 */
export class ContentV2ObjectCharcsSubjectIdGetRequest extends Message<ContentV2ObjectCharcsSubjectIdGetRequest> {
  /**
   * Идентификатор предмета
   *
   * @generated from field: int32 subjectId = 1;
   */
  subjectId = 0;

  /**
   * Параметр выбора языка (ru, en, zh) значений полей `subjectName`, `name`. Не используется в песочнице
   *
   * @generated from field: string locale = 2;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2ObjectCharcsSubjectIdGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2ObjectCharcsSubjectIdGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subjectId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2ObjectCharcsSubjectIdGetRequest {
    return new ContentV2ObjectCharcsSubjectIdGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2ObjectCharcsSubjectIdGetRequest {
    return new ContentV2ObjectCharcsSubjectIdGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2ObjectCharcsSubjectIdGetRequest {
    return new ContentV2ObjectCharcsSubjectIdGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2ObjectCharcsSubjectIdGetRequest | PlainMessage<ContentV2ObjectCharcsSubjectIdGetRequest> | undefined, b: ContentV2ObjectCharcsSubjectIdGetRequest | PlainMessage<ContentV2ObjectCharcsSubjectIdGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2ObjectCharcsSubjectIdGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2ObjectParentAllGetRequest
 */
export class ContentV2ObjectParentAllGetRequest extends Message<ContentV2ObjectParentAllGetRequest> {
  /**
   * Параметр выбора языка (ru, en, zh) значений поля name. Не используется в песочнице
   *
   * @generated from field: string locale = 1;
   */
  locale = "";

  constructor(data?: PartialMessage<ContentV2ObjectParentAllGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2ObjectParentAllGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2ObjectParentAllGetRequest {
    return new ContentV2ObjectParentAllGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2ObjectParentAllGetRequest {
    return new ContentV2ObjectParentAllGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2ObjectParentAllGetRequest {
    return new ContentV2ObjectParentAllGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2ObjectParentAllGetRequest | PlainMessage<ContentV2ObjectParentAllGetRequest> | undefined, b: ContentV2ObjectParentAllGetRequest | PlainMessage<ContentV2ObjectParentAllGetRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2ObjectParentAllGetRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2TagIdDeleteRequest
 */
export class ContentV2TagIdDeleteRequest extends Message<ContentV2TagIdDeleteRequest> {
  /**
   * Числовой идентификатор тега
   *
   * @generated from field: int32 id = 1;
   */
  id = 0;

  constructor(data?: PartialMessage<ContentV2TagIdDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2TagIdDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2TagIdDeleteRequest {
    return new ContentV2TagIdDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2TagIdDeleteRequest {
    return new ContentV2TagIdDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2TagIdDeleteRequest {
    return new ContentV2TagIdDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2TagIdDeleteRequest | PlainMessage<ContentV2TagIdDeleteRequest> | undefined, b: ContentV2TagIdDeleteRequest | PlainMessage<ContentV2TagIdDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2TagIdDeleteRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2TagIdPatchRequest
 */
export class ContentV2TagIdPatchRequest extends Message<ContentV2TagIdPatchRequest> {
  /**
   * Числовой идентификатор тега
   *
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: wb.content.v1.ContentV2TagIdPatchReq contentV2TagIdPatchReq = 2;
   */
  contentV2TagIdPatchReq?: ContentV2TagIdPatchReq;

  constructor(data?: PartialMessage<ContentV2TagIdPatchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2TagIdPatchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "contentV2TagIdPatchReq", kind: "message", T: ContentV2TagIdPatchReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2TagIdPatchRequest {
    return new ContentV2TagIdPatchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2TagIdPatchRequest {
    return new ContentV2TagIdPatchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2TagIdPatchRequest {
    return new ContentV2TagIdPatchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2TagIdPatchRequest | PlainMessage<ContentV2TagIdPatchRequest> | undefined, b: ContentV2TagIdPatchRequest | PlainMessage<ContentV2TagIdPatchRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2TagIdPatchRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2TagNomenclatureLinkPostRequest
 */
export class ContentV2TagNomenclatureLinkPostRequest extends Message<ContentV2TagNomenclatureLinkPostRequest> {
  /**
   * @generated from field: wb.content.v1.ContentV2TagNomenclatureLinkPostReq contentV2TagNomenclatureLinkPostReq = 1;
   */
  contentV2TagNomenclatureLinkPostReq?: ContentV2TagNomenclatureLinkPostReq;

  constructor(data?: PartialMessage<ContentV2TagNomenclatureLinkPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2TagNomenclatureLinkPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2TagNomenclatureLinkPostReq", kind: "message", T: ContentV2TagNomenclatureLinkPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2TagNomenclatureLinkPostRequest {
    return new ContentV2TagNomenclatureLinkPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2TagNomenclatureLinkPostRequest {
    return new ContentV2TagNomenclatureLinkPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2TagNomenclatureLinkPostRequest {
    return new ContentV2TagNomenclatureLinkPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2TagNomenclatureLinkPostRequest | PlainMessage<ContentV2TagNomenclatureLinkPostRequest> | undefined, b: ContentV2TagNomenclatureLinkPostRequest | PlainMessage<ContentV2TagNomenclatureLinkPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2TagNomenclatureLinkPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV2TagPostRequest
 */
export class ContentV2TagPostRequest extends Message<ContentV2TagPostRequest> {
  /**
   * @generated from field: wb.content.v1.ContentV2TagPostReq contentV2TagPostReq = 1;
   */
  contentV2TagPostReq?: ContentV2TagPostReq;

  constructor(data?: PartialMessage<ContentV2TagPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV2TagPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV2TagPostReq", kind: "message", T: ContentV2TagPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV2TagPostRequest {
    return new ContentV2TagPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV2TagPostRequest {
    return new ContentV2TagPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV2TagPostRequest {
    return new ContentV2TagPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV2TagPostRequest | PlainMessage<ContentV2TagPostRequest> | undefined, b: ContentV2TagPostRequest | PlainMessage<ContentV2TagPostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV2TagPostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV3MediaFilePostRequest
 */
export class ContentV3MediaFilePostRequest extends Message<ContentV3MediaFilePostRequest> {
  /**
   * Артикул Wildberries
   *
   * @generated from field: string xNmId = 1;
   */
  xNmId = "";

  /**
   * Номер медиафайла на загрузку, начинается с `1`. При загрузке видео всегда указывайте `1`.  Чтобы добавить изображение к уже загруженным, номер медиафайла должен быть больше количества уже загруженных медиафайлов. 
   *
   * @generated from field: int32 xPhotoNumber = 2;
   */
  xPhotoNumber = 0;

  /**
   * @generated from field: string uploadfile = 3;
   */
  uploadfile = "";

  constructor(data?: PartialMessage<ContentV3MediaFilePostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV3MediaFilePostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "xNmId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "xPhotoNumber", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "uploadfile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV3MediaFilePostRequest {
    return new ContentV3MediaFilePostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV3MediaFilePostRequest {
    return new ContentV3MediaFilePostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV3MediaFilePostRequest {
    return new ContentV3MediaFilePostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV3MediaFilePostRequest | PlainMessage<ContentV3MediaFilePostRequest> | undefined, b: ContentV3MediaFilePostRequest | PlainMessage<ContentV3MediaFilePostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV3MediaFilePostRequest, a, b);
  }
}

/**
 * @generated from message wb.content.v1.ContentV3MediaSavePostRequest
 */
export class ContentV3MediaSavePostRequest extends Message<ContentV3MediaSavePostRequest> {
  /**
   * @generated from field: wb.content.v1.ContentV3MediaSavePostReq contentV3MediaSavePostReq = 1;
   */
  contentV3MediaSavePostReq?: ContentV3MediaSavePostReq;

  constructor(data?: PartialMessage<ContentV3MediaSavePostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.content.v1.ContentV3MediaSavePostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "contentV3MediaSavePostReq", kind: "message", T: ContentV3MediaSavePostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ContentV3MediaSavePostRequest {
    return new ContentV3MediaSavePostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ContentV3MediaSavePostRequest {
    return new ContentV3MediaSavePostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ContentV3MediaSavePostRequest {
    return new ContentV3MediaSavePostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ContentV3MediaSavePostRequest | PlainMessage<ContentV3MediaSavePostRequest> | undefined, b: ContentV3MediaSavePostRequest | PlainMessage<ContentV3MediaSavePostRequest> | undefined): boolean {
    return proto3.util.equals(ContentV3MediaSavePostRequest, a, b);
  }
}

