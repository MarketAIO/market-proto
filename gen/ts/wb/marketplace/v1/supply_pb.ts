//
//Описание API Marketplace
//
//No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/marketplace/v1/supply.proto (package wb.marketplace.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.marketplace.v1.Supply
 */
export class Supply extends Message<Supply> {
  /**
   * Идентификатор поставки
   *
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * Флаг закрытия поставки
   *
   * @generated from field: bool done = 2;
   */
  done = false;

  /**
   * Дата создания поставки (RFC3339)
   *
   * @generated from field: string createdAt = 3;
   */
  createdAt = "";

  /**
   * Дата закрытия поставки (RFC3339)
   *
   * @generated from field: string closedAt = 4;
   */
  closedAt = "";

  /**
   * Дата скана поставки (RFC3339)
   *
   * @generated from field: string scanDt = 5;
   */
  scanDt = "";

  /**
   * Наименование поставки
   *
   * @generated from field: string name = 6;
   */
  name = "";

  /**
   * @generated from field: wb.marketplace.v1.Supply.CargoTypeEnum cargoType = 7;
   */
  cargoType = Supply_CargoTypeEnum.CargoTypeEnum__0;

  constructor(data?: PartialMessage<Supply>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.Supply";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "done", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "createdAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "closedAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "scanDt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "cargoType", kind: "enum", T: proto3.getEnumType(Supply_CargoTypeEnum) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Supply {
    return new Supply().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Supply {
    return new Supply().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Supply {
    return new Supply().fromJsonString(jsonString, options);
  }

  static equals(a: Supply | PlainMessage<Supply> | undefined, b: Supply | PlainMessage<Supply> | undefined): boolean {
    return proto3.util.equals(Supply, a, b);
  }
}

/**
 * <dl> <dt>Тип поставки:</dt> <dd>0 - признак отсутствует</dd> <dd>1 - обычная</dd> <dd>2 - СГТ (Содержит сверхгабаритные товары)</dd> <dd>3 - КГТ (Содержит крупногабаритные товары). Не используется на данный момент.</dd> </dl> 
 *
 * @generated from enum wb.marketplace.v1.Supply.CargoTypeEnum
 */
export enum Supply_CargoTypeEnum {
  /**
   * @generated from enum value: CargoTypeEnum__0 = 0;
   */
  CargoTypeEnum__0 = 0,

  /**
   * @generated from enum value: CargoTypeEnum__1 = 1;
   */
  CargoTypeEnum__1 = 1,

  /**
   * @generated from enum value: CargoTypeEnum__2 = 2;
   */
  CargoTypeEnum__2 = 2,

  /**
   * @generated from enum value: CargoTypeEnum__3 = 3;
   */
  CargoTypeEnum__3 = 3,
}
// Retrieve enum metadata with: proto3.getEnumType(Supply_CargoTypeEnum)
proto3.util.setEnumType(Supply_CargoTypeEnum, "wb.marketplace.v1.Supply.CargoTypeEnum", [
  { no: 0, name: "CargoTypeEnum__0" },
  { no: 1, name: "CargoTypeEnum__1" },
  { no: 2, name: "CargoTypeEnum__2" },
  { no: 3, name: "CargoTypeEnum__3" },
]);

