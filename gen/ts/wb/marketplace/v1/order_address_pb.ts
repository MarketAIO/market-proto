//
//Описание API Marketplace
//
//No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/marketplace/v1/order_address.proto (package wb.marketplace.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.marketplace.v1.OrderAddress
 */
export class OrderAddress extends Message<OrderAddress> {
  /**
   * Адрес доставки.
   *
   * @generated from field: string fullAddress = 1;
   */
  fullAddress = "";

  /**
   * Область
   *
   * @generated from field: string province = 2;
   */
  province = "";

  /**
   * Район
   *
   * @generated from field: string area = 3;
   */
  area = "";

  /**
   * Город
   *
   * @generated from field: string city = 4;
   */
  city = "";

  /**
   * Улица
   *
   * @generated from field: string street = 5;
   */
  street = "";

  /**
   * Номер дома
   *
   * @generated from field: string home = 6;
   */
  home = "";

  /**
   * Номер квартиры
   *
   * @generated from field: string flat = 7;
   */
  flat = "";

  /**
   * Подъезд
   *
   * @generated from field: string entrance = 8;
   */
  entrance = "";

  /**
   * Координата долготы
   *
   * @generated from field: float longitude = 9;
   */
  longitude = 0;

  /**
   * Координаты широты
   *
   * @generated from field: float latitude = 10;
   */
  latitude = 0;

  constructor(data?: PartialMessage<OrderAddress>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.OrderAddress";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "fullAddress", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "province", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "area", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "city", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "street", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "home", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "flat", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "entrance", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "longitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 10, name: "latitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OrderAddress {
    return new OrderAddress().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OrderAddress {
    return new OrderAddress().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OrderAddress {
    return new OrderAddress().fromJsonString(jsonString, options);
  }

  static equals(a: OrderAddress | PlainMessage<OrderAddress> | undefined, b: OrderAddress | PlainMessage<OrderAddress> | undefined): boolean {
    return proto3.util.equals(OrderAddress, a, b);
  }
}

