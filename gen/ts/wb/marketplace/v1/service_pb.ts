//
//Описание API Marketplace
//
//No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/marketplace/v1/service.proto (package wb.marketplace.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { ApiV3OrdersStickersPostReq } from "./api_v3_orders_stickers_post_request_pb.js";
import { Office } from "./office_pb.js";
import { ApiV3OrdersOrderIdMetaGtinPutReq } from "./api_v3_orders_order_id_meta_gtin_put_request_pb.js";
import { ApiV3OrdersOrderIdMetaImeiPutReq } from "./api_v3_orders_order_id_meta_imei_put_request_pb.js";
import { ApiV3OrdersOrderIdMetaSgtinPutReq } from "./api_v3_orders_order_id_meta_sgtin_put_request_pb.js";
import { ApiV3OrdersOrderIdMetaUinPutReq } from "./api_v3_orders_order_id_meta_uin_put_request_pb.js";
import { ApiV3OrdersStatusPostReq } from "./api_v3_orders_status_post_request_pb.js";
import { Pass } from "./pass_pb.js";
import { PassOffice } from "./pass_office_pb.js";
import { ApiV3PassesPassIdPutReq } from "./api_v3_passes_pass_id_put_request_pb.js";
import { ApiV3PassesPostReq } from "./api_v3_passes_post_request_pb.js";
import { ApiV3StocksWarehouseIdDeleteReq } from "./api_v3_stocks_warehouse_id_delete_request_pb.js";
import { ApiV3StocksWarehouseIdPostReq } from "./api_v3_stocks_warehouse_id_post_request_pb.js";
import { ApiV3StocksWarehouseIdPutReq } from "./api_v3_stocks_warehouse_id_put_request_pb.js";
import { ApiV3SuppliesPostReq } from "./api_v3_supplies_post_request_pb.js";
import { ApiV3SuppliesSupplyIdTrbxDeleteReq } from "./api_v3_supplies_supply_id_trbx_delete_request_pb.js";
import { ApiV3SuppliesSupplyIdTrbxPostReq } from "./api_v3_supplies_supply_id_trbx_post_request_pb.js";
import { ApiV3SuppliesSupplyIdTrbxStickersPostReq } from "./api_v3_supplies_supply_id_trbx_stickers_post_request_pb.js";
import { ApiV3SuppliesSupplyIdTrbxTrbxIdPatchReq } from "./api_v3_supplies_supply_id_trbx_trbx_id_patch_request_pb.js";
import { Warehouse } from "./warehouse_pb.js";
import { ApiV3WarehousesPostReq } from "./api_v3_warehouses_post_request_pb.js";
import { ApiV3WarehousesWarehouseIdPutReq } from "./api_v3_warehouses_warehouse_id_put_request_pb.js";

/**
 * @generated from message wb.marketplace.v1.ApiV3FilesOrdersExternalStickersPostRequest
 */
export class ApiV3FilesOrdersExternalStickersPostRequest extends Message<ApiV3FilesOrdersExternalStickersPostRequest> {
  /**
   * @generated from field: wb.marketplace.v1.ApiV3OrdersStickersPostReq apiV3OrdersStickersPostReq = 1;
   */
  apiV3OrdersStickersPostReq?: ApiV3OrdersStickersPostReq;

  constructor(data?: PartialMessage<ApiV3FilesOrdersExternalStickersPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3FilesOrdersExternalStickersPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apiV3OrdersStickersPostReq", kind: "message", T: ApiV3OrdersStickersPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3FilesOrdersExternalStickersPostRequest {
    return new ApiV3FilesOrdersExternalStickersPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3FilesOrdersExternalStickersPostRequest {
    return new ApiV3FilesOrdersExternalStickersPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3FilesOrdersExternalStickersPostRequest {
    return new ApiV3FilesOrdersExternalStickersPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3FilesOrdersExternalStickersPostRequest | PlainMessage<ApiV3FilesOrdersExternalStickersPostRequest> | undefined, b: ApiV3FilesOrdersExternalStickersPostRequest | PlainMessage<ApiV3FilesOrdersExternalStickersPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3FilesOrdersExternalStickersPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OfficesGetResponse
 */
export class ApiV3OfficesGetResponse extends Message<ApiV3OfficesGetResponse> {
  /**
   * @generated from field: repeated wb.marketplace.v1.Office data = 1;
   */
  data: Office[] = [];

  constructor(data?: PartialMessage<ApiV3OfficesGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OfficesGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "message", T: Office, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OfficesGetResponse {
    return new ApiV3OfficesGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OfficesGetResponse {
    return new ApiV3OfficesGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OfficesGetResponse {
    return new ApiV3OfficesGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OfficesGetResponse | PlainMessage<ApiV3OfficesGetResponse> | undefined, b: ApiV3OfficesGetResponse | PlainMessage<ApiV3OfficesGetResponse> | undefined): boolean {
    return proto3.util.equals(ApiV3OfficesGetResponse, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersGetRequest
 */
export class ApiV3OrdersGetRequest extends Message<ApiV3OrdersGetRequest> {
  /**
   * Параметр пагинации. Устанавливает предельное количество возвращаемых данных.
   *
   * @generated from field: int32 limit = 1;
   */
  limit = 0;

  /**
   * Параметр пагинации. Устанавливает значение, с которого надо получить следующий пакет данных. Для получения полного списка данных должен быть равен 0 в первом запросе. Для следующих запросов необходимо брать значения из одноимённого поля в ответе.
   *
   * @generated from field: int64 next = 2;
   */
  next = protoInt64.zero;

  /**
   * Дата начала периода в формате Unix timestamp. Необязательный параметр.
   *
   * @generated from field: int32 dateFrom = 3;
   */
  dateFrom = 0;

  /**
   * Дата конца периода в формате Unix timestamp. Необязательный параметр.
   *
   * @generated from field: int32 dateTo = 4;
   */
  dateTo = 0;

  constructor(data?: PartialMessage<ApiV3OrdersGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "next", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "dateFrom", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "dateTo", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersGetRequest {
    return new ApiV3OrdersGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersGetRequest {
    return new ApiV3OrdersGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersGetRequest {
    return new ApiV3OrdersGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersGetRequest | PlainMessage<ApiV3OrdersGetRequest> | undefined, b: ApiV3OrdersGetRequest | PlainMessage<ApiV3OrdersGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersGetRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersOrderIdCancelPatchRequest
 */
export class ApiV3OrdersOrderIdCancelPatchRequest extends Message<ApiV3OrdersOrderIdCancelPatchRequest> {
  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 1;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<ApiV3OrdersOrderIdCancelPatchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersOrderIdCancelPatchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersOrderIdCancelPatchRequest {
    return new ApiV3OrdersOrderIdCancelPatchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdCancelPatchRequest {
    return new ApiV3OrdersOrderIdCancelPatchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdCancelPatchRequest {
    return new ApiV3OrdersOrderIdCancelPatchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersOrderIdCancelPatchRequest | PlainMessage<ApiV3OrdersOrderIdCancelPatchRequest> | undefined, b: ApiV3OrdersOrderIdCancelPatchRequest | PlainMessage<ApiV3OrdersOrderIdCancelPatchRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersOrderIdCancelPatchRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersOrderIdMetaDeleteRequest
 */
export class ApiV3OrdersOrderIdMetaDeleteRequest extends Message<ApiV3OrdersOrderIdMetaDeleteRequest> {
  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 1;
   */
  orderId = protoInt64.zero;

  /**
   * Название метаданных для удаления (**imei**, **uin**, **gtin**, **sgtin**). Передается только одно значение.
   *
   * @generated from field: string key = 2;
   */
  key = "";

  constructor(data?: PartialMessage<ApiV3OrdersOrderIdMetaDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersOrderIdMetaDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersOrderIdMetaDeleteRequest {
    return new ApiV3OrdersOrderIdMetaDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaDeleteRequest {
    return new ApiV3OrdersOrderIdMetaDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaDeleteRequest {
    return new ApiV3OrdersOrderIdMetaDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersOrderIdMetaDeleteRequest | PlainMessage<ApiV3OrdersOrderIdMetaDeleteRequest> | undefined, b: ApiV3OrdersOrderIdMetaDeleteRequest | PlainMessage<ApiV3OrdersOrderIdMetaDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersOrderIdMetaDeleteRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersOrderIdMetaGetRequest
 */
export class ApiV3OrdersOrderIdMetaGetRequest extends Message<ApiV3OrdersOrderIdMetaGetRequest> {
  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 1;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<ApiV3OrdersOrderIdMetaGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersOrderIdMetaGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersOrderIdMetaGetRequest {
    return new ApiV3OrdersOrderIdMetaGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaGetRequest {
    return new ApiV3OrdersOrderIdMetaGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaGetRequest {
    return new ApiV3OrdersOrderIdMetaGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersOrderIdMetaGetRequest | PlainMessage<ApiV3OrdersOrderIdMetaGetRequest> | undefined, b: ApiV3OrdersOrderIdMetaGetRequest | PlainMessage<ApiV3OrdersOrderIdMetaGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersOrderIdMetaGetRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersOrderIdMetaGtinPutRequest
 */
export class ApiV3OrdersOrderIdMetaGtinPutRequest extends Message<ApiV3OrdersOrderIdMetaGtinPutRequest> {
  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 1;
   */
  orderId = protoInt64.zero;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3OrdersOrderIdMetaGtinPutReq apiV3OrdersOrderIdMetaGtinPutReq = 2;
   */
  apiV3OrdersOrderIdMetaGtinPutReq?: ApiV3OrdersOrderIdMetaGtinPutReq;

  constructor(data?: PartialMessage<ApiV3OrdersOrderIdMetaGtinPutRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersOrderIdMetaGtinPutRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3OrdersOrderIdMetaGtinPutReq", kind: "message", T: ApiV3OrdersOrderIdMetaGtinPutReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersOrderIdMetaGtinPutRequest {
    return new ApiV3OrdersOrderIdMetaGtinPutRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaGtinPutRequest {
    return new ApiV3OrdersOrderIdMetaGtinPutRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaGtinPutRequest {
    return new ApiV3OrdersOrderIdMetaGtinPutRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersOrderIdMetaGtinPutRequest | PlainMessage<ApiV3OrdersOrderIdMetaGtinPutRequest> | undefined, b: ApiV3OrdersOrderIdMetaGtinPutRequest | PlainMessage<ApiV3OrdersOrderIdMetaGtinPutRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersOrderIdMetaGtinPutRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersOrderIdMetaImeiPutRequest
 */
export class ApiV3OrdersOrderIdMetaImeiPutRequest extends Message<ApiV3OrdersOrderIdMetaImeiPutRequest> {
  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 1;
   */
  orderId = protoInt64.zero;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3OrdersOrderIdMetaImeiPutReq apiV3OrdersOrderIdMetaImeiPutReq = 2;
   */
  apiV3OrdersOrderIdMetaImeiPutReq?: ApiV3OrdersOrderIdMetaImeiPutReq;

  constructor(data?: PartialMessage<ApiV3OrdersOrderIdMetaImeiPutRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersOrderIdMetaImeiPutRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3OrdersOrderIdMetaImeiPutReq", kind: "message", T: ApiV3OrdersOrderIdMetaImeiPutReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersOrderIdMetaImeiPutRequest {
    return new ApiV3OrdersOrderIdMetaImeiPutRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaImeiPutRequest {
    return new ApiV3OrdersOrderIdMetaImeiPutRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaImeiPutRequest {
    return new ApiV3OrdersOrderIdMetaImeiPutRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersOrderIdMetaImeiPutRequest | PlainMessage<ApiV3OrdersOrderIdMetaImeiPutRequest> | undefined, b: ApiV3OrdersOrderIdMetaImeiPutRequest | PlainMessage<ApiV3OrdersOrderIdMetaImeiPutRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersOrderIdMetaImeiPutRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersOrderIdMetaSgtinPutRequest
 */
export class ApiV3OrdersOrderIdMetaSgtinPutRequest extends Message<ApiV3OrdersOrderIdMetaSgtinPutRequest> {
  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 1;
   */
  orderId = protoInt64.zero;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3OrdersOrderIdMetaSgtinPutReq apiV3OrdersOrderIdMetaSgtinPutReq = 2;
   */
  apiV3OrdersOrderIdMetaSgtinPutReq?: ApiV3OrdersOrderIdMetaSgtinPutReq;

  constructor(data?: PartialMessage<ApiV3OrdersOrderIdMetaSgtinPutRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersOrderIdMetaSgtinPutRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3OrdersOrderIdMetaSgtinPutReq", kind: "message", T: ApiV3OrdersOrderIdMetaSgtinPutReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersOrderIdMetaSgtinPutRequest {
    return new ApiV3OrdersOrderIdMetaSgtinPutRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaSgtinPutRequest {
    return new ApiV3OrdersOrderIdMetaSgtinPutRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaSgtinPutRequest {
    return new ApiV3OrdersOrderIdMetaSgtinPutRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersOrderIdMetaSgtinPutRequest | PlainMessage<ApiV3OrdersOrderIdMetaSgtinPutRequest> | undefined, b: ApiV3OrdersOrderIdMetaSgtinPutRequest | PlainMessage<ApiV3OrdersOrderIdMetaSgtinPutRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersOrderIdMetaSgtinPutRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersOrderIdMetaUinPutRequest
 */
export class ApiV3OrdersOrderIdMetaUinPutRequest extends Message<ApiV3OrdersOrderIdMetaUinPutRequest> {
  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 1;
   */
  orderId = protoInt64.zero;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3OrdersOrderIdMetaUinPutReq apiV3OrdersOrderIdMetaUinPutReq = 2;
   */
  apiV3OrdersOrderIdMetaUinPutReq?: ApiV3OrdersOrderIdMetaUinPutReq;

  constructor(data?: PartialMessage<ApiV3OrdersOrderIdMetaUinPutRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersOrderIdMetaUinPutRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3OrdersOrderIdMetaUinPutReq", kind: "message", T: ApiV3OrdersOrderIdMetaUinPutReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersOrderIdMetaUinPutRequest {
    return new ApiV3OrdersOrderIdMetaUinPutRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaUinPutRequest {
    return new ApiV3OrdersOrderIdMetaUinPutRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersOrderIdMetaUinPutRequest {
    return new ApiV3OrdersOrderIdMetaUinPutRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersOrderIdMetaUinPutRequest | PlainMessage<ApiV3OrdersOrderIdMetaUinPutRequest> | undefined, b: ApiV3OrdersOrderIdMetaUinPutRequest | PlainMessage<ApiV3OrdersOrderIdMetaUinPutRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersOrderIdMetaUinPutRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersStatusPostRequest
 */
export class ApiV3OrdersStatusPostRequest extends Message<ApiV3OrdersStatusPostRequest> {
  /**
   * @generated from field: wb.marketplace.v1.ApiV3OrdersStatusPostReq apiV3OrdersStatusPostReq = 1;
   */
  apiV3OrdersStatusPostReq?: ApiV3OrdersStatusPostReq;

  constructor(data?: PartialMessage<ApiV3OrdersStatusPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersStatusPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apiV3OrdersStatusPostReq", kind: "message", T: ApiV3OrdersStatusPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersStatusPostRequest {
    return new ApiV3OrdersStatusPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersStatusPostRequest {
    return new ApiV3OrdersStatusPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersStatusPostRequest {
    return new ApiV3OrdersStatusPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersStatusPostRequest | PlainMessage<ApiV3OrdersStatusPostRequest> | undefined, b: ApiV3OrdersStatusPostRequest | PlainMessage<ApiV3OrdersStatusPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersStatusPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3OrdersStickersPostRequest
 */
export class ApiV3OrdersStickersPostRequest extends Message<ApiV3OrdersStickersPostRequest> {
  /**
   * Тип этикетки
   *
   * @generated from field: string type = 1;
   */
  type = "";

  /**
   * Ширина этикетки
   *
   * @generated from field: int32 width = 2;
   */
  width = 0;

  /**
   * Высота этикетки
   *
   * @generated from field: int32 height = 3;
   */
  height = 0;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3OrdersStickersPostReq apiV3OrdersStickersPostReq = 4;
   */
  apiV3OrdersStickersPostReq?: ApiV3OrdersStickersPostReq;

  constructor(data?: PartialMessage<ApiV3OrdersStickersPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3OrdersStickersPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "width", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "height", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "apiV3OrdersStickersPostReq", kind: "message", T: ApiV3OrdersStickersPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3OrdersStickersPostRequest {
    return new ApiV3OrdersStickersPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3OrdersStickersPostRequest {
    return new ApiV3OrdersStickersPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3OrdersStickersPostRequest {
    return new ApiV3OrdersStickersPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3OrdersStickersPostRequest | PlainMessage<ApiV3OrdersStickersPostRequest> | undefined, b: ApiV3OrdersStickersPostRequest | PlainMessage<ApiV3OrdersStickersPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3OrdersStickersPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3PassesGetResponse
 */
export class ApiV3PassesGetResponse extends Message<ApiV3PassesGetResponse> {
  /**
   * @generated from field: repeated wb.marketplace.v1.Pass data = 1;
   */
  data: Pass[] = [];

  constructor(data?: PartialMessage<ApiV3PassesGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3PassesGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "message", T: Pass, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3PassesGetResponse {
    return new ApiV3PassesGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3PassesGetResponse {
    return new ApiV3PassesGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3PassesGetResponse {
    return new ApiV3PassesGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3PassesGetResponse | PlainMessage<ApiV3PassesGetResponse> | undefined, b: ApiV3PassesGetResponse | PlainMessage<ApiV3PassesGetResponse> | undefined): boolean {
    return proto3.util.equals(ApiV3PassesGetResponse, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3PassesOfficesGetResponse
 */
export class ApiV3PassesOfficesGetResponse extends Message<ApiV3PassesOfficesGetResponse> {
  /**
   * @generated from field: repeated wb.marketplace.v1.PassOffice data = 1;
   */
  data: PassOffice[] = [];

  constructor(data?: PartialMessage<ApiV3PassesOfficesGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3PassesOfficesGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "message", T: PassOffice, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3PassesOfficesGetResponse {
    return new ApiV3PassesOfficesGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3PassesOfficesGetResponse {
    return new ApiV3PassesOfficesGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3PassesOfficesGetResponse {
    return new ApiV3PassesOfficesGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3PassesOfficesGetResponse | PlainMessage<ApiV3PassesOfficesGetResponse> | undefined, b: ApiV3PassesOfficesGetResponse | PlainMessage<ApiV3PassesOfficesGetResponse> | undefined): boolean {
    return proto3.util.equals(ApiV3PassesOfficesGetResponse, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3PassesPassIdDeleteRequest
 */
export class ApiV3PassesPassIdDeleteRequest extends Message<ApiV3PassesPassIdDeleteRequest> {
  /**
   * ID пропуска
   *
   * @generated from field: int64 passId = 1;
   */
  passId = protoInt64.zero;

  constructor(data?: PartialMessage<ApiV3PassesPassIdDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3PassesPassIdDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "passId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3PassesPassIdDeleteRequest {
    return new ApiV3PassesPassIdDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3PassesPassIdDeleteRequest {
    return new ApiV3PassesPassIdDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3PassesPassIdDeleteRequest {
    return new ApiV3PassesPassIdDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3PassesPassIdDeleteRequest | PlainMessage<ApiV3PassesPassIdDeleteRequest> | undefined, b: ApiV3PassesPassIdDeleteRequest | PlainMessage<ApiV3PassesPassIdDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3PassesPassIdDeleteRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3PassesPassIdPutRequest
 */
export class ApiV3PassesPassIdPutRequest extends Message<ApiV3PassesPassIdPutRequest> {
  /**
   * ID пропуска
   *
   * @generated from field: int64 passId = 1;
   */
  passId = protoInt64.zero;

  /**
   * Общая длина ФИО ограничена от 6 до 100 символов. В номере машины могут быть только буквы и цифры.
   *
   * @generated from field: wb.marketplace.v1.ApiV3PassesPassIdPutReq apiV3PassesPassIdPutReq = 2;
   */
  apiV3PassesPassIdPutReq?: ApiV3PassesPassIdPutReq;

  constructor(data?: PartialMessage<ApiV3PassesPassIdPutRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3PassesPassIdPutRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "passId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3PassesPassIdPutReq", kind: "message", T: ApiV3PassesPassIdPutReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3PassesPassIdPutRequest {
    return new ApiV3PassesPassIdPutRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3PassesPassIdPutRequest {
    return new ApiV3PassesPassIdPutRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3PassesPassIdPutRequest {
    return new ApiV3PassesPassIdPutRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3PassesPassIdPutRequest | PlainMessage<ApiV3PassesPassIdPutRequest> | undefined, b: ApiV3PassesPassIdPutRequest | PlainMessage<ApiV3PassesPassIdPutRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3PassesPassIdPutRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3PassesPostRequest
 */
export class ApiV3PassesPostRequest extends Message<ApiV3PassesPostRequest> {
  /**
   * Общая длина ФИО ограничена от 6 до 100 символов. В номере машины могут быть только буквы и цифры.
   *
   * @generated from field: wb.marketplace.v1.ApiV3PassesPostReq apiV3PassesPostReq = 1;
   */
  apiV3PassesPostReq?: ApiV3PassesPostReq;

  constructor(data?: PartialMessage<ApiV3PassesPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3PassesPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apiV3PassesPostReq", kind: "message", T: ApiV3PassesPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3PassesPostRequest {
    return new ApiV3PassesPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3PassesPostRequest {
    return new ApiV3PassesPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3PassesPostRequest {
    return new ApiV3PassesPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3PassesPostRequest | PlainMessage<ApiV3PassesPostRequest> | undefined, b: ApiV3PassesPostRequest | PlainMessage<ApiV3PassesPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3PassesPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3StocksWarehouseIdDeleteRequest
 */
export class ApiV3StocksWarehouseIdDeleteRequest extends Message<ApiV3StocksWarehouseIdDeleteRequest> {
  /**
   * ID склада продавца
   *
   * @generated from field: int64 warehouseId = 1;
   */
  warehouseId = protoInt64.zero;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3StocksWarehouseIdDeleteReq apiV3StocksWarehouseIdDeleteReq = 2;
   */
  apiV3StocksWarehouseIdDeleteReq?: ApiV3StocksWarehouseIdDeleteReq;

  constructor(data?: PartialMessage<ApiV3StocksWarehouseIdDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3StocksWarehouseIdDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "warehouseId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3StocksWarehouseIdDeleteReq", kind: "message", T: ApiV3StocksWarehouseIdDeleteReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3StocksWarehouseIdDeleteRequest {
    return new ApiV3StocksWarehouseIdDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3StocksWarehouseIdDeleteRequest {
    return new ApiV3StocksWarehouseIdDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3StocksWarehouseIdDeleteRequest {
    return new ApiV3StocksWarehouseIdDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3StocksWarehouseIdDeleteRequest | PlainMessage<ApiV3StocksWarehouseIdDeleteRequest> | undefined, b: ApiV3StocksWarehouseIdDeleteRequest | PlainMessage<ApiV3StocksWarehouseIdDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3StocksWarehouseIdDeleteRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3StocksWarehouseIdPostRequest
 */
export class ApiV3StocksWarehouseIdPostRequest extends Message<ApiV3StocksWarehouseIdPostRequest> {
  /**
   * ID склада продавца
   *
   * @generated from field: int64 warehouseId = 1;
   */
  warehouseId = protoInt64.zero;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3StocksWarehouseIdPostReq apiV3StocksWarehouseIdPostReq = 2;
   */
  apiV3StocksWarehouseIdPostReq?: ApiV3StocksWarehouseIdPostReq;

  constructor(data?: PartialMessage<ApiV3StocksWarehouseIdPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3StocksWarehouseIdPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "warehouseId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3StocksWarehouseIdPostReq", kind: "message", T: ApiV3StocksWarehouseIdPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3StocksWarehouseIdPostRequest {
    return new ApiV3StocksWarehouseIdPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3StocksWarehouseIdPostRequest {
    return new ApiV3StocksWarehouseIdPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3StocksWarehouseIdPostRequest {
    return new ApiV3StocksWarehouseIdPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3StocksWarehouseIdPostRequest | PlainMessage<ApiV3StocksWarehouseIdPostRequest> | undefined, b: ApiV3StocksWarehouseIdPostRequest | PlainMessage<ApiV3StocksWarehouseIdPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3StocksWarehouseIdPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3StocksWarehouseIdPutRequest
 */
export class ApiV3StocksWarehouseIdPutRequest extends Message<ApiV3StocksWarehouseIdPutRequest> {
  /**
   * ID склада продавца
   *
   * @generated from field: int64 warehouseId = 1;
   */
  warehouseId = protoInt64.zero;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3StocksWarehouseIdPutReq apiV3StocksWarehouseIdPutReq = 2;
   */
  apiV3StocksWarehouseIdPutReq?: ApiV3StocksWarehouseIdPutReq;

  constructor(data?: PartialMessage<ApiV3StocksWarehouseIdPutRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3StocksWarehouseIdPutRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "warehouseId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3StocksWarehouseIdPutReq", kind: "message", T: ApiV3StocksWarehouseIdPutReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3StocksWarehouseIdPutRequest {
    return new ApiV3StocksWarehouseIdPutRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3StocksWarehouseIdPutRequest {
    return new ApiV3StocksWarehouseIdPutRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3StocksWarehouseIdPutRequest {
    return new ApiV3StocksWarehouseIdPutRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3StocksWarehouseIdPutRequest | PlainMessage<ApiV3StocksWarehouseIdPutRequest> | undefined, b: ApiV3StocksWarehouseIdPutRequest | PlainMessage<ApiV3StocksWarehouseIdPutRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3StocksWarehouseIdPutRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesGetRequest
 */
export class ApiV3SuppliesGetRequest extends Message<ApiV3SuppliesGetRequest> {
  /**
   * Параметр пагинации. Устанавливает предельное количество возвращаемых данных.
   *
   * @generated from field: int32 limit = 1;
   */
  limit = 0;

  /**
   * Параметр пагинации. Устанавливает значение, с которого надо получить следующий пакет данных. Для получения полного списка данных должен быть равен 0 в первом запросе. Для следующих запросов необходимо брать значения из одноимённого поля в ответе.
   *
   * @generated from field: int64 next = 2;
   */
  next = protoInt64.zero;

  constructor(data?: PartialMessage<ApiV3SuppliesGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "next", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesGetRequest {
    return new ApiV3SuppliesGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesGetRequest {
    return new ApiV3SuppliesGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesGetRequest {
    return new ApiV3SuppliesGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesGetRequest | PlainMessage<ApiV3SuppliesGetRequest> | undefined, b: ApiV3SuppliesGetRequest | PlainMessage<ApiV3SuppliesGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesGetRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesPostRequest
 */
export class ApiV3SuppliesPostRequest extends Message<ApiV3SuppliesPostRequest> {
  /**
   * @generated from field: wb.marketplace.v1.ApiV3SuppliesPostReq apiV3SuppliesPostReq = 1;
   */
  apiV3SuppliesPostReq?: ApiV3SuppliesPostReq;

  constructor(data?: PartialMessage<ApiV3SuppliesPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apiV3SuppliesPostReq", kind: "message", T: ApiV3SuppliesPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesPostRequest {
    return new ApiV3SuppliesPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesPostRequest {
    return new ApiV3SuppliesPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesPostRequest {
    return new ApiV3SuppliesPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesPostRequest | PlainMessage<ApiV3SuppliesPostRequest> | undefined, b: ApiV3SuppliesPostRequest | PlainMessage<ApiV3SuppliesPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdBarcodeGetRequest
 */
export class ApiV3SuppliesSupplyIdBarcodeGetRequest extends Message<ApiV3SuppliesSupplyIdBarcodeGetRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  /**
   * Тип этикетки
   *
   * @generated from field: string type = 2;
   */
  type = "";

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdBarcodeGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdBarcodeGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdBarcodeGetRequest {
    return new ApiV3SuppliesSupplyIdBarcodeGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdBarcodeGetRequest {
    return new ApiV3SuppliesSupplyIdBarcodeGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdBarcodeGetRequest {
    return new ApiV3SuppliesSupplyIdBarcodeGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdBarcodeGetRequest | PlainMessage<ApiV3SuppliesSupplyIdBarcodeGetRequest> | undefined, b: ApiV3SuppliesSupplyIdBarcodeGetRequest | PlainMessage<ApiV3SuppliesSupplyIdBarcodeGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdBarcodeGetRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdDeleteRequest
 */
export class ApiV3SuppliesSupplyIdDeleteRequest extends Message<ApiV3SuppliesSupplyIdDeleteRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdDeleteRequest {
    return new ApiV3SuppliesSupplyIdDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdDeleteRequest {
    return new ApiV3SuppliesSupplyIdDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdDeleteRequest {
    return new ApiV3SuppliesSupplyIdDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdDeleteRequest | PlainMessage<ApiV3SuppliesSupplyIdDeleteRequest> | undefined, b: ApiV3SuppliesSupplyIdDeleteRequest | PlainMessage<ApiV3SuppliesSupplyIdDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdDeleteRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdDeliverPatchRequest
 */
export class ApiV3SuppliesSupplyIdDeliverPatchRequest extends Message<ApiV3SuppliesSupplyIdDeliverPatchRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdDeliverPatchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdDeliverPatchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdDeliverPatchRequest {
    return new ApiV3SuppliesSupplyIdDeliverPatchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdDeliverPatchRequest {
    return new ApiV3SuppliesSupplyIdDeliverPatchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdDeliverPatchRequest {
    return new ApiV3SuppliesSupplyIdDeliverPatchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdDeliverPatchRequest | PlainMessage<ApiV3SuppliesSupplyIdDeliverPatchRequest> | undefined, b: ApiV3SuppliesSupplyIdDeliverPatchRequest | PlainMessage<ApiV3SuppliesSupplyIdDeliverPatchRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdDeliverPatchRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdGetRequest
 */
export class ApiV3SuppliesSupplyIdGetRequest extends Message<ApiV3SuppliesSupplyIdGetRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdGetRequest {
    return new ApiV3SuppliesSupplyIdGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdGetRequest {
    return new ApiV3SuppliesSupplyIdGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdGetRequest {
    return new ApiV3SuppliesSupplyIdGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdGetRequest | PlainMessage<ApiV3SuppliesSupplyIdGetRequest> | undefined, b: ApiV3SuppliesSupplyIdGetRequest | PlainMessage<ApiV3SuppliesSupplyIdGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdGetRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdOrdersGetRequest
 */
export class ApiV3SuppliesSupplyIdOrdersGetRequest extends Message<ApiV3SuppliesSupplyIdOrdersGetRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdOrdersGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdOrdersGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdOrdersGetRequest {
    return new ApiV3SuppliesSupplyIdOrdersGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdOrdersGetRequest {
    return new ApiV3SuppliesSupplyIdOrdersGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdOrdersGetRequest {
    return new ApiV3SuppliesSupplyIdOrdersGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdOrdersGetRequest | PlainMessage<ApiV3SuppliesSupplyIdOrdersGetRequest> | undefined, b: ApiV3SuppliesSupplyIdOrdersGetRequest | PlainMessage<ApiV3SuppliesSupplyIdOrdersGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdOrdersGetRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest
 */
export class ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest extends Message<ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 2;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest {
    return new ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest {
    return new ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest {
    return new ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest | PlainMessage<ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest> | undefined, b: ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest | PlainMessage<ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdOrdersOrderIdPatchRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxDeleteRequest
 */
export class ApiV3SuppliesSupplyIdTrbxDeleteRequest extends Message<ApiV3SuppliesSupplyIdTrbxDeleteRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  /**
   * @generated from field: wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxDeleteReq apiV3SuppliesSupplyIdTrbxDeleteReq = 2;
   */
  apiV3SuppliesSupplyIdTrbxDeleteReq?: ApiV3SuppliesSupplyIdTrbxDeleteReq;

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdTrbxDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "apiV3SuppliesSupplyIdTrbxDeleteReq", kind: "message", T: ApiV3SuppliesSupplyIdTrbxDeleteReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdTrbxDeleteRequest {
    return new ApiV3SuppliesSupplyIdTrbxDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxDeleteRequest {
    return new ApiV3SuppliesSupplyIdTrbxDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxDeleteRequest {
    return new ApiV3SuppliesSupplyIdTrbxDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdTrbxDeleteRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxDeleteRequest> | undefined, b: ApiV3SuppliesSupplyIdTrbxDeleteRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdTrbxDeleteRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxGetRequest
 */
export class ApiV3SuppliesSupplyIdTrbxGetRequest extends Message<ApiV3SuppliesSupplyIdTrbxGetRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdTrbxGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdTrbxGetRequest {
    return new ApiV3SuppliesSupplyIdTrbxGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxGetRequest {
    return new ApiV3SuppliesSupplyIdTrbxGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxGetRequest {
    return new ApiV3SuppliesSupplyIdTrbxGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdTrbxGetRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxGetRequest> | undefined, b: ApiV3SuppliesSupplyIdTrbxGetRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdTrbxGetRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxPostRequest
 */
export class ApiV3SuppliesSupplyIdTrbxPostRequest extends Message<ApiV3SuppliesSupplyIdTrbxPostRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  /**
   * @generated from field: wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxPostReq apiV3SuppliesSupplyIdTrbxPostReq = 2;
   */
  apiV3SuppliesSupplyIdTrbxPostReq?: ApiV3SuppliesSupplyIdTrbxPostReq;

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdTrbxPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "apiV3SuppliesSupplyIdTrbxPostReq", kind: "message", T: ApiV3SuppliesSupplyIdTrbxPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdTrbxPostRequest {
    return new ApiV3SuppliesSupplyIdTrbxPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxPostRequest {
    return new ApiV3SuppliesSupplyIdTrbxPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxPostRequest {
    return new ApiV3SuppliesSupplyIdTrbxPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdTrbxPostRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxPostRequest> | undefined, b: ApiV3SuppliesSupplyIdTrbxPostRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdTrbxPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxStickersPostRequest
 */
export class ApiV3SuppliesSupplyIdTrbxStickersPostRequest extends Message<ApiV3SuppliesSupplyIdTrbxStickersPostRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  /**
   * Тип этикетки
   *
   * @generated from field: string type = 2;
   */
  type = "";

  /**
   * @generated from field: wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxStickersPostReq apiV3SuppliesSupplyIdTrbxStickersPostReq = 3;
   */
  apiV3SuppliesSupplyIdTrbxStickersPostReq?: ApiV3SuppliesSupplyIdTrbxStickersPostReq;

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdTrbxStickersPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxStickersPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "apiV3SuppliesSupplyIdTrbxStickersPostReq", kind: "message", T: ApiV3SuppliesSupplyIdTrbxStickersPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdTrbxStickersPostRequest {
    return new ApiV3SuppliesSupplyIdTrbxStickersPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxStickersPostRequest {
    return new ApiV3SuppliesSupplyIdTrbxStickersPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxStickersPostRequest {
    return new ApiV3SuppliesSupplyIdTrbxStickersPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdTrbxStickersPostRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxStickersPostRequest> | undefined, b: ApiV3SuppliesSupplyIdTrbxStickersPostRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxStickersPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdTrbxStickersPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest
 */
export class ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest extends Message<ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  /**
   * ID короба
   *
   * @generated from field: string trbxId = 2;
   */
  trbxId = "";

  /**
   * ID сборочного задания
   *
   * @generated from field: int64 orderId = 3;
   */
  orderId = protoInt64.zero;

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "trbxId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "orderId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest {
    return new ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest {
    return new ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest {
    return new ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest> | undefined, b: ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdTrbxTrbxIdOrdersOrderIdDeleteRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest
 */
export class ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest extends Message<ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest> {
  /**
   * ID поставки
   *
   * @generated from field: string supplyId = 1;
   */
  supplyId = "";

  /**
   * ID короба
   *
   * @generated from field: string trbxId = 2;
   */
  trbxId = "";

  /**
   * @generated from field: wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxTrbxIdPatchReq apiV3SuppliesSupplyIdTrbxTrbxIdPatchReq = 3;
   */
  apiV3SuppliesSupplyIdTrbxTrbxIdPatchReq?: ApiV3SuppliesSupplyIdTrbxTrbxIdPatchReq;

  constructor(data?: PartialMessage<ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "supplyId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "trbxId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "apiV3SuppliesSupplyIdTrbxTrbxIdPatchReq", kind: "message", T: ApiV3SuppliesSupplyIdTrbxTrbxIdPatchReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest {
    return new ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest {
    return new ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest {
    return new ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest> | undefined, b: ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest | PlainMessage<ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3SuppliesSupplyIdTrbxTrbxIdPatchRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3WarehousesGetResponse
 */
export class ApiV3WarehousesGetResponse extends Message<ApiV3WarehousesGetResponse> {
  /**
   * @generated from field: repeated wb.marketplace.v1.Warehouse data = 1;
   */
  data: Warehouse[] = [];

  constructor(data?: PartialMessage<ApiV3WarehousesGetResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3WarehousesGetResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "message", T: Warehouse, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3WarehousesGetResponse {
    return new ApiV3WarehousesGetResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3WarehousesGetResponse {
    return new ApiV3WarehousesGetResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3WarehousesGetResponse {
    return new ApiV3WarehousesGetResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3WarehousesGetResponse | PlainMessage<ApiV3WarehousesGetResponse> | undefined, b: ApiV3WarehousesGetResponse | PlainMessage<ApiV3WarehousesGetResponse> | undefined): boolean {
    return proto3.util.equals(ApiV3WarehousesGetResponse, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3WarehousesPostRequest
 */
export class ApiV3WarehousesPostRequest extends Message<ApiV3WarehousesPostRequest> {
  /**
   * @generated from field: wb.marketplace.v1.ApiV3WarehousesPostReq apiV3WarehousesPostReq = 1;
   */
  apiV3WarehousesPostReq?: ApiV3WarehousesPostReq;

  constructor(data?: PartialMessage<ApiV3WarehousesPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3WarehousesPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apiV3WarehousesPostReq", kind: "message", T: ApiV3WarehousesPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3WarehousesPostRequest {
    return new ApiV3WarehousesPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3WarehousesPostRequest {
    return new ApiV3WarehousesPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3WarehousesPostRequest {
    return new ApiV3WarehousesPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3WarehousesPostRequest | PlainMessage<ApiV3WarehousesPostRequest> | undefined, b: ApiV3WarehousesPostRequest | PlainMessage<ApiV3WarehousesPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3WarehousesPostRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3WarehousesWarehouseIdDeleteRequest
 */
export class ApiV3WarehousesWarehouseIdDeleteRequest extends Message<ApiV3WarehousesWarehouseIdDeleteRequest> {
  /**
   * ID склада продавца
   *
   * @generated from field: int64 warehouseId = 1;
   */
  warehouseId = protoInt64.zero;

  constructor(data?: PartialMessage<ApiV3WarehousesWarehouseIdDeleteRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3WarehousesWarehouseIdDeleteRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "warehouseId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3WarehousesWarehouseIdDeleteRequest {
    return new ApiV3WarehousesWarehouseIdDeleteRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3WarehousesWarehouseIdDeleteRequest {
    return new ApiV3WarehousesWarehouseIdDeleteRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3WarehousesWarehouseIdDeleteRequest {
    return new ApiV3WarehousesWarehouseIdDeleteRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3WarehousesWarehouseIdDeleteRequest | PlainMessage<ApiV3WarehousesWarehouseIdDeleteRequest> | undefined, b: ApiV3WarehousesWarehouseIdDeleteRequest | PlainMessage<ApiV3WarehousesWarehouseIdDeleteRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3WarehousesWarehouseIdDeleteRequest, a, b);
  }
}

/**
 * @generated from message wb.marketplace.v1.ApiV3WarehousesWarehouseIdPutRequest
 */
export class ApiV3WarehousesWarehouseIdPutRequest extends Message<ApiV3WarehousesWarehouseIdPutRequest> {
  /**
   * ID склада продавца
   *
   * @generated from field: int64 warehouseId = 1;
   */
  warehouseId = protoInt64.zero;

  /**
   * @generated from field: wb.marketplace.v1.ApiV3WarehousesWarehouseIdPutReq apiV3WarehousesWarehouseIdPutReq = 2;
   */
  apiV3WarehousesWarehouseIdPutReq?: ApiV3WarehousesWarehouseIdPutReq;

  constructor(data?: PartialMessage<ApiV3WarehousesWarehouseIdPutRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.ApiV3WarehousesWarehouseIdPutRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "warehouseId", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "apiV3WarehousesWarehouseIdPutReq", kind: "message", T: ApiV3WarehousesWarehouseIdPutReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV3WarehousesWarehouseIdPutRequest {
    return new ApiV3WarehousesWarehouseIdPutRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV3WarehousesWarehouseIdPutRequest {
    return new ApiV3WarehousesWarehouseIdPutRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV3WarehousesWarehouseIdPutRequest {
    return new ApiV3WarehousesWarehouseIdPutRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV3WarehousesWarehouseIdPutRequest | PlainMessage<ApiV3WarehousesWarehouseIdPutRequest> | undefined, b: ApiV3WarehousesWarehouseIdPutRequest | PlainMessage<ApiV3WarehousesWarehouseIdPutRequest> | undefined): boolean {
    return proto3.util.equals(ApiV3WarehousesWarehouseIdPutRequest, a, b);
  }
}

