//
//Описание API Marketplace
//
//No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/marketplace/v1/supply_order.proto (package wb.marketplace.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";
import { OrderUser } from "./order_user_pb.js";

/**
 * @generated from message wb.marketplace.v1.SupplyOrder
 */
export class SupplyOrder extends Message<SupplyOrder> {
  /**
   * Идентификатор сборочного задания в Маркетплейсе
   *
   * @generated from field: int64 id = 1;
   */
  id = protoInt64.zero;

  /**
   * Идентификатор сборочного задания в системе Wildberries
   *
   * @generated from field: string rid = 2;
   */
  rid = "";

  /**
   * Дата создания сборочного задания (RFC3339)
   *
   * @generated from field: string createdAt = 3;
   */
  createdAt = "";

  /**
   * Идентификатор склада продавца, на который поступило сборочное задание
   *
   * @generated from field: int32 warehouseId = 4;
   */
  warehouseId = 0;

  /**
   * Список офисов, куда следует привезти товар
   *
   * @generated from field: repeated string offices = 5;
   */
  offices: string[] = [];

  /**
   * @generated from field: wb.marketplace.v1.OrderUser user = 6;
   */
  user?: OrderUser;

  /**
   * Массив баркодов товара
   *
   * @generated from field: repeated string skus = 7;
   */
  skus: string[] = [];

  /**
   * Цена в валюте продажи с учетом всех скидок, умноженная на 100. Код валюты продажи в поле currencyCode.
   *
   * @generated from field: int32 price = 8;
   */
  price = 0;

  /**
   * Цена в валюте страны продавца с учетом всех скидок, кроме суммы по WB Кошельку, умноженная на 100. Предоставляется в информационных целях.
   *
   * @generated from field: int32 convertedPrice = 9;
   */
  convertedPrice = 0;

  /**
   * Код валюты продажи (ISO 4217)
   *
   * @generated from field: int32 currencyCode = 10;
   */
  currencyCode = 0;

  /**
   * Код валюты страны продавца (ISO 4217)
   *
   * @generated from field: int32 convertedCurrencyCode = 11;
   */
  convertedCurrencyCode = 0;

  /**
   * Идентификатор транзакции для группировки сборочных заданий. Сборочные задания в одной корзине покупателя будут иметь одинаковый orderUID
   *
   * @generated from field: string orderUid = 12;
   */
  orderUid = "";

  /**
   * Артикул WB
   *
   * @generated from field: int32 nmId = 13;
   */
  nmId = 0;

  /**
   * Идентификатор размера товара в системе Wildberries
   *
   * @generated from field: int32 chrtId = 14;
   */
  chrtId = 0;

  /**
   * Артикул продавца
   *
   * @generated from field: string article = 15;
   */
  article = "";

  /**
   * Код цвета (только для колеруемых товаров)
   *
   * @generated from field: string colorCode = 16;
   */
  colorCode = "";

  /**
   * @generated from field: wb.marketplace.v1.SupplyOrder.CargoTypeEnum cargoType = 17;
   */
  cargoType = SupplyOrder_CargoTypeEnum.CargoTypeEnum__1;

  constructor(data?: PartialMessage<SupplyOrder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.marketplace.v1.SupplyOrder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "rid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "createdAt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "warehouseId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "offices", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "user", kind: "message", T: OrderUser },
    { no: 7, name: "skus", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 8, name: "price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "convertedPrice", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 10, name: "currencyCode", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "convertedCurrencyCode", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 12, name: "orderUid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "nmId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 14, name: "chrtId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "article", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "colorCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "cargoType", kind: "enum", T: proto3.getEnumType(SupplyOrder_CargoTypeEnum) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplyOrder {
    return new SupplyOrder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplyOrder {
    return new SupplyOrder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplyOrder {
    return new SupplyOrder().fromJsonString(jsonString, options);
  }

  static equals(a: SupplyOrder | PlainMessage<SupplyOrder> | undefined, b: SupplyOrder | PlainMessage<SupplyOrder> | undefined): boolean {
    return proto3.util.equals(SupplyOrder, a, b);
  }
}

/**
 * <dl> <dt>Тип товара:</dt> <dd>1 - обычный</dd> <dd>2 - СГТ (Сверхгабаритный товар)</dd> <dd>3 - КГТ (Крупногабаритный товар). Не используется на данный момент.</dd> </dl> 
 *
 * @generated from enum wb.marketplace.v1.SupplyOrder.CargoTypeEnum
 */
export enum SupplyOrder_CargoTypeEnum {
  /**
   * @generated from enum value: CargoTypeEnum__1 = 0;
   */
  CargoTypeEnum__1 = 0,

  /**
   * @generated from enum value: CargoTypeEnum__2 = 1;
   */
  CargoTypeEnum__2 = 1,

  /**
   * @generated from enum value: CargoTypeEnum__3 = 2;
   */
  CargoTypeEnum__3 = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(SupplyOrder_CargoTypeEnum)
proto3.util.setEnumType(SupplyOrder_CargoTypeEnum, "wb.marketplace.v1.SupplyOrder.CargoTypeEnum", [
  { no: 0, name: "CargoTypeEnum__1" },
  { no: 1, name: "CargoTypeEnum__2" },
  { no: 2, name: "CargoTypeEnum__3" },
]);

