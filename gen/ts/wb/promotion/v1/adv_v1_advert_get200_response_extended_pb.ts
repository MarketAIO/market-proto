//
//Описание API Продвижение
//
//Синхронизация данных из бд происходит раз в 3 минуты.  <br>Изменение статуса происходит раз в 1 минуту. Внутри этого интервала будет сохранено последнее действие по изменению статуса. <br>Изменение ставки происходит раз в 30 секунд. Внутри этого интервала будет сохранено последнее действие по изменению ставки.
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/promotion/v1/adv_v1_advert_get200_response_extended.proto (package wb.promotion.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
    BinaryReadOptions,
    FieldList,
    JsonReadOptions,
    JsonValue,
    PartialMessage,
    PlainMessage
} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message wb.promotion.v1.AdvV1AdvertGet200ResponseExtended
 */
export class AdvV1AdvertGet200ResponseExtended extends Message<AdvV1AdvertGet200ResponseExtended> {
  /**
   * Комментарий модератора (при наличии)
   *
   * @generated from field: optional string reason = 1;
   */
  reason?: string;

  /**
   * Затраты
   *
   * @generated from field: int32 expenses = 2;
   */
  expenses = 0;

  /**
   * Начало показов медиакампании
   *
   * @generated from field: string from = 3;
   */
  from = "";

  /**
   * Конец показов медиакампании
   *
   * @generated from field: string to = 4;
   */
  to = "";

  /**
   * Время изменения медиакампании
   *
   * @generated from field: string updated_at = 5;
   */
  updatedAt = "";

  /**
   * Стоимость размещения по дням (для типа 1)
   *
   * @generated from field: int32 price = 6;
   */
  price = 0;

  /**
   * Остаток бюджета (для типа 2)
   *
   * @generated from field: int32 budget = 7;
   */
  budget = 0;

  /**
   * Источник списания (1 - баланс, 2 - счет)
   *
   * @generated from field: int32 operation = 8;
   */
  operation = 0;

  /**
   * Идентификатор контракта (для продавцов на контракте)
   *
   * @generated from field: int32 contract_id = 9;
   */
  contractId = 0;

  constructor(data?: PartialMessage<AdvV1AdvertGet200ResponseExtended>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.promotion.v1.AdvV1AdvertGet200ResponseExtended";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "reason", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "expenses", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "budget", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "operation", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "contract_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdvV1AdvertGet200ResponseExtended {
    return new AdvV1AdvertGet200ResponseExtended().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdvV1AdvertGet200ResponseExtended {
    return new AdvV1AdvertGet200ResponseExtended().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdvV1AdvertGet200ResponseExtended {
    return new AdvV1AdvertGet200ResponseExtended().fromJsonString(jsonString, options);
  }

  static equals(a: AdvV1AdvertGet200ResponseExtended | PlainMessage<AdvV1AdvertGet200ResponseExtended> | undefined, b: AdvV1AdvertGet200ResponseExtended | PlainMessage<AdvV1AdvertGet200ResponseExtended> | undefined): boolean {
    return proto3.util.equals(AdvV1AdvertGet200ResponseExtended, a, b);
  }
}

