//
//Описание API Продвижение
//
//Синхронизация данных из бд происходит раз в 3 минуты.  <br>Изменение статуса происходит раз в 1 минуту. Внутри этого интервала будет сохранено последнее действие по изменению статуса. <br>Изменение ставки происходит раз в 30 секунд. Внутри этого интервала будет сохранено последнее действие по изменению ставки.
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/promotion/v1/adv_v1_advert_get200_response_items_inner.proto (package wb.promotion.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
    BinaryReadOptions,
    FieldList,
    JsonReadOptions,
    JsonValue,
    PartialMessage,
    PlainMessage
} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import {
    AdvV1AdvertGet200ResponseItemsInnerShowHoursInner
} from "./adv_v1_advert_get200_response_items_inner_show_hours_inner_pb.js";

/**
 * @generated from message wb.promotion.v1.AdvV1AdvertGet200ResponseItemsInner
 */
export class AdvV1AdvertGet200ResponseItemsInner extends Message<AdvV1AdvertGet200ResponseItemsInner> {
  /**
   * ID баннера
   *
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * Бренд
   *
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * Статус (такой же как у медиакампании)
   *
   * @generated from field: int32 status = 3;
   */
  status = 0;

  /**
   * Позиция на странице размещения
   *
   * @generated from field: int32 place = 4;
   */
  place = 0;

  /**
   * Бюджет
   *
   * @generated from field: int32 budget = 5;
   */
  budget = 0;

  /**
   * Дневной лимит (для баннеров по показам)
   *
   * @generated from field: int32 daily_limit = 6;
   */
  dailyLimit = 0;

  /**
   * Название категории размещения
   *
   * @generated from field: string category_name = 7;
   */
  categoryName = "";

  /**
   * Ставка
   *
   * @generated from field: int32 cpm = 8;
   */
  cpm = 0;

  /**
   * URL страницы, на которую попадает пользователь при клике по баннеру
   *
   * @generated from field: string url = 9;
   */
  url = "";

  /**
   * <dl> <dt>Тип продвижения:</dt> <dd><code>1</code> - баннер</dd> <dd><code>2</code> - всплывающее меню</dd> <dd><code>3</code> - почтовая рассылка</dd> <dd><code>4</code> - социальные сети</dd> <dd><code>5</code> - push-уведомления в мобильном приложении</dd> </dl> 
   *
   * @generated from field: int32 advert_type = 10;
   */
  advertType = 0;

  /**
   * Дата создания баннера
   *
   * @generated from field: string created_at = 11;
   */
  createdAt = "";

  /**
   * Дата обновления баннера
   *
   * @generated from field: string updated_at = 12;
   */
  updatedAt = "";

  /**
   * Дата начала работы баннера
   *
   * @generated from field: string date_from = 13;
   */
  dateFrom = "";

  /**
   * Дата завершения работы баннера
   *
   * @generated from field: string date_to = 14;
   */
  dateTo = "";

  /**
   * Подборка артикулов WB
   *
   * @generated from field: repeated int32 nms = 15;
   */
  nms: number[] = [];

  /**
   * Текст под плашкой баннера
   *
   * @generated from field: string bottomText1 = 16;
   */
  bottomText1 = "";

  /**
   * 2-я строка с текстом под плашкой баннера
   *
   * @generated from field: string bottomText2 = 17;
   */
  bottomText2 = "";

  /**
   * Текст push-уведомления или рассылки
   *
   * @generated from field: string message = 18;
   */
  message = "";

  /**
   * Дополнительные настройки. <dl> <dt>Формат почтовой рассылки:</dt> <dd><code>1</code> - общий</dd> <dd><code>2</code> - частичный</dd> <dd><code>3</code> - уникальный</dd> </dl> <dl> <dt>Социальная сеть:</dt> <dd><code>1</code> - VKontakte</dd> <dd><code>2</code> - OK (Одноклассники)</dd> </dl> 
   *
   * @generated from field: int32 additionalSettings = 19;
   */
  additionalSettings = 0;

  /**
   * Кол-во получателей push-уведомлений
   *
   * @generated from field: int32 receiversCount = 20;
   */
  receiversCount = 0;

  /**
   * ID родительской категории товара
   *
   * @generated from field: int32 subject_id = 21;
   */
  subjectId = 0;

  /**
   * Название родительской категории товара
   *
   * @generated from field: string subject_name = 22;
   */
  subjectName = "";

  /**
   * Название акции
   *
   * @generated from field: string action_name = 23;
   */
  actionName = "";

  /**
   * Часы показа
   *
   * @generated from field: repeated wb.promotion.v1.AdvV1AdvertGet200ResponseItemsInnerShowHoursInner show_hours = 24;
   */
  showHours: AdvV1AdvertGet200ResponseItemsInnerShowHoursInner[] = [];

  /**
   * Уникальный идентификатор медиакампании для работы с ОРД
   *
   * @generated from field: string Erid = 25;
   */
  Erid = "";

  constructor(data?: PartialMessage<AdvV1AdvertGet200ResponseItemsInner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.promotion.v1.AdvV1AdvertGet200ResponseItemsInner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "status", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "place", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "budget", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "daily_limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "category_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "cpm", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "advert_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "created_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "updated_at", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "date_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "date_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "nms", kind: "scalar", T: 5 /* ScalarType.INT32 */, repeated: true },
    { no: 16, name: "bottomText1", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 17, name: "bottomText2", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 18, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "additionalSettings", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 20, name: "receiversCount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 21, name: "subject_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 22, name: "subject_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "action_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "show_hours", kind: "message", T: AdvV1AdvertGet200ResponseItemsInnerShowHoursInner, repeated: true },
    { no: 25, name: "Erid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdvV1AdvertGet200ResponseItemsInner {
    return new AdvV1AdvertGet200ResponseItemsInner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdvV1AdvertGet200ResponseItemsInner {
    return new AdvV1AdvertGet200ResponseItemsInner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdvV1AdvertGet200ResponseItemsInner {
    return new AdvV1AdvertGet200ResponseItemsInner().fromJsonString(jsonString, options);
  }

  static equals(a: AdvV1AdvertGet200ResponseItemsInner | PlainMessage<AdvV1AdvertGet200ResponseItemsInner> | undefined, b: AdvV1AdvertGet200ResponseItemsInner | PlainMessage<AdvV1AdvertGet200ResponseItemsInner> | undefined): boolean {
    return proto3.util.equals(AdvV1AdvertGet200ResponseItemsInner, a, b);
  }
}

