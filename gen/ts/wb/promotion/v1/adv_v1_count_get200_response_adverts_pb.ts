//
//Описание API Продвижение
//
//Синхронизация данных из бд происходит раз в 3 минуты.  <br>Изменение статуса происходит раз в 1 минуту. Внутри этого интервала будет сохранено последнее действие по изменению статуса. <br>Изменение ставки происходит раз в 30 секунд. Внутри этого интервала будет сохранено последнее действие по изменению ставки.
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/promotion/v1/adv_v1_count_get200_response_adverts.proto (package wb.promotion.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
    BinaryReadOptions,
    FieldList,
    JsonReadOptions,
    JsonValue,
    PartialMessage,
    PlainMessage
} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message wb.promotion.v1.AdvV1CountGet200ResponseAdverts
 */
export class AdvV1CountGet200ResponseAdverts extends Message<AdvV1CountGet200ResponseAdverts> {
  /**
   * <dl> <dt>Тип медиакампании:</dt> <dd><code>1</code> - размещение по дням</dd> <dd><code>2</code> - размещение по просмотрам</dd> </dl> 
   *
   * @generated from field: int32 type = 1;
   */
  type = 0;

  /**
   * <dl> <dt>Статус медиакампании:</dt>   <dd><code>1</code> - черновик</dd>   <dd><code>2</code> - модерация   <dd><code>3</code> - отклонено (с возможностью вернуть на модерацию)</dd>   <dd><code>4</code> - одобрено</dd>   <dd><code>5</code> - запланировано</dd>   <dd><code>6</code> - на показах</dd>   <dd><code>7</code> - завершено</dd>   <dd><code>8</code> - отказался</dd>   <dd><code>9</code> - приостановлена продавцом</dd>   <dd><code>10</code> - пауза по дневному лимиту</dd>   <dd><code>11</code> - пауза по расходу бюджета</dd> </dl> 
   *
   * @generated from field: int32 status = 2;
   */
  status = 0;

  /**
   * Количество медиакампаний
   *
   * @generated from field: int32 count = 3;
   */
  count = 0;

  constructor(data?: PartialMessage<AdvV1CountGet200ResponseAdverts>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.promotion.v1.AdvV1CountGet200ResponseAdverts";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "status", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "count", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdvV1CountGet200ResponseAdverts {
    return new AdvV1CountGet200ResponseAdverts().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdvV1CountGet200ResponseAdverts {
    return new AdvV1CountGet200ResponseAdverts().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdvV1CountGet200ResponseAdverts {
    return new AdvV1CountGet200ResponseAdverts().fromJsonString(jsonString, options);
  }

  static equals(a: AdvV1CountGet200ResponseAdverts | PlainMessage<AdvV1CountGet200ResponseAdverts> | undefined, b: AdvV1CountGet200ResponseAdverts | PlainMessage<AdvV1CountGet200ResponseAdverts> | undefined): boolean {
    return proto3.util.equals(AdvV1CountGet200ResponseAdverts, a, b);
  }
}

