//
//Описание API Продвижение
//
//Синхронизация данных из бд происходит раз в 3 минуты.  <br>Изменение статуса происходит раз в 1 минуту. Внутри этого интервала будет сохранено последнее действие по изменению статуса. <br>Изменение ставки происходит раз в 30 секунд. Внутри этого интервала будет сохранено последнее действие по изменению ставки.
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/promotion/v1/response_info_advert_params_inner.proto (package wb.promotion.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ResponseInfoAdvertParamsInnerIntervalsInner } from "./response_info_advert_params_inner_intervals_inner_pb.js";
import { ResponseInfoAdvertParamsInnerNmsInner } from "./response_info_advert_params_inner_nms_inner_pb.js";

/**
 * @generated from message wb.promotion.v1.ResponseInfoAdvertParamsInner
 */
export class ResponseInfoAdvertParamsInner extends Message<ResponseInfoAdvertParamsInner> {
  /**
   * Название предметной группы (для кампаний в поиске и рекомендациях)
   *
   * @generated from field: string subjectName = 1;
   */
  subjectName = "";

  /**
   * Флаг активности предметной группы, <code>true</code> - активна, <code>false</code> - неактивна
   *
   * @generated from field: bool active = 2;
   */
  active = false;

  /**
   * Интервалы часов показа кампании
   *
   * @generated from field: repeated wb.promotion.v1.ResponseInfoAdvertParamsInnerIntervalsInner intervals = 3;
   */
  intervals: ResponseInfoAdvertParamsInnerIntervalsInner[] = [];

  /**
   * Текущая ставка
   *
   * @generated from field: int32 price = 4;
   */
  price = 0;

  /**
   * Идентификатор меню, где размещается кампания (для кампаний в каталоге)
   *
   * @generated from field: int32 menuId = 5;
   */
  menuId = 0;

  /**
   * Идентификатор предметной группы, для которой создана кампания (для кампаний в поиске и рекомендациях)
   *
   * @generated from field: int32 subjectId = 6;
   */
  subjectId = 0;

  /**
   * Идентификатор сочетания предмета и пола (для кампаний в карточке товара)
   *
   * @generated from field: int32 setId = 7;
   */
  setId = 0;

  /**
   * Сочетание предмета и пола (для кампаний в карточке товара)
   *
   * @generated from field: string setName = 8;
   */
  setName = "";

  /**
   * Название меню, где размещается кампания (для кампаний в каталоге)
   *
   * @generated from field: string menuName = 9;
   */
  menuName = "";

  /**
   * Массив номенклатур кампании
   *
   * @generated from field: repeated wb.promotion.v1.ResponseInfoAdvertParamsInnerNmsInner nms = 10;
   */
  nms: ResponseInfoAdvertParamsInnerNmsInner[] = [];

  constructor(data?: PartialMessage<ResponseInfoAdvertParamsInner>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.promotion.v1.ResponseInfoAdvertParamsInner";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "subjectName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "intervals", kind: "message", T: ResponseInfoAdvertParamsInnerIntervalsInner, repeated: true },
    { no: 4, name: "price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "menuId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "subjectId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 7, name: "setId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "setName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "menuName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "nms", kind: "message", T: ResponseInfoAdvertParamsInnerNmsInner, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ResponseInfoAdvertParamsInner {
    return new ResponseInfoAdvertParamsInner().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ResponseInfoAdvertParamsInner {
    return new ResponseInfoAdvertParamsInner().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ResponseInfoAdvertParamsInner {
    return new ResponseInfoAdvertParamsInner().fromJsonString(jsonString, options);
  }

  static equals(a: ResponseInfoAdvertParamsInner | PlainMessage<ResponseInfoAdvertParamsInner> | undefined, b: ResponseInfoAdvertParamsInner | PlainMessage<ResponseInfoAdvertParamsInner> | undefined): boolean {
    return proto3.util.equals(ResponseInfoAdvertParamsInner, a, b);
  }
}

