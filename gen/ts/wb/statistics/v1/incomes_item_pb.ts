//
//Описание API Статистики
//
//С помощью этих методов можно получить отчёты.
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/statistics/v1/incomes_item.proto (package wb.statistics.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.statistics.v1.IncomesItem
 */
export class IncomesItem extends Message<IncomesItem> {
  /**
   * Номер поставки
   *
   * @generated from field: int32 incomeId = 1;
   */
  incomeId = 0;

  /**
   * Номер УПД
   *
   * @generated from field: string number = 2;
   */
  number = "";

  /**
   * Дата поступления. Если часовой пояс не указан, то берется Московское время UTC+3.
   *
   * @generated from field: string date = 3;
   */
  date = "";

  /**
   * Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе. Если часовой пояс не указан, то берется Московское время UTC+3.
   *
   * @generated from field: string lastChangeDate = 4;
   */
  lastChangeDate = "";

  /**
   * Артикул продавца
   *
   * @generated from field: string supplierArticle = 5;
   */
  supplierArticle = "";

  /**
   * Размер товара (пример S, M, L, XL, 42, 42-43)
   *
   * @generated from field: string techSize = 6;
   */
  techSize = "";

  /**
   * Бар-код
   *
   * @generated from field: string barcode = 7;
   */
  barcode = "";

  /**
   * Количество
   *
   * @generated from field: int32 quantity = 8;
   */
  quantity = 0;

  /**
   * Цена из УПД
   *
   * @generated from field: float totalPrice = 9;
   */
  totalPrice = 0;

  /**
   * Дата принятия (закрытия) в WB. Если часовой пояс не указан, то берется Московское время UTC+3
   *
   * @generated from field: string dateClose = 10;
   */
  dateClose = "";

  /**
   * Название склада
   *
   * @generated from field: string warehouseName = 11;
   */
  warehouseName = "";

  /**
   * Артикул WB
   *
   * @generated from field: int32 nmId = 12;
   */
  nmId = 0;

  /**
   * @generated from field: wb.statistics.v1.IncomesItem.StatusEnum status = 13;
   */
  status = IncomesItem_StatusEnum.StatusEnum__;

  constructor(data?: PartialMessage<IncomesItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.statistics.v1.IncomesItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "incomeId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "lastChangeDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "supplierArticle", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "techSize", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "barcode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "totalPrice", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 10, name: "dateClose", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "warehouseName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "nmId", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 13, name: "status", kind: "enum", T: proto3.getEnumType(IncomesItem_StatusEnum) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IncomesItem {
    return new IncomesItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IncomesItem {
    return new IncomesItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IncomesItem {
    return new IncomesItem().fromJsonString(jsonString, options);
  }

  static equals(a: IncomesItem | PlainMessage<IncomesItem> | undefined, b: IncomesItem | PlainMessage<IncomesItem> | undefined): boolean {
    return proto3.util.equals(IncomesItem, a, b);
  }
}

/**
 * Текущий статус поставки
 *
 * @generated from enum wb.statistics.v1.IncomesItem.StatusEnum
 */
export enum IncomesItem_StatusEnum {
  /**
   * @generated from enum value: StatusEnum__ = 0;
   */
  StatusEnum__ = 0,
}
// Retrieve enum metadata with: proto3.getEnumType(IncomesItem_StatusEnum)
proto3.util.setEnumType(IncomesItem_StatusEnum, "wb.statistics.v1.IncomesItem.StatusEnum", [
  { no: 0, name: "StatusEnum__" },
]);

