//
//Описание API Статистики
//
//С помощью этих методов можно получить отчёты.
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/statistics/v1/detail_report_item.proto (package wb.statistics.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Any, Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.statistics.v1.DetailReportItem
 */
export class DetailReportItem extends Message<DetailReportItem> {
  /**
   * Номер отчёта
   *
   * @generated from field: int32 realizationreport_id = 1;
   */
  realizationreportId = 0;

  /**
   * Дата начала отчётного периода
   *
   * @generated from field: string date_from = 2;
   */
  dateFrom = "";

  /**
   * Дата конца отчётного периода
   *
   * @generated from field: string date_to = 3;
   */
  dateTo = "";

  /**
   * Дата формирования отчёта
   *
   * @generated from field: string create_dt = 4;
   */
  createDt = "";

  /**
   * Валюта отчёта
   *
   * @generated from field: string currency_name = 5;
   */
  currencyName = "";

  /**
   * Договор
   *
   * @generated from field: google.protobuf.Any suppliercontract_code = 6;
   */
  suppliercontractCode?: Any;

  /**
   * Номер строки
   *
   * @generated from field: int32 rrd_id = 7;
   */
  rrdId = 0;

  /**
   * Номер поставки
   *
   * @generated from field: int32 gi_id = 8;
   */
  giId = 0;

  /**
   * Предмет
   *
   * @generated from field: string subject_name = 9;
   */
  subjectName = "";

  /**
   * Артикул WB
   *
   * @generated from field: int32 nm_id = 10;
   */
  nmId = 0;

  /**
   * Бренд
   *
   * @generated from field: string brand_name = 11;
   */
  brandName = "";

  /**
   * Артикул продавца
   *
   * @generated from field: string sa_name = 12;
   */
  saName = "";

  /**
   * Размер
   *
   * @generated from field: string ts_name = 13;
   */
  tsName = "";

  /**
   * Баркод
   *
   * @generated from field: string barcode = 14;
   */
  barcode = "";

  /**
   * Тип документа
   *
   * @generated from field: string doc_type_name = 15;
   */
  docTypeName = "";

  /**
   * Количество
   *
   * @generated from field: int32 quantity = 16;
   */
  quantity = 0;

  /**
   * Цена розничная
   *
   * @generated from field: float retail_price = 17;
   */
  retailPrice = 0;

  /**
   * Сумма продаж (возвратов)
   *
   * @generated from field: float retail_amount = 18;
   */
  retailAmount = 0;

  /**
   * Согласованная скидка
   *
   * @generated from field: int32 sale_percent = 19;
   */
  salePercent = 0;

  /**
   * Процент комиссии
   *
   * @generated from field: float commission_percent = 20;
   */
  commissionPercent = 0;

  /**
   * Склад
   *
   * @generated from field: string office_name = 21;
   */
  officeName = "";

  /**
   * Обоснование для оплаты
   *
   * @generated from field: string supplier_oper_name = 22;
   */
  supplierOperName = "";

  /**
   * Дата заказа. <br>Присылается с явным указанием часового пояса
   *
   * @generated from field: string order_dt = 23;
   */
  orderDt = "";

  /**
   * Дата продажи. <br>Присылается с явным указанием часового пояса
   *
   * @generated from field: string sale_dt = 24;
   */
  saleDt = "";

  /**
   * Дата операции. <br> Присылается с явным указанием часового пояса
   *
   * @generated from field: string rr_dt = 25;
   */
  rrDt = "";

  /**
   * Штрих-код
   *
   * @generated from field: int32 shk_id = 26;
   */
  shkId = 0;

  /**
   * Цена розничная с учетом согласованной скидки
   *
   * @generated from field: float retail_price_withdisc_rub = 27;
   */
  retailPriceWithdiscRub = 0;

  /**
   * Количество доставок
   *
   * @generated from field: int32 delivery_amount = 28;
   */
  deliveryAmount = 0;

  /**
   * Количество возвратов
   *
   * @generated from field: int32 return_amount = 29;
   */
  returnAmount = 0;

  /**
   * Стоимость логистики
   *
   * @generated from field: float delivery_rub = 30;
   */
  deliveryRub = 0;

  /**
   * Тип коробов
   *
   * @generated from field: string gi_box_type_name = 31;
   */
  giBoxTypeName = "";

  /**
   * Согласованный продуктовый дисконт
   *
   * @generated from field: float product_discount_for_report = 32;
   */
  productDiscountForReport = 0;

  /**
   * Промокод
   *
   * @generated from field: float supplier_promo = 33;
   */
  supplierPromo = 0;

  /**
   * Уникальный идентификатор заказа
   *
   * @generated from field: int32 rid = 34;
   */
  rid = 0;

  /**
   * Скидка постоянного покупателя
   *
   * @generated from field: float ppvz_spp_prc = 35;
   */
  ppvzSppPrc = 0;

  /**
   * Размер кВВ без НДС, % базовый
   *
   * @generated from field: float ppvz_kvw_prc_base = 36;
   */
  ppvzKvwPrcBase = 0;

  /**
   * Итоговый кВВ без НДС, %
   *
   * @generated from field: float ppvz_kvw_prc = 37;
   */
  ppvzKvwPrc = 0;

  /**
   * Размер снижения кВВ из-за рейтинга
   *
   * @generated from field: float sup_rating_prc_up = 38;
   */
  supRatingPrcUp = 0;

  /**
   * Размер снижения кВВ из-за акции
   *
   * @generated from field: float is_kgvp_v2 = 39;
   */
  isKgvpV2 = 0;

  /**
   * Вознаграждение с продаж до вычета услуг поверенного, без НДС
   *
   * @generated from field: float ppvz_sales_commission = 40;
   */
  ppvzSalesCommission = 0;

  /**
   * К перечислению продавцу за реализованный товар
   *
   * @generated from field: float ppvz_for_pay = 41;
   */
  ppvzForPay = 0;

  /**
   * Возмещение за выдачу и возврат товаров на ПВЗ
   *
   * @generated from field: float ppvz_reward = 42;
   */
  ppvzReward = 0;

  /**
   * Возмещение издержек по эквайрингу. <br> Издержки WB за услуги эквайринга: вычитаются из вознаграждения WB и не влияют на доход продавца. 
   *
   * @generated from field: float acquiring_fee = 43;
   */
  acquiringFee = 0;

  /**
   * Наименование банка-эквайера
   *
   * @generated from field: string acquiring_bank = 44;
   */
  acquiringBank = "";

  /**
   * Вознаграждение WB без НДС
   *
   * @generated from field: float ppvz_vw = 45;
   */
  ppvzVw = 0;

  /**
   * НДС с вознаграждения WB
   *
   * @generated from field: float ppvz_vw_nds = 46;
   */
  ppvzVwNds = 0;

  /**
   * Номер офиса
   *
   * @generated from field: int32 ppvz_office_id = 47;
   */
  ppvzOfficeId = 0;

  /**
   * Наименование офиса доставки
   *
   * @generated from field: string ppvz_office_name = 48;
   */
  ppvzOfficeName = "";

  /**
   * Номер партнера
   *
   * @generated from field: int32 ppvz_supplier_id = 49;
   */
  ppvzSupplierId = 0;

  /**
   * Партнер
   *
   * @generated from field: string ppvz_supplier_name = 50;
   */
  ppvzSupplierName = "";

  /**
   * ИНН партнера
   *
   * @generated from field: string ppvz_inn = 51;
   */
  ppvzInn = "";

  /**
   * Номер таможенной декларации
   *
   * @generated from field: string declaration_number = 52;
   */
  declarationNumber = "";

  /**
   * Обоснование штрафов и доплат. <br>Поле будет в ответе при наличии значения
   *
   * @generated from field: string bonus_type_name = 53;
   */
  bonusTypeName = "";

  /**
   * Цифровое значение стикера, который клеится на товар в процессе сборки заказа по схеме \"Маркетплейс\"
   *
   * @generated from field: string sticker_id = 54;
   */
  stickerId = "";

  /**
   * Страна продажи
   *
   * @generated from field: string site_country = 55;
   */
  siteCountry = "";

  /**
   * Штрафы
   *
   * @generated from field: float penalty = 56;
   */
  penalty = 0;

  /**
   * Доплаты
   *
   * @generated from field: float additional_payment = 57;
   */
  additionalPayment = 0;

  /**
   * Возмещение издержек по перевозке. Поле будет в ответе при наличии значения
   *
   * @generated from field: float rebill_logistic_cost = 58;
   */
  rebillLogisticCost = 0;

  /**
   * Организатор перевозки. Поле будет в ответе при наличии значения
   *
   * @generated from field: string rebill_logistic_org = 59;
   */
  rebillLogisticOrg = "";

  /**
   * Код маркировки. <br> Поле будет в ответе при наличии значения
   *
   * @generated from field: string kiz = 60;
   */
  kiz = "";

  /**
   * Стоимость хранения
   *
   * @generated from field: float storage_fee = 61;
   */
  storageFee = 0;

  /**
   * Прочие удержания/выплаты
   *
   * @generated from field: float deduction = 62;
   */
  deduction = 0;

  /**
   * Стоимость платной приёмки
   *
   * @generated from field: float acceptance = 63;
   */
  acceptance = 0;

  /**
   * Уникальный идентификатор заказа.  Примечание для использующих API Marketplace: `srid` равен `rid` в ответах методов сборочных заданий. 
   *
   * @generated from field: string srid = 64;
   */
  srid = "";

  /**
   * Тип отчёта:    * `1` — стандартный   * `2` — для уведомления о выкупе 
   *
   * @generated from field: int32 report_type = 65;
   */
  reportType = 0;

  constructor(data?: PartialMessage<DetailReportItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.statistics.v1.DetailReportItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "realizationreport_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "date_from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "date_to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "create_dt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "currency_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "suppliercontract_code", kind: "message", T: Any },
    { no: 7, name: "rrd_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "gi_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "subject_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "nm_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 11, name: "brand_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "sa_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "ts_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 14, name: "barcode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "doc_type_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 16, name: "quantity", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 17, name: "retail_price", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 18, name: "retail_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 19, name: "sale_percent", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 20, name: "commission_percent", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 21, name: "office_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 22, name: "supplier_oper_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 23, name: "order_dt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 24, name: "sale_dt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 25, name: "rr_dt", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 26, name: "shk_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 27, name: "retail_price_withdisc_rub", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 28, name: "delivery_amount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 29, name: "return_amount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 30, name: "delivery_rub", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 31, name: "gi_box_type_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 32, name: "product_discount_for_report", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 33, name: "supplier_promo", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 34, name: "rid", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 35, name: "ppvz_spp_prc", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 36, name: "ppvz_kvw_prc_base", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 37, name: "ppvz_kvw_prc", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 38, name: "sup_rating_prc_up", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 39, name: "is_kgvp_v2", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 40, name: "ppvz_sales_commission", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 41, name: "ppvz_for_pay", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 42, name: "ppvz_reward", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 43, name: "acquiring_fee", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 44, name: "acquiring_bank", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 45, name: "ppvz_vw", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 46, name: "ppvz_vw_nds", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 47, name: "ppvz_office_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 48, name: "ppvz_office_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 49, name: "ppvz_supplier_id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 50, name: "ppvz_supplier_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 51, name: "ppvz_inn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 52, name: "declaration_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 53, name: "bonus_type_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 54, name: "sticker_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 55, name: "site_country", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 56, name: "penalty", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 57, name: "additional_payment", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 58, name: "rebill_logistic_cost", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 59, name: "rebill_logistic_org", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 60, name: "kiz", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 61, name: "storage_fee", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 62, name: "deduction", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 63, name: "acceptance", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 64, name: "srid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 65, name: "report_type", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DetailReportItem {
    return new DetailReportItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DetailReportItem {
    return new DetailReportItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DetailReportItem {
    return new DetailReportItem().fromJsonString(jsonString, options);
  }

  static equals(a: DetailReportItem | PlainMessage<DetailReportItem> | undefined, b: DetailReportItem | PlainMessage<DetailReportItem> | undefined): boolean {
    return proto3.util.equals(DetailReportItem, a, b);
  }
}

