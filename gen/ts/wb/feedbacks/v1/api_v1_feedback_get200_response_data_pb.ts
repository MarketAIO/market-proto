//
//Описание API Вопросов и Отзывов
//
//`Важно.` Допускается 1 запрос в секунду на методы вопросов и отзывов в целом. При превышении лимита до 3 запросов в секунду последует блокировка на 60 секунд. 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/feedbacks/v1/api_v1_feedback_get200_response_data.proto (package wb.feedbacks.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { ApiV1FeedbackGet200ResponseDataAnswer } from "./api_v1_feedback_get200_response_data_answer_pb.js";
import { ApiV1FeedbackGet200ResponseDataProductDetails } from "./api_v1_feedback_get200_response_data_product_details_pb.js";
import { ApiV1FeedbackGet200ResponseDataPhotoLinksInner } from "./api_v1_feedback_get200_response_data_photo_links_inner_pb.js";
import { ApiV1FeedbackGet200ResponseDataVideo } from "./api_v1_feedback_get200_response_data_video_pb.js";

/**
 * @generated from message wb.feedbacks.v1.ApiV1FeedbackGet200ResponseData
 */
export class ApiV1FeedbackGet200ResponseData extends Message<ApiV1FeedbackGet200ResponseData> {
  /**
   * Идентификатор отзыва
   *
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * Имя автора отзыва
   *
   * @generated from field: string userName = 2;
   */
  userName = "";

  /**
   * Соответствие заявленного размера реальному. <br>Возможные значения: - ` ` - для безразмерных товаров - `ок` - соответствует размеру - `smaller` - маломерит - `bigger` - большемерит         
   *
   * @generated from field: string matchingSize = 3;
   */
  matchingSize = "";

  /**
   * Текст отзыва
   *
   * @generated from field: string text = 4;
   */
  text = "";

  /**
   * Оценка товара
   *
   * @generated from field: int32 productValuation = 5;
   */
  productValuation = 0;

  /**
   * Дата и время создания отзыва
   *
   * @generated from field: string createdDate = 6;
   */
  createdDate = "";

  /**
   * Статус отзыва:   - `none` - не обработан (новый)   - `wbRu` - обработан 
   *
   * @generated from field: string state = 7;
   */
  state = "";

  /**
   * @generated from field: wb.feedbacks.v1.ApiV1FeedbackGet200ResponseDataAnswer answer = 8;
   */
  answer?: ApiV1FeedbackGet200ResponseDataAnswer;

  /**
   * @generated from field: wb.feedbacks.v1.ApiV1FeedbackGet200ResponseDataProductDetails productDetails = 9;
   */
  productDetails?: ApiV1FeedbackGet200ResponseDataProductDetails;

  /**
   * Массив структур фотографий
   *
   * @generated from field: repeated wb.feedbacks.v1.ApiV1FeedbackGet200ResponseDataPhotoLinksInner photoLinks = 10;
   */
  photoLinks: ApiV1FeedbackGet200ResponseDataPhotoLinksInner[] = [];

  /**
   * @generated from field: wb.feedbacks.v1.ApiV1FeedbackGet200ResponseDataVideo video = 11;
   */
  video?: ApiV1FeedbackGet200ResponseDataVideo;

  /**
   * Просмотрен ли отзыв
   *
   * @generated from field: bool wasViewed = 12;
   */
  wasViewed = false;

  /**
   * Доступна ли продавцу оценка отзыва (`true` - доступна, `false` - не доступна)
   *
   * @generated from field: bool isAbleSupplierFeedbackValuation = 13;
   */
  isAbleSupplierFeedbackValuation = false;

  /**
   * Оценка отзыва, оставленная продавцом
   *
   * @generated from field: int32 supplierFeedbackValuation = 14;
   */
  supplierFeedbackValuation = 0;

  /**
   * Доступна ли продавцу оценка товара (`true` - доступна, `false` - не доступна)
   *
   * @generated from field: bool isAbleSupplierProductValuation = 15;
   */
  isAbleSupplierProductValuation = false;

  /**
   * Оценка товара, оставленная продавцом
   *
   * @generated from field: int32 supplierProductValuation = 16;
   */
  supplierProductValuation = 0;

  /**
   * Доступна ли товару опция возврата (`false` - нет, `true` - да)
   *
   * @generated from field: bool isAbleReturnProductOrders = 17;
   */
  isAbleReturnProductOrders = false;

  /**
   * Дата и время, когда на запрос возврата был получен ответ со статус-кодом 200.
   *
   * @generated from field: string returnProductOrdersDate = 18;
   */
  returnProductOrdersDate = "";

  /**
   * Список тегов покупателя
   *
   * @generated from field: repeated string bables = 19;
   */
  bables: string[] = [];

  constructor(data?: PartialMessage<ApiV1FeedbackGet200ResponseData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.feedbacks.v1.ApiV1FeedbackGet200ResponseData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "userName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "matchingSize", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "productValuation", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "createdDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "answer", kind: "message", T: ApiV1FeedbackGet200ResponseDataAnswer },
    { no: 9, name: "productDetails", kind: "message", T: ApiV1FeedbackGet200ResponseDataProductDetails },
    { no: 10, name: "photoLinks", kind: "message", T: ApiV1FeedbackGet200ResponseDataPhotoLinksInner, repeated: true },
    { no: 11, name: "video", kind: "message", T: ApiV1FeedbackGet200ResponseDataVideo },
    { no: 12, name: "wasViewed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 13, name: "isAbleSupplierFeedbackValuation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 14, name: "supplierFeedbackValuation", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 15, name: "isAbleSupplierProductValuation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 16, name: "supplierProductValuation", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 17, name: "isAbleReturnProductOrders", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 18, name: "returnProductOrdersDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 19, name: "bables", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV1FeedbackGet200ResponseData {
    return new ApiV1FeedbackGet200ResponseData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV1FeedbackGet200ResponseData {
    return new ApiV1FeedbackGet200ResponseData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV1FeedbackGet200ResponseData {
    return new ApiV1FeedbackGet200ResponseData().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV1FeedbackGet200ResponseData | PlainMessage<ApiV1FeedbackGet200ResponseData> | undefined, b: ApiV1FeedbackGet200ResponseData | PlainMessage<ApiV1FeedbackGet200ResponseData> | undefined): boolean {
    return proto3.util.equals(ApiV1FeedbackGet200ResponseData, a, b);
  }
}

