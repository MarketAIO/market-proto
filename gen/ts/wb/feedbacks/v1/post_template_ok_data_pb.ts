//
//Описание API Вопросов и Отзывов
//
//`Важно.` Допускается 1 запрос в секунду на методы вопросов и отзывов в целом. При превышении лимита до 3 запросов в секунду последует блокировка на 60 секунд. 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/feedbacks/v1/post_template_ok_data.proto (package wb.feedbacks.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.feedbacks.v1.PostTemplateOKData
 */
export class PostTemplateOKData extends Message<PostTemplateOKData> {
  /**
   * Идентификатор шаблона
   *
   * @generated from field: string id = 1;
   */
  id = "";

  constructor(data?: PartialMessage<PostTemplateOKData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.feedbacks.v1.PostTemplateOKData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PostTemplateOKData {
    return new PostTemplateOKData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PostTemplateOKData {
    return new PostTemplateOKData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PostTemplateOKData {
    return new PostTemplateOKData().fromJsonString(jsonString, options);
  }

  static equals(a: PostTemplateOKData | PlainMessage<PostTemplateOKData> | undefined, b: PostTemplateOKData | PlainMessage<PostTemplateOKData> | undefined): boolean {
    return proto3.util.equals(PostTemplateOKData, a, b);
  }
}

