//
//Тарифы
//
//<p>Комиссии и тарифы на услуги можно получить с любым токеном, у которого не выбрана опция Тестовый контур.</p>
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/tariffs/v1/service.proto (package wb.tariffs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.tariffs.v1.ApiV1TariffsBoxGetRequest
 */
export class ApiV1TariffsBoxGetRequest extends Message<ApiV1TariffsBoxGetRequest> {
  /**
   * Дата в формате ГГГГ-ММ-ДД
   *
   * @generated from field: string date = 1;
   */
  date = "";

  constructor(data?: PartialMessage<ApiV1TariffsBoxGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.tariffs.v1.ApiV1TariffsBoxGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV1TariffsBoxGetRequest {
    return new ApiV1TariffsBoxGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV1TariffsBoxGetRequest {
    return new ApiV1TariffsBoxGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV1TariffsBoxGetRequest {
    return new ApiV1TariffsBoxGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV1TariffsBoxGetRequest | PlainMessage<ApiV1TariffsBoxGetRequest> | undefined, b: ApiV1TariffsBoxGetRequest | PlainMessage<ApiV1TariffsBoxGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV1TariffsBoxGetRequest, a, b);
  }
}

/**
 * @generated from message wb.tariffs.v1.ApiV1TariffsCommissionGetRequest
 */
export class ApiV1TariffsCommissionGetRequest extends Message<ApiV1TariffsCommissionGetRequest> {
  /**
   * Язык полей ответа `parentName` и `subjectName`:     - `ru` — русский   - `en` — английский   - `zh` — китайский 
   *
   * @generated from field: string locale = 1;
   */
  locale = "";

  constructor(data?: PartialMessage<ApiV1TariffsCommissionGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.tariffs.v1.ApiV1TariffsCommissionGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "locale", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV1TariffsCommissionGetRequest {
    return new ApiV1TariffsCommissionGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV1TariffsCommissionGetRequest {
    return new ApiV1TariffsCommissionGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV1TariffsCommissionGetRequest {
    return new ApiV1TariffsCommissionGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV1TariffsCommissionGetRequest | PlainMessage<ApiV1TariffsCommissionGetRequest> | undefined, b: ApiV1TariffsCommissionGetRequest | PlainMessage<ApiV1TariffsCommissionGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV1TariffsCommissionGetRequest, a, b);
  }
}

/**
 * @generated from message wb.tariffs.v1.ApiV1TariffsPalletGetRequest
 */
export class ApiV1TariffsPalletGetRequest extends Message<ApiV1TariffsPalletGetRequest> {
  /**
   * Дата в формате ГГГГ-ММ-ДД
   *
   * @generated from field: string date = 1;
   */
  date = "";

  constructor(data?: PartialMessage<ApiV1TariffsPalletGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.tariffs.v1.ApiV1TariffsPalletGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV1TariffsPalletGetRequest {
    return new ApiV1TariffsPalletGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV1TariffsPalletGetRequest {
    return new ApiV1TariffsPalletGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV1TariffsPalletGetRequest {
    return new ApiV1TariffsPalletGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV1TariffsPalletGetRequest | PlainMessage<ApiV1TariffsPalletGetRequest> | undefined, b: ApiV1TariffsPalletGetRequest | PlainMessage<ApiV1TariffsPalletGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV1TariffsPalletGetRequest, a, b);
  }
}

/**
 * @generated from message wb.tariffs.v1.ApiV1TariffsReturnGetRequest
 */
export class ApiV1TariffsReturnGetRequest extends Message<ApiV1TariffsReturnGetRequest> {
  /**
   * Дата в формате ГГГГ-ММ-ДД
   *
   * @generated from field: string date = 1;
   */
  date = "";

  constructor(data?: PartialMessage<ApiV1TariffsReturnGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.tariffs.v1.ApiV1TariffsReturnGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "date", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV1TariffsReturnGetRequest {
    return new ApiV1TariffsReturnGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV1TariffsReturnGetRequest {
    return new ApiV1TariffsReturnGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV1TariffsReturnGetRequest {
    return new ApiV1TariffsReturnGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV1TariffsReturnGetRequest | PlainMessage<ApiV1TariffsReturnGetRequest> | undefined, b: ApiV1TariffsReturnGetRequest | PlainMessage<ApiV1TariffsReturnGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV1TariffsReturnGetRequest, a, b);
  }
}

