//
//Тарифы
//
//<p>Комиссии и тарифы на услуги можно получить с любым токеном, у которого не выбрана опция Тестовый контур.</p>
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/tariffs/v1/models_warehouse_pallet_rates.proto (package wb.tariffs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.tariffs.v1.ModelsWarehousePalletRates
 */
export class ModelsWarehousePalletRates extends Message<ModelsWarehousePalletRates> {
  /**
   * Коэффициент доставки, %. На него умножается стоимость доставки. Во всех тарифах этот коэффициент уже учтён
   *
   * @generated from field: string palletDeliveryExpr = 1;
   */
  palletDeliveryExpr = "";

  /**
   * Доставка 1 литра, ₽
   *
   * @generated from field: string palletDeliveryValueBase = 2;
   */
  palletDeliveryValueBase = "";

  /**
   * Доставка каждого дополнительного литра, ₽
   *
   * @generated from field: string palletDeliveryValueLiter = 3;
   */
  palletDeliveryValueLiter = "";

  /**
   * Коэффициент хранения, %. На него умножается стоимость хранения. Во всех тарифах этот коэффициент уже учтён
   *
   * @generated from field: string palletStorageExpr = 4;
   */
  palletStorageExpr = "";

  /**
   * Хранение 1 монопалеты, ₽
   *
   * @generated from field: string palletStorageValueExpr = 5;
   */
  palletStorageValueExpr = "";

  /**
   * Название склада
   *
   * @generated from field: string warehouseName = 6;
   */
  warehouseName = "";

  constructor(data?: PartialMessage<ModelsWarehousePalletRates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.tariffs.v1.ModelsWarehousePalletRates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "palletDeliveryExpr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "palletDeliveryValueBase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "palletDeliveryValueLiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "palletStorageExpr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "palletStorageValueExpr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "warehouseName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ModelsWarehousePalletRates {
    return new ModelsWarehousePalletRates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ModelsWarehousePalletRates {
    return new ModelsWarehousePalletRates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ModelsWarehousePalletRates {
    return new ModelsWarehousePalletRates().fromJsonString(jsonString, options);
  }

  static equals(a: ModelsWarehousePalletRates | PlainMessage<ModelsWarehousePalletRates> | undefined, b: ModelsWarehousePalletRates | PlainMessage<ModelsWarehousePalletRates> | undefined): boolean {
    return proto3.util.equals(ModelsWarehousePalletRates, a, b);
  }
}

