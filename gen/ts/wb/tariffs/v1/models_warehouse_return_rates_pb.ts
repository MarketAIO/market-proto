//
//Тарифы
//
//<p>Комиссии и тарифы на услуги можно получить с любым токеном, у которого не выбрана опция Тестовый контур.</p>
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/tariffs/v1/models_warehouse_return_rates.proto (package wb.tariffs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.tariffs.v1.ModelsWarehouseReturnRates
 */
export class ModelsWarehouseReturnRates extends Message<ModelsWarehouseReturnRates> {
  /**
   * <p><b>Стоимость возврата при грузовой доставке, доставка на ПВЗ (базовая цена за 1 л), ₽</b></p> <p>Применяется для крупногабаритных товаров, когда:<p> <ul>   <li>продавец хочет вывезти товары со склада Wildberries;</li>   <li>на складе обнаружили бракованные товары;</li>   <li>покупатель возвращает товар, но его нельзя вернуть в продажу.</li> </ul> 
   *
   * @generated from field: string deliveryDumpKgtOfficeBase = 1;
   */
  deliveryDumpKgtOfficeBase = "";

  /**
   * <p><b>Стоимость возврата при грузовой доставке, доставка на ПВЗ (доп. литр), ₽</b></p> <p>Стоимость за каждый дополнительный литр.</p> 
   *
   * @generated from field: string deliveryDumpKgtOfficeLiter = 2;
   */
  deliveryDumpKgtOfficeLiter = "";

  /**
   * <p><b>Стоимость возврата при грузовой доставке, обратная логистика невостребованного возврата, ₽</b><p> <p>Грузовая доставка невостребованного возврата обратно на склад Wildberries. За единицу товара.</p> 
   *
   * @generated from field: string deliveryDumpKgtReturnExpr = 3;
   */
  deliveryDumpKgtReturnExpr = "";

  /**
   * <p><b>Стоимость возврата неопознанного складом товара за каждую единицу, доставка на ПВЗ, ₽</b></p> <p>Применяется для товаров, которые не смогли принять на складе</p>. 
   *
   * @generated from field: string deliveryDumpSrgOfficeExpr = 4;
   */
  deliveryDumpSrgOfficeExpr = "";

  /**
   * <p><b>Стоимость возврата неопознанного складом товара за каждую единицу, обратная логистика невостребованного возврата</b></p> <p>Доставка невостребованного возврата обратно на склад Wildberries.</p>
   *
   * @generated from field: string deliveryDumpSrgReturnExpr = 5;
   */
  deliveryDumpSrgReturnExpr = "";

  /**
   * Стоимость возврата, доставка курьером (базовая цена за 1 л). Сейчас этот тариф не применяется
   *
   * @generated from field: string deliveryDumpSupCourierBase = 6;
   */
  deliveryDumpSupCourierBase = "";

  /**
   * Стоимость возврата, доставка курьером (доп. л). Сейчас этот тариф не применяется
   *
   * @generated from field: string deliveryDumpSupCourierLiter = 7;
   */
  deliveryDumpSupCourierLiter = "";

  /**
   * <p><b>Стоимость возврата, доставка на ПВЗ (базовая цена за 1 л), ₽</b></p> <p>Применяется, когда:<p> <ul> <li>продавец хочет вывезти товары со склада Wildberries;</li> <li>на складе обнаружили бракованные товары;</li> <li>покупатель возвращает товар, но его нельзя вернуть в продажу.</li> </ul>
   *
   * @generated from field: string deliveryDumpSupOfficeBase = 8;
   */
  deliveryDumpSupOfficeBase = "";

  /**
   * <p><b>Стоимость возврата, доставка на ПВЗ (доп. литр), ₽</b></p> <p>Стоимость за каждый дополнительный литр</p>
   *
   * @generated from field: string deliveryDumpSupOfficeLiter = 9;
   */
  deliveryDumpSupOfficeLiter = "";

  /**
   * <p><b>Стоимость возврата, обратная логистика невостребованного возврата, за единицу товара, ₽</b></p> 
   *
   * @generated from field: string deliveryDumpSupReturnExpr = 10;
   */
  deliveryDumpSupReturnExpr = "";

  /**
   * Название склада
   *
   * @generated from field: string warehouseName = 11;
   */
  warehouseName = "";

  constructor(data?: PartialMessage<ModelsWarehouseReturnRates>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.tariffs.v1.ModelsWarehouseReturnRates";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deliveryDumpKgtOfficeBase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "deliveryDumpKgtOfficeLiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "deliveryDumpKgtReturnExpr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "deliveryDumpSrgOfficeExpr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "deliveryDumpSrgReturnExpr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "deliveryDumpSupCourierBase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "deliveryDumpSupCourierLiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "deliveryDumpSupOfficeBase", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "deliveryDumpSupOfficeLiter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "deliveryDumpSupReturnExpr", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "warehouseName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ModelsWarehouseReturnRates {
    return new ModelsWarehouseReturnRates().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ModelsWarehouseReturnRates {
    return new ModelsWarehouseReturnRates().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ModelsWarehouseReturnRates {
    return new ModelsWarehouseReturnRates().fromJsonString(jsonString, options);
  }

  static equals(a: ModelsWarehouseReturnRates | PlainMessage<ModelsWarehouseReturnRates> | undefined, b: ModelsWarehouseReturnRates | PlainMessage<ModelsWarehouseReturnRates> | undefined): boolean {
    return proto3.util.equals(ModelsWarehouseReturnRates, a, b);
  }
}

