//
//Тарифы
//
//<p>Комиссии и тарифы на услуги можно получить с любым токеном, у которого не выбрана опция Тестовый контур.</p>
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/tariffs/v1/commission_korea.proto (package wb.tariffs.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { CommissionKoreaReportInner } from "./commission_korea_report_inner_pb.js";

/**
 * @generated from message wb.tariffs.v1.CommissionKorea
 */
export class CommissionKorea extends Message<CommissionKorea> {
  /**
   * Список комиссий
   *
   * @generated from field: repeated wb.tariffs.v1.CommissionKoreaReportInner report = 1;
   */
  report: CommissionKoreaReportInner[] = [];

  constructor(data?: PartialMessage<CommissionKorea>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.tariffs.v1.CommissionKorea";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "report", kind: "message", T: CommissionKoreaReportInner, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CommissionKorea {
    return new CommissionKorea().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CommissionKorea {
    return new CommissionKorea().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CommissionKorea {
    return new CommissionKorea().fromJsonString(jsonString, options);
  }

  static equals(a: CommissionKorea | PlainMessage<CommissionKorea> | undefined, b: CommissionKorea | PlainMessage<CommissionKorea> | undefined): boolean {
    return proto3.util.equals(CommissionKorea, a, b);
  }
}

