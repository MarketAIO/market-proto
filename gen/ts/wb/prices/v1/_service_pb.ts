//
//API цен и скидок
//
//С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов. 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/prices/v1/_service.proto (package wb.prices.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
    BinaryReadOptions,
    FieldList,
    JsonReadOptions,
    JsonValue,
    PartialMessage,
    PlainMessage
} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";
import {ApiV2UploadTaskPostReq} from "./api_v2_upload_task_post_request_pb.js";
import {ApiV2UploadTaskSizePostReq} from "./api_v2_upload_task_size_post_request_pb.js";

/**
 * @generated from message wb.prices.v1.ApiV2BufferGoodsTaskGetRequest
 */
export class ApiV2BufferGoodsTaskGetRequest extends Message<ApiV2BufferGoodsTaskGetRequest> {
  /**
   * Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов
   *
   * @generated from field: int32 limit = 1;
   */
  limit = 0;

  /**
   * ID загрузки
   *
   * @generated from field: int32 uploadID = 2;
   */
  uploadID = 0;

  /**
   * Сколько элементов пропустить
   *
   * @generated from field: int32 offset = 3;
   */
  offset = 0;

  constructor(data?: PartialMessage<ApiV2BufferGoodsTaskGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.ApiV2BufferGoodsTaskGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "uploadID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV2BufferGoodsTaskGetRequest {
    return new ApiV2BufferGoodsTaskGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV2BufferGoodsTaskGetRequest {
    return new ApiV2BufferGoodsTaskGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV2BufferGoodsTaskGetRequest {
    return new ApiV2BufferGoodsTaskGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV2BufferGoodsTaskGetRequest | PlainMessage<ApiV2BufferGoodsTaskGetRequest> | undefined, b: ApiV2BufferGoodsTaskGetRequest | PlainMessage<ApiV2BufferGoodsTaskGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV2BufferGoodsTaskGetRequest, a, b);
  }
}

/**
 * @generated from message wb.prices.v1.ApiV2BufferTasksGetRequest
 */
export class ApiV2BufferTasksGetRequest extends Message<ApiV2BufferTasksGetRequest> {
  /**
   * ID загрузки
   *
   * @generated from field: int32 uploadID = 1;
   */
  uploadID = 0;

  constructor(data?: PartialMessage<ApiV2BufferTasksGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.ApiV2BufferTasksGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uploadID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV2BufferTasksGetRequest {
    return new ApiV2BufferTasksGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV2BufferTasksGetRequest {
    return new ApiV2BufferTasksGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV2BufferTasksGetRequest {
    return new ApiV2BufferTasksGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV2BufferTasksGetRequest | PlainMessage<ApiV2BufferTasksGetRequest> | undefined, b: ApiV2BufferTasksGetRequest | PlainMessage<ApiV2BufferTasksGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV2BufferTasksGetRequest, a, b);
  }
}

/**
 * @generated from message wb.prices.v1.ApiV2HistoryGoodsTaskGetRequest
 */
export class ApiV2HistoryGoodsTaskGetRequest extends Message<ApiV2HistoryGoodsTaskGetRequest> {
  /**
   * Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов
   *
   * @generated from field: int32 limit = 1;
   */
  limit = 0;

  /**
   * ID загрузки
   *
   * @generated from field: int32 uploadID = 2;
   */
  uploadID = 0;

  /**
   * Сколько элементов пропустить
   *
   * @generated from field: int32 offset = 3;
   */
  offset = 0;

  constructor(data?: PartialMessage<ApiV2HistoryGoodsTaskGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.ApiV2HistoryGoodsTaskGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "uploadID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV2HistoryGoodsTaskGetRequest {
    return new ApiV2HistoryGoodsTaskGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV2HistoryGoodsTaskGetRequest {
    return new ApiV2HistoryGoodsTaskGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV2HistoryGoodsTaskGetRequest {
    return new ApiV2HistoryGoodsTaskGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV2HistoryGoodsTaskGetRequest | PlainMessage<ApiV2HistoryGoodsTaskGetRequest> | undefined, b: ApiV2HistoryGoodsTaskGetRequest | PlainMessage<ApiV2HistoryGoodsTaskGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV2HistoryGoodsTaskGetRequest, a, b);
  }
}

/**
 * @generated from message wb.prices.v1.ApiV2HistoryTasksGetRequest
 */
export class ApiV2HistoryTasksGetRequest extends Message<ApiV2HistoryTasksGetRequest> {
  /**
   * ID загрузки
   *
   * @generated from field: int32 uploadID = 1;
   */
  uploadID = 0;

  constructor(data?: PartialMessage<ApiV2HistoryTasksGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.ApiV2HistoryTasksGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uploadID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV2HistoryTasksGetRequest {
    return new ApiV2HistoryTasksGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV2HistoryTasksGetRequest {
    return new ApiV2HistoryTasksGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV2HistoryTasksGetRequest {
    return new ApiV2HistoryTasksGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV2HistoryTasksGetRequest | PlainMessage<ApiV2HistoryTasksGetRequest> | undefined, b: ApiV2HistoryTasksGetRequest | PlainMessage<ApiV2HistoryTasksGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV2HistoryTasksGetRequest, a, b);
  }
}

/**
 * @generated from message wb.prices.v1.ApiV2ListGoodsFilterGetRequest
 */
export class ApiV2ListGoodsFilterGetRequest extends Message<ApiV2ListGoodsFilterGetRequest> {
  /**
   * Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов
   *
   * @generated from field: int32 limit = 1;
   */
  limit = 0;

  /**
   * Сколько элементов пропустить
   *
   * @generated from field: int32 offset = 2;
   */
  offset = 0;

  /**
   * Артикул Wildberries, по которому искать товар
   *
   * @generated from field: int32 filterNmID = 3;
   */
  filterNmID = 0;

  constructor(data?: PartialMessage<ApiV2ListGoodsFilterGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.ApiV2ListGoodsFilterGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "filterNmID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV2ListGoodsFilterGetRequest {
    return new ApiV2ListGoodsFilterGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV2ListGoodsFilterGetRequest {
    return new ApiV2ListGoodsFilterGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV2ListGoodsFilterGetRequest {
    return new ApiV2ListGoodsFilterGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV2ListGoodsFilterGetRequest | PlainMessage<ApiV2ListGoodsFilterGetRequest> | undefined, b: ApiV2ListGoodsFilterGetRequest | PlainMessage<ApiV2ListGoodsFilterGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV2ListGoodsFilterGetRequest, a, b);
  }
}

/**
 * @generated from message wb.prices.v1.ApiV2ListGoodsSizeNmGetRequest
 */
export class ApiV2ListGoodsSizeNmGetRequest extends Message<ApiV2ListGoodsSizeNmGetRequest> {
  /**
   * Сколько элементов вывести на одной странице (пагинация). Максимум 1 000 элементов
   *
   * @generated from field: int32 limit = 1;
   */
  limit = 0;

  /**
   * Артикул Wildberries
   *
   * @generated from field: int32 nmID = 2;
   */
  nmID = 0;

  /**
   * Сколько элементов пропустить
   *
   * @generated from field: int32 offset = 3;
   */
  offset = 0;

  constructor(data?: PartialMessage<ApiV2ListGoodsSizeNmGetRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.ApiV2ListGoodsSizeNmGetRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "limit", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "nmID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "offset", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV2ListGoodsSizeNmGetRequest {
    return new ApiV2ListGoodsSizeNmGetRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV2ListGoodsSizeNmGetRequest {
    return new ApiV2ListGoodsSizeNmGetRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV2ListGoodsSizeNmGetRequest {
    return new ApiV2ListGoodsSizeNmGetRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV2ListGoodsSizeNmGetRequest | PlainMessage<ApiV2ListGoodsSizeNmGetRequest> | undefined, b: ApiV2ListGoodsSizeNmGetRequest | PlainMessage<ApiV2ListGoodsSizeNmGetRequest> | undefined): boolean {
    return proto3.util.equals(ApiV2ListGoodsSizeNmGetRequest, a, b);
  }
}

/**
 * @generated from message wb.prices.v1.ApiV2UploadTaskPostRequest
 */
export class ApiV2UploadTaskPostRequest extends Message<ApiV2UploadTaskPostRequest> {
  /**
   * @generated from field: wb.prices.v1.ApiV2UploadTaskPostReq apiV2UploadTaskPostReq = 1;
   */
  apiV2UploadTaskPostReq?: ApiV2UploadTaskPostReq;

  constructor(data?: PartialMessage<ApiV2UploadTaskPostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.ApiV2UploadTaskPostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apiV2UploadTaskPostReq", kind: "message", T: ApiV2UploadTaskPostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV2UploadTaskPostRequest {
    return new ApiV2UploadTaskPostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV2UploadTaskPostRequest {
    return new ApiV2UploadTaskPostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV2UploadTaskPostRequest {
    return new ApiV2UploadTaskPostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV2UploadTaskPostRequest | PlainMessage<ApiV2UploadTaskPostRequest> | undefined, b: ApiV2UploadTaskPostRequest | PlainMessage<ApiV2UploadTaskPostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV2UploadTaskPostRequest, a, b);
  }
}

/**
 * @generated from message wb.prices.v1.ApiV2UploadTaskSizePostRequest
 */
export class ApiV2UploadTaskSizePostRequest extends Message<ApiV2UploadTaskSizePostRequest> {
  /**
   * @generated from field: wb.prices.v1.ApiV2UploadTaskSizePostReq apiV2UploadTaskSizePostReq = 1;
   */
  apiV2UploadTaskSizePostReq?: ApiV2UploadTaskSizePostReq;

  constructor(data?: PartialMessage<ApiV2UploadTaskSizePostRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.ApiV2UploadTaskSizePostRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "apiV2UploadTaskSizePostReq", kind: "message", T: ApiV2UploadTaskSizePostReq },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ApiV2UploadTaskSizePostRequest {
    return new ApiV2UploadTaskSizePostRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ApiV2UploadTaskSizePostRequest {
    return new ApiV2UploadTaskSizePostRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ApiV2UploadTaskSizePostRequest {
    return new ApiV2UploadTaskSizePostRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ApiV2UploadTaskSizePostRequest | PlainMessage<ApiV2UploadTaskSizePostRequest> | undefined, b: ApiV2UploadTaskSizePostRequest | PlainMessage<ApiV2UploadTaskSizePostRequest> | undefined): boolean {
    return proto3.util.equals(ApiV2UploadTaskSizePostRequest, a, b);
  }
}

