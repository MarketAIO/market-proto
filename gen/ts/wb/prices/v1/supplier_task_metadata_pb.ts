//
//API цен и скидок
//
//С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов. 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/prices/v1/supplier_task_metadata.proto (package wb.prices.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.prices.v1.SupplierTaskMetadata
 */
export class SupplierTaskMetadata extends Message<SupplierTaskMetadata> {
  /**
   * ID загрузки
   *
   * @generated from field: int32 uploadID = 1;
   */
  uploadID = 0;

  /**
   * Статус загрузки:    * `3` — обработана, в товарах нет ошибок, цены и скидки обновились   * `4` — отменена   * `5` — обработана, но в товарах есть ошибки. Для товаров без ошибок цены и скидки обновились, а ошибки в остальных товарах можно получить с помощью метода [Детализация обработанной загрузки](#tag/Istoriya-zagruzok/paths/~1api~1v2~1history~1goods~1task/get)   * `6` — обработана, но во всех товарах есть ошибки. Их тоже можно получить с помощью метода [Детализация обработанной загрузки](#tag/Istoriya-zagruzok/paths/~1api~1v2~1history~1goods~1task/get) 
   *
   * @generated from field: int32 status = 2;
   */
  status = 0;

  /**
   * Дата и время, когда загрузка создана
   *
   * @generated from field: string uploadDate = 3;
   */
  uploadDate = "";

  /**
   * Дата и время, когда загрузка отправляется в обработку
   *
   * @generated from field: string activationDate = 4;
   */
  activationDate = "";

  /**
   * Всего товаров
   *
   * @generated from field: int32 overAllGoodsNumber = 5;
   */
  overAllGoodsNumber = 0;

  /**
   * Товаров без ошибок
   *
   * @generated from field: int32 successGoodsNumber = 6;
   */
  successGoodsNumber = 0;

  constructor(data?: PartialMessage<SupplierTaskMetadata>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.SupplierTaskMetadata";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "uploadID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "status", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "uploadDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "activationDate", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "overAllGoodsNumber", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "successGoodsNumber", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SupplierTaskMetadata {
    return new SupplierTaskMetadata().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SupplierTaskMetadata {
    return new SupplierTaskMetadata().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SupplierTaskMetadata {
    return new SupplierTaskMetadata().fromJsonString(jsonString, options);
  }

  static equals(a: SupplierTaskMetadata | PlainMessage<SupplierTaskMetadata> | undefined, b: SupplierTaskMetadata | PlainMessage<SupplierTaskMetadata> | undefined): boolean {
    return proto3.util.equals(SupplierTaskMetadata, a, b);
  }
}

