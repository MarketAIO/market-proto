//
//API цен и скидок
//
//С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов. 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/prices/v1/task_created_data.proto (package wb.prices.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.prices.v1.TaskCreatedData
 */
export class TaskCreatedData extends Message<TaskCreatedData> {
  /**
   * ID загрузки
   *
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * Флаг дублирования загрузки: `true` — такая загрузка уже есть 
   *
   * @generated from field: bool alreadyExists = 2;
   */
  alreadyExists = false;

  constructor(data?: PartialMessage<TaskCreatedData>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.TaskCreatedData";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "alreadyExists", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TaskCreatedData {
    return new TaskCreatedData().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TaskCreatedData {
    return new TaskCreatedData().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TaskCreatedData {
    return new TaskCreatedData().fromJsonString(jsonString, options);
  }

  static equals(a: TaskCreatedData | PlainMessage<TaskCreatedData> | undefined, b: TaskCreatedData | PlainMessage<TaskCreatedData> | undefined): boolean {
    return proto3.util.equals(TaskCreatedData, a, b);
  }
}

