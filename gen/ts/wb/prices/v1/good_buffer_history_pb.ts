//
//API цен и скидок
//
//С помощью этих методов можно устанавливать цены и скидки. Максимум — 10 запросов за 6 секунд суммарно для всех методов. 
//
//The version of the OpenAPI document: 
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file wb/prices/v1/good_buffer_history.proto (package wb.prices.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message wb.prices.v1.GoodBufferHistory
 */
export class GoodBufferHistory extends Message<GoodBufferHistory> {
  /**
   * Артикул Wildberries
   *
   * @generated from field: int32 nmID = 1;
   */
  nmID = 0;

  /**
   * Артикул продавца
   *
   * @generated from field: string vendorCode = 2;
   */
  vendorCode = "";

  /**
   * ID размера. В методах контента это поле `chrtID`
   *
   * @generated from field: int32 sizeID = 3;
   */
  sizeID = 0;

  /**
   * Размер
   *
   * @generated from field: string techSizeName = 4;
   */
  techSizeName = "";

  /**
   * Цена
   *
   * @generated from field: int32 price = 5;
   */
  price = 0;

  /**
   * Валюта, по стандарту ISO 4217
   *
   * @generated from field: string currencyIsoCode4217 = 6;
   */
  currencyIsoCode4217 = "";

  /**
   * Скидка, %
   *
   * @generated from field: int32 discount = 7;
   */
  discount = 0;

  /**
   * Статус товара: `1` — в обработке 
   *
   * @generated from field: int32 status = 8;
   */
  status = 0;

  /**
   * Текст ошибки
   *
   * @generated from field: string errorText = 9;
   */
  errorText = "";

  constructor(data?: PartialMessage<GoodBufferHistory>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "wb.prices.v1.GoodBufferHistory";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "nmID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "vendorCode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "sizeID", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "techSizeName", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "price", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "currencyIsoCode4217", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "discount", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 8, name: "status", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 9, name: "errorText", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GoodBufferHistory {
    return new GoodBufferHistory().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GoodBufferHistory {
    return new GoodBufferHistory().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GoodBufferHistory {
    return new GoodBufferHistory().fromJsonString(jsonString, options);
  }

  static equals(a: GoodBufferHistory | PlainMessage<GoodBufferHistory> | undefined, b: GoodBufferHistory | PlainMessage<GoodBufferHistory> | undefined): boolean {
    return proto3.util.equals(GoodBufferHistory, a, b);
  }
}

